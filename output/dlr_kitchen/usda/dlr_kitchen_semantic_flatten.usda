#usda 1.0
(
    defaultPrim = "dlr_kitchen"
    doc = """Generated from Composed Stage of root layer /media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen.usda
"""
    metersPerUnit = 1
    upAxis = "Z"
)

class "_class_SOMA_namespace" (
    apiSchemas = ["RdfAPI"]
)
{
    string rdf:namespace = "http://www.ease-crc.org/ont/SOMA.owl#"
}

class "_class_DUL_namespace" (
    apiSchemas = ["RdfAPI"]
)
{
    string rdf:namespace = "http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#"
}

class "_class_owl_namespace" (
    apiSchemas = ["RdfAPI"]
)
{
    string rdf:namespace = "http://www.w3.org/2002/07/owl#"
}

class "_class_SOMA_DFL_namespace" (
    apiSchemas = ["RdfAPI"]
)
{
    string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
}

def Urdf "urdf"
{
    string urdf:name = "dlr_kitchen"

    def UrdfRobot "robot"
    {
        def UrdfMaterial "materials"
        {
        }
    }
}

def Xform "dlr_kitchen" (
    apiSchemas = ["UrdfLinkAPI", "SemanticTagAPI"]
)
{
    rel semanticTag:semanticLabels = </SOMA_DFL/_class_kitchennwnartifact>
    rel semanticTag:semanticReports = </SOMA_DFL/_class_kitchennwnartifact>

    def Xform "kitchenette" (
        apiSchemas = ["UrdfLinkAPI", "SemanticTagAPI"]
    )
    {
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (2.4646999835968018, 3.9658401012420654, 0.786208987236023, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_kitchenette_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.57734716, 0.57735646, -0.5773472), (-0.57735956, 0.57734066, -0.5773506), (-0.57734716, 0.57735646, 0.5773472), (0.57734716, 0.57735646, -0.5773472), (-0.57734716, 0.57735646, 0.5773472), (0.57735956, 0.57734066, 0.5773506), (-0.57735956, 0.57734066, -0.5773506), (-0.57734716, -0.57735646, -0.5773472), (-0.57735956, -0.57734066, 0.5773506), (-0.57735956, 0.57734066, -0.5773506), (-0.57735956, -0.57734066, 0.5773506), (-0.57734716, 0.57735646, 0.5773472), (-0.57734716, -0.57735646, -0.5773472), (0.57735956, -0.57734066, -0.5773506), (0.57734716, -0.57735646, 0.5773472), (-0.57734716, -0.57735646, -0.5773472), (0.57734716, -0.57735646, 0.5773472), (-0.57735956, -0.57734066, 0.5773506), (0.57735956, -0.57734066, -0.5773506), (0.57734716, 0.57735646, -0.5773472), (0.57735956, 0.57734066, 0.5773506), (0.57735956, -0.57734066, -0.5773506), (0.57735956, 0.57734066, 0.5773506), (0.57734716, -0.57735646, 0.5773472), (-0.57735956, 0.57734066, -0.5773506), (0.57734716, 0.57735646, -0.5773472), (0.57735956, -0.57734066, -0.5773506), (-0.57735956, 0.57734066, -0.5773506), (0.57735956, -0.57734066, -0.5773506), (-0.57734716, -0.57735646, -0.5773472), (-0.57735956, -0.57734066, 0.5773506), (0.57734716, -0.57735646, 0.5773472), (0.57735956, 0.57734066, 0.5773506), (-0.57735956, -0.57734066, 0.5773506), (0.57735956, 0.57734066, 0.5773506), (-0.57734716, 0.57735646, 0.5773472)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.0154863, 0.29499993, -0.3935144), (-0.0154863, 0.29499993, -0.3935144), (-0.0154863, 0.29499993, 0.3935144), (0.0154863, 0.29499993, 0.3935144), (-0.0154863, -0.29499993, -0.3935144), (-0.0154863, -0.29499993, 0.3935144), (0.0154863, -0.29499993, -0.3935144), (0.0154863, -0.29499993, 0.3935144)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, -0.8877913, -0.28469467)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (-0.020835012197494507, -0.8877912759780884, -0.2846946716308594, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734853, 0.57735384, 0.57734853), (0.5773268, 0.5773571, 0.57736695), (0.57734853, 0.57735384, -0.57734853), (-0.57734853, 0.57735384, 0.57734853), (0.57734853, 0.57735384, -0.57734853), (-0.5773268, 0.5773571, -0.57736695), (-0.5773268, 0.5773571, -0.57736695), (0.57734853, 0.57735384, -0.57734853), (0.5773268, -0.5773571, -0.57736695), (-0.5773268, 0.5773571, -0.57736695), (0.5773268, -0.5773571, -0.57736695), (-0.57734853, -0.57735384, -0.57734853), (-0.57734853, -0.57735384, -0.57734853), (0.5773268, -0.5773571, -0.57736695), (0.57734853, -0.57735384, 0.57734853), (-0.57734853, -0.57735384, -0.57734853), (0.57734853, -0.57735384, 0.57734853), (-0.5773268, -0.5773571, 0.57736695), (-0.5773268, -0.5773571, 0.57736695), (0.57734853, -0.57735384, 0.57734853), (0.5773268, 0.5773571, 0.57736695), (-0.5773268, -0.5773571, 0.57736695), (0.5773268, 0.5773571, 0.57736695), (-0.57734853, 0.57735384, 0.57734853), (-0.5773268, 0.5773571, -0.57736695), (-0.57734853, -0.57735384, -0.57734853), (-0.5773268, -0.5773571, 0.57736695), (-0.5773268, 0.5773571, -0.57736695), (-0.5773268, -0.5773571, 0.57736695), (-0.57734853, 0.57735384, 0.57734853), (0.5773268, -0.5773571, -0.57736695), (0.57734853, 0.57735384, -0.57734853), (0.5773268, 0.5773571, 0.57736695), (0.5773268, -0.5773571, -0.57736695), (0.5773268, 0.5773571, 0.57736695), (0.57734853, -0.57735384, 0.57734853)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.017485194, 0.3144404, 0.9157645), (0.017485201, 0.3144404, 0.9157645), (0.017485201, 0.3144404, -0.9157645), (-0.017485194, 0.3144404, -0.9157645), (0.017485201, -0.3144404, -0.9157645), (-0.017485194, -0.3144404, -0.9157645), (0.017485201, -0.3144404, 0.9157645), (-0.017485194, -0.3144404, 0.9157645)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (-0.02988443, -0.0010682791, 0.12630552)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 5.551115123125783e-17, 0.9999999999999989, 0), (-0.999999999999998, -4.371139006309477e-8, -4.371139000758362e-8, 0), (4.371139000758362e-8, -0.9999999999999989, 1.9984014443252818e-15, 0), (-0.029884429648518562, -0.0010682791471481323, 0.12630552053451538, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.577347, 0.5773568, 0.577347), (0.5773381, 0.57736427, 0.5773484), (0.577347, 0.5773568, -0.577347), (-0.577347, 0.5773568, 0.577347), (0.577347, 0.5773568, -0.577347), (-0.5773381, 0.57736427, -0.5773484), (-0.5773381, 0.57736427, -0.5773484), (0.577347, 0.5773568, -0.577347), (0.5773381, -0.57736427, -0.5773484), (-0.5773381, 0.57736427, -0.5773484), (0.5773381, -0.57736427, -0.5773484), (-0.577347, -0.5773568, -0.577347), (-0.577347, -0.5773568, -0.577347), (0.5773381, -0.57736427, -0.5773484), (0.577347, -0.5773568, 0.577347), (-0.577347, -0.5773568, -0.577347), (0.577347, -0.5773568, 0.577347), (-0.5773381, -0.57736427, 0.5773484), (-0.5773381, -0.57736427, 0.5773484), (0.577347, -0.5773568, 0.577347), (0.5773381, 0.57736427, 0.5773484), (-0.5773381, -0.57736427, 0.5773484), (0.5773381, 0.57736427, 0.5773484), (-0.577347, 0.5773568, 0.577347), (-0.5773381, 0.57736427, -0.5773484), (-0.577347, -0.5773568, -0.577347), (-0.5773381, -0.57736427, 0.5773484), (-0.5773381, 0.57736427, -0.5773484), (-0.5773381, -0.57736427, 0.5773484), (-0.577347, 0.5773568, 0.577347), (0.5773381, -0.57736427, -0.5773484), (0.577347, 0.5773568, -0.577347), (0.5773381, 0.57736427, 0.5773484), (0.5773381, -0.57736427, -0.5773484), (0.5773381, 0.57736427, 0.5773484), (0.577347, -0.5773568, 0.577347)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.053999946, 0.25519547, 0.9157645), (0.053999856, 0.25519547, 0.9157645), (0.053999856, 0.25519547, -0.9157645), (-0.053999946, 0.25519547, -0.9157645), (0.053999856, -0.25519547, -0.9157645), (-0.053999946, -0.25519547, -0.9157645), (0.053999856, -0.25519547, 0.9157645), (-0.053999946, -0.25519547, 0.9157645)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.029360503, -0.0010682791, -0.732209)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 5.551115123125783e-17, 0.9999999999999989, 0), (-0.999999999999998, -4.371139006309477e-8, -4.371139000758362e-8, 0), (4.371139000758362e-8, -0.9999999999999989, 1.9984014443252818e-15, 0), (0.02936050295829773, -0.0010682791471481323, -0.7322090268135071, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57733357, -0.5773586, 0.5773586), (-0.5773507, 0.5773503, 0.5773498), (-0.57733357, 0.5773586, -0.5773586), (-0.57733357, -0.5773586, 0.5773586), (-0.57733357, 0.5773586, -0.5773586), (-0.5773507, -0.5773503, -0.5773498), (-0.5773507, -0.5773503, -0.5773498), (-0.57733357, 0.5773586, -0.5773586), (0.5773507, 0.5773503, -0.5773498), (-0.5773507, -0.5773503, -0.5773498), (0.5773507, 0.5773503, -0.5773498), (0.57733357, -0.5773586, -0.5773586), (0.57733357, -0.5773586, -0.5773586), (0.5773507, 0.5773503, -0.5773498), (0.57733357, 0.5773586, 0.5773586), (0.57733357, -0.5773586, -0.5773586), (0.57733357, 0.5773586, 0.5773586), (0.5773507, -0.5773503, 0.5773498), (0.5773507, -0.5773503, 0.5773498), (0.57733357, 0.5773586, 0.5773586), (-0.5773507, 0.5773503, 0.5773498), (0.5773507, -0.5773503, 0.5773498), (-0.5773507, 0.5773503, 0.5773498), (-0.57733357, -0.5773586, 0.5773586), (-0.5773507, -0.5773503, -0.5773498), (0.57733357, -0.5773586, -0.5773586), (0.5773507, -0.5773503, 0.5773498), (-0.5773507, -0.5773503, -0.5773498), (0.5773507, -0.5773503, 0.5773498), (-0.57733357, -0.5773586, 0.5773586), (0.5773507, 0.5773503, -0.5773498), (-0.57733357, 0.5773586, -0.5773586), (-0.5773507, 0.5773503, 0.5773498), (0.5773507, 0.5773503, -0.5773498), (-0.5773507, 0.5773503, 0.5773498), (0.57733357, 0.5773586, 0.5773586)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0019998252, -0.39351442, 0.88200045), (-0.0019998252, 0.39351442, 0.88200045), (-0.0019998252, 0.39351442, -0.8820004), (-0.0019998252, -0.39351442, -0.8820004), (0.0019998252, 0.39351442, -0.8820004), (0.0019998252, -0.39351442, -0.8820004), (0.0019998252, 0.39351442, 0.88200045), (0.0019998252, -0.39351442, 0.88200045)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.27216503, 0.014695749, -0.28469458)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.2721650302410126, 0.014695748686790466, -0.2846945822238922, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773472, 0.57735634, -0.5773472), (-0.5773596, 0.57734066, 0.57735056), (0.5773472, 0.57735634, 0.5773472), (-0.5773472, 0.57735634, -0.5773472), (0.5773472, 0.57735634, 0.5773472), (0.5773596, 0.57734066, -0.57735056), (0.5773596, 0.57734066, -0.57735056), (0.5773472, 0.57735634, 0.5773472), (0.5773596, -0.57734066, 0.57735056), (0.5773596, 0.57734066, -0.57735056), (0.5773596, -0.57734066, 0.57735056), (0.5773472, -0.57735634, -0.5773472), (0.5773472, -0.57735634, -0.5773472), (0.5773596, -0.57734066, 0.57735056), (-0.5773472, -0.57735634, 0.5773472), (0.5773472, -0.57735634, -0.5773472), (-0.5773472, -0.57735634, 0.5773472), (-0.5773596, -0.57734066, -0.57735056), (-0.5773596, -0.57734066, -0.57735056), (-0.5773472, -0.57735634, 0.5773472), (-0.5773596, 0.57734066, 0.57735056), (-0.5773596, -0.57734066, -0.57735056), (-0.5773596, 0.57734066, 0.57735056), (-0.5773472, 0.57735634, -0.5773472), (0.5773596, 0.57734066, -0.57735056), (0.5773472, -0.57735634, -0.5773472), (-0.5773596, -0.57734066, -0.57735056), (0.5773596, 0.57734066, -0.57735056), (-0.5773596, -0.57734066, -0.57735056), (-0.5773472, 0.57735634, -0.5773472), (0.5773596, -0.57734066, 0.57735056), (0.5773472, 0.57735634, 0.5773472), (-0.5773596, 0.57734066, 0.57735056), (0.5773596, -0.57734066, 0.57735056), (-0.5773596, 0.57734066, 0.57735056), (-0.5773472, -0.57735634, 0.5773472)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.015500158, 0.29499993, -0.3935144), (-0.015500158, 0.29499993, 0.3935144), (0.015500158, 0.29499993, 0.3935144), (0.015500158, 0.29499993, -0.3935144), (0.015500158, -0.29499993, 0.3935144), (0.015500158, -0.29499993, -0.3935144), (-0.015500158, -0.29499993, 0.3935144), (-0.015500158, -0.29499993, -0.3935144)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, 0.31219628, -0.28469467)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (-0.020835012197494507, 0.312196284532547, -0.2846946716308594, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773471, 0.5773566, -0.57734716), (-0.57735944, 0.57734054, 0.5773507), (0.5773471, 0.5773566, 0.57734716), (-0.5773471, 0.5773566, -0.57734716), (0.5773471, 0.5773566, 0.57734716), (0.57735944, 0.57734054, -0.5773507), (0.57735944, 0.57734054, -0.5773507), (0.5773471, 0.5773566, 0.57734716), (0.57735944, -0.57734054, 0.5773507), (0.57735944, 0.57734054, -0.5773507), (0.57735944, -0.57734054, 0.5773507), (0.5773471, -0.5773566, -0.57734716), (0.5773471, -0.5773566, -0.57734716), (0.57735944, -0.57734054, 0.5773507), (-0.5773471, -0.5773566, 0.57734716), (0.5773471, -0.5773566, -0.57734716), (-0.5773471, -0.5773566, 0.57734716), (-0.57735944, -0.57734054, -0.5773507), (-0.57735944, -0.57734054, -0.5773507), (-0.5773471, -0.5773566, 0.57734716), (-0.57735944, 0.57734054, 0.5773507), (-0.57735944, -0.57734054, -0.5773507), (-0.57735944, 0.57734054, 0.5773507), (-0.5773471, 0.5773566, -0.57734716), (0.57735944, 0.57734054, -0.5773507), (0.5773471, -0.5773566, -0.57734716), (-0.57735944, -0.57734054, -0.5773507), (0.57735944, 0.57734054, -0.5773507), (-0.57735944, -0.57734054, -0.5773507), (-0.5773471, 0.5773566, -0.57734716), (0.57735944, -0.57734054, 0.5773507), (0.5773471, 0.5773566, 0.57734716), (-0.57735944, 0.57734054, 0.5773507), (0.57735944, -0.57734054, 0.5773507), (-0.57735944, 0.57734054, 0.5773507), (-0.5773471, -0.5773566, 0.57734716)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.01549992, 0.29499993, -0.3935144), (-0.01549992, 0.29499993, 0.3935144), (0.01549992, 0.29499993, 0.3935144), (0.01549992, 0.29499993, -0.3935144), (0.01549992, -0.29499993, 0.3935144), (0.01549992, -0.29499993, -0.3935144), (-0.01549992, -0.29499993, 0.3935144), (-0.01549992, -0.29499993, -0.3935144)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, -0.2828039, -0.28469467)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (-0.020835012197494507, -0.28280389308929443, -0.2846946716308594, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773532, -0.5773532, -0.5773446), (-0.57735234, 0.5773514, -0.577347), (0.5773532, 0.5773532, -0.5773446), (-0.5773532, -0.5773532, -0.5773446), (0.5773532, 0.5773532, -0.5773446), (0.57735234, -0.5773514, -0.577347), (0.57735234, -0.5773514, -0.577347), (0.5773532, 0.5773532, -0.5773446), (0.57735234, 0.5773514, 0.577347), (0.57735234, -0.5773514, -0.577347), (0.57735234, 0.5773514, 0.577347), (0.5773532, -0.5773532, 0.5773446), (0.5773532, -0.5773532, 0.5773446), (0.57735234, 0.5773514, 0.577347), (-0.5773532, 0.5773532, 0.5773446), (0.5773532, -0.5773532, 0.5773446), (-0.5773532, 0.5773532, 0.5773446), (-0.57735234, -0.5773514, 0.577347), (-0.57735234, -0.5773514, 0.577347), (-0.5773532, 0.5773532, 0.5773446), (-0.57735234, 0.5773514, -0.577347), (-0.57735234, -0.5773514, 0.577347), (-0.57735234, 0.5773514, -0.577347), (-0.5773532, -0.5773532, -0.5773446), (0.57735234, -0.5773514, -0.577347), (0.5773532, -0.5773532, 0.5773446), (-0.57735234, -0.5773514, 0.577347), (0.57735234, -0.5773514, -0.577347), (-0.57735234, -0.5773514, 0.577347), (-0.5773532, -0.5773532, -0.5773446), (0.57735234, 0.5773514, 0.577347), (0.5773532, 0.5773532, -0.5773446), (-0.57735234, 0.5773514, -0.577347), (0.57735234, 0.5773514, 0.577347), (-0.57735234, 0.5773514, -0.577347), (-0.5773532, 0.5773532, 0.5773446)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.030999985, -0.17499998, -0.2695129), (-0.030999985, 0.17499998, -0.2695129), (0.030999977, 0.17499998, -0.2695129), (0.030999977, -0.17499998, -0.2695129), (0.030999977, 0.17499998, 0.2695129), (0.030999977, -0.17499998, 0.2695129), (-0.030999985, 0.17499998, 0.2695129), (-0.030999985, -0.17499998, 0.2695129)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.0046520233, -0.23630384, -0.2506871)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.9999999999999989, 1.27675647831893e-15, 0), (4.371139000758362e-8, 6.661338147750939e-16, 0.9999999999999989, 0), (0.999999999999998, 4.371139000758362e-8, -4.371139006309477e-8, 0), (0.0046520233154296875, -0.23630383610725403, -0.2506870925426483, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_7" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773531, -0.5773531, -0.5773446), (-0.5773524, 0.57735145, -0.577347), (0.5773531, 0.5773531, -0.5773446), (-0.5773531, -0.5773531, -0.5773446), (0.5773531, 0.5773531, -0.5773446), (0.5773524, -0.57735145, -0.577347), (0.5773524, -0.57735145, -0.577347), (0.5773531, 0.5773531, -0.5773446), (0.5773524, 0.57735145, 0.577347), (0.5773524, -0.57735145, -0.577347), (0.5773524, 0.57735145, 0.577347), (0.5773531, -0.5773531, 0.5773446), (0.5773531, -0.5773531, 0.5773446), (0.5773524, 0.57735145, 0.577347), (-0.5773531, 0.5773531, 0.5773446), (0.5773531, -0.5773531, 0.5773446), (-0.5773531, 0.5773531, 0.5773446), (-0.5773524, -0.57735145, 0.577347), (-0.5773524, -0.57735145, 0.577347), (-0.5773531, 0.5773531, 0.5773446), (-0.5773524, 0.57735145, -0.577347), (-0.5773524, -0.57735145, 0.577347), (-0.5773524, 0.57735145, -0.577347), (-0.5773531, -0.5773531, -0.5773446), (0.5773524, -0.57735145, -0.577347), (0.5773531, -0.5773531, 0.5773446), (-0.5773524, -0.57735145, 0.577347), (0.5773524, -0.57735145, -0.577347), (-0.5773524, -0.57735145, 0.577347), (-0.5773531, -0.5773531, -0.5773446), (0.5773524, 0.57735145, 0.577347), (0.5773531, 0.5773531, -0.5773446), (-0.5773524, 0.57735145, -0.577347), (0.5773524, 0.57735145, 0.577347), (-0.5773524, 0.57735145, -0.577347), (-0.5773531, 0.5773531, 0.5773446)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.031000009, -0.17499998, -0.2695129), (-0.031000009, 0.17499998, -0.2695129), (0.030999998, 0.17499998, -0.2695129), (0.030999998, -0.17499998, -0.2695129), (0.030999998, 0.17499998, 0.2695129), (0.030999998, -0.17499998, 0.2695129), (-0.031000009, 0.17499998, 0.2695129), (-0.031000009, -0.17499998, 0.2695129)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.0046520233, 0.2656961, -0.2506871)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.9999999999999989, 1.27675647831893e-15, 0), (4.371139000758362e-8, 6.661338147750939e-16, 0.9999999999999989, 0), (0.999999999999998, 4.371139000758362e-8, -4.371139006309477e-8, 0), (0.0046520233154296875, 0.26569610834121704, -0.2506870925426483, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_8" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57735664, 0.57735664, -0.5773375), (0.5773776, 0.57732785, -0.57734525), (0.57735664, -0.57735664, -0.5773375), (-0.57735664, 0.57735664, -0.5773375), (0.57735664, -0.57735664, -0.5773375), (-0.5773776, -0.57732785, -0.57734525), (-0.5773776, -0.57732785, -0.57734525), (0.57735664, -0.57735664, -0.5773375), (0.5773776, -0.57732785, 0.57734525), (-0.5773776, -0.57732785, -0.57734525), (0.5773776, -0.57732785, 0.57734525), (-0.57735664, -0.57735664, 0.5773375), (-0.57735664, -0.57735664, 0.5773375), (0.5773776, -0.57732785, 0.57734525), (0.57735664, 0.57735664, 0.5773375), (-0.57735664, -0.57735664, 0.5773375), (0.57735664, 0.57735664, 0.5773375), (-0.5773776, 0.57732785, 0.57734525), (-0.5773776, 0.57732785, 0.57734525), (0.57735664, 0.57735664, 0.5773375), (0.5773776, 0.57732785, -0.57734525), (-0.5773776, 0.57732785, 0.57734525), (0.5773776, 0.57732785, -0.57734525), (-0.57735664, 0.57735664, -0.5773375), (-0.5773776, -0.57732785, -0.57734525), (-0.57735664, -0.57735664, 0.5773375), (-0.5773776, 0.57732785, 0.57734525), (-0.5773776, -0.57732785, -0.57734525), (-0.5773776, 0.57732785, 0.57734525), (-0.57735664, 0.57735664, -0.5773375), (0.5773776, -0.57732785, 0.57734525), (0.57735664, -0.57735664, -0.5773375), (0.5773776, 0.57732785, -0.57734525), (0.5773776, -0.57732785, 0.57734525), (0.5773776, 0.57732785, -0.57734525), (0.57735664, 0.57735664, 0.5773375)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.06485486, 0.282, -0.29483268), (0.06485486, 0.282, -0.29483268), (0.06485486, -0.282, -0.29483268), (-0.06485486, -0.282, -0.29483268), (0.06485486, -0.282, 0.29483268), (-0.06485486, -0.282, 0.29483268), (0.06485486, 0.282, 0.29483268), (-0.06485486, 0.282, 0.29483268)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (-0.020667762, 0.014696181, 0.043964867)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (-0.02066776156425476, 0.014696180820465088, 0.04396486654877663, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_9" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773391, -0.57735586, 0.5773559), (-0.5773454, 0.5773526, 0.5773528), (-0.5773391, 0.57735586, -0.5773559), (-0.5773391, -0.57735586, 0.5773559), (-0.5773391, 0.57735586, -0.5773559), (-0.5773454, -0.5773526, -0.5773528), (-0.5773454, -0.5773526, -0.5773528), (-0.5773391, 0.57735586, -0.5773559), (0.5773454, 0.5773526, -0.5773528), (-0.5773454, -0.5773526, -0.5773528), (0.5773454, 0.5773526, -0.5773528), (0.5773391, -0.57735586, -0.5773559), (0.5773391, -0.57735586, -0.5773559), (0.5773454, 0.5773526, -0.5773528), (0.5773391, 0.57735586, 0.5773559), (0.5773391, -0.57735586, -0.5773559), (0.5773391, 0.57735586, 0.5773559), (0.5773454, -0.5773526, 0.5773528), (0.5773454, -0.5773526, 0.5773528), (0.5773391, 0.57735586, 0.5773559), (-0.5773454, 0.5773526, 0.5773528), (0.5773454, -0.5773526, 0.5773528), (-0.5773454, 0.5773526, 0.5773528), (-0.5773391, -0.57735586, 0.5773559), (-0.5773454, -0.5773526, -0.5773528), (0.5773391, -0.57735586, -0.5773559), (0.5773454, -0.5773526, 0.5773528), (-0.5773454, -0.5773526, -0.5773528), (0.5773454, -0.5773526, 0.5773528), (-0.5773391, -0.57735586, 0.5773559), (0.5773454, 0.5773526, -0.5773528), (-0.5773391, 0.57735586, -0.5773559), (-0.5773454, 0.5773526, 0.5773528), (0.5773454, 0.5773526, -0.5773528), (-0.5773454, 0.5773526, 0.5773528), (0.5773391, 0.57735586, 0.5773559)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0060905516, -0.06485486, 0.29812998), (-0.0060905516, 0.06485486, 0.29812998), (-0.0060905516, 0.06485486, -0.29812998), (-0.0060905516, -0.06485486, -0.29812998), (0.0060905516, 0.06485486, -0.29812998), (0.0060905516, -0.06485486, -0.29812998), (0.0060905516, 0.06485486, 0.29812998), (0.0060905516, -0.06485486, 0.29812998)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.32192555, 0.01455313, 0.043964867)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.321925550699234, 0.01455312967300415, 0.04396486654877663, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_10" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773479, 0.577355, 0.5773479), (0.5773697, 0.5773373, 0.5773437), (0.5773479, 0.577355, -0.5773479), (-0.5773479, 0.577355, 0.5773479), (0.5773479, 0.577355, -0.5773479), (-0.5773697, 0.5773373, -0.5773437), (-0.5773697, 0.5773373, -0.5773437), (0.5773479, 0.577355, -0.5773479), (0.5773697, -0.5773373, -0.5773437), (-0.5773697, 0.5773373, -0.5773437), (0.5773697, -0.5773373, -0.5773437), (-0.5773479, -0.577355, -0.5773479), (-0.5773479, -0.577355, -0.5773479), (0.5773697, -0.5773373, -0.5773437), (0.5773479, -0.577355, 0.5773479), (-0.5773479, -0.577355, -0.5773479), (0.5773479, -0.577355, 0.5773479), (-0.5773697, -0.5773373, 0.5773437), (-0.5773697, -0.5773373, 0.5773437), (0.5773479, -0.577355, 0.5773479), (0.5773697, 0.5773373, 0.5773437), (-0.5773697, -0.5773373, 0.5773437), (0.5773697, 0.5773373, 0.5773437), (-0.5773479, 0.577355, 0.5773479), (-0.5773697, 0.5773373, -0.5773437), (-0.5773479, -0.577355, -0.5773479), (-0.5773697, -0.5773373, 0.5773437), (-0.5773697, 0.5773373, -0.5773437), (-0.5773697, -0.5773373, 0.5773437), (-0.5773479, 0.577355, 0.5773479), (0.5773697, -0.5773373, -0.5773437), (0.5773479, 0.577355, -0.5773479), (0.5773697, 0.5773373, 0.5773437), (0.5773697, -0.5773373, -0.5773437), (0.5773697, 0.5773373, 0.5773437), (0.5773479, -0.577355, 0.5773479)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.027398556, 0.2695129, 0.282), (0.027398556, 0.2695129, 0.282), (0.027398556, 0.2695129, -0.282), (-0.027398556, 0.2695129, -0.282), (0.027398556, -0.2695129, -0.282), (-0.027398556, -0.2695129, -0.282), (0.027398556, -0.2695129, 0.282), (-0.027398556, -0.2695129, 0.282)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.0046520084, 0.014696181, -0.048288614)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 5.551115123125783e-17, 0.9999999999999989, 0), (-0.999999999999998, -4.371139006309477e-8, -4.371139000758362e-8, 0), (4.371139000758362e-8, -0.9999999999999989, 1.9984014443252818e-15, 0), (0.004652008414268494, 0.014696180820465088, -0.04828861355781555, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_11" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773489, 0.57735306, 0.5773489), (0.57737064, 0.5773383, 0.57734174), (0.5773489, 0.57735306, -0.5773489), (-0.5773489, 0.57735306, 0.5773489), (0.5773489, 0.57735306, -0.5773489), (-0.57737064, 0.5773383, -0.57734174), (-0.57737064, 0.5773383, -0.57734174), (0.5773489, 0.57735306, -0.5773489), (0.57737064, -0.5773383, -0.57734174), (-0.57737064, 0.5773383, -0.57734174), (0.57737064, -0.5773383, -0.57734174), (-0.5773489, -0.57735306, -0.5773489), (-0.5773489, -0.57735306, -0.5773489), (0.57737064, -0.5773383, -0.57734174), (0.5773489, -0.57735306, 0.5773489), (-0.5773489, -0.57735306, -0.5773489), (0.5773489, -0.57735306, 0.5773489), (-0.57737064, -0.5773383, 0.57734174), (-0.57737064, -0.5773383, 0.57734174), (0.5773489, -0.57735306, 0.5773489), (0.57737064, 0.5773383, 0.57734174), (-0.57737064, -0.5773383, 0.57734174), (0.57737064, 0.5773383, 0.57734174), (-0.5773489, 0.57735306, 0.5773489), (-0.57737064, 0.5773383, -0.57734174), (-0.5773489, -0.57735306, -0.5773489), (-0.57737064, -0.5773383, 0.57734174), (-0.57737064, 0.5773383, -0.57734174), (-0.57737064, -0.5773383, 0.57734174), (-0.5773489, 0.57735306, 0.5773489), (0.57737064, -0.5773383, -0.57734174), (0.5773489, 0.57735306, -0.5773489), (0.57737064, 0.5773383, 0.57734174), (0.57737064, -0.5773383, -0.57734174), (0.57737064, 0.5773383, 0.57734174), (0.5773489, -0.57735306, 0.5773489)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.032349527, 0.2695129, 0.282), (0.032349527, 0.2695129, 0.282), (0.032349527, 0.2695129, -0.282), (-0.032349527, 0.2695129, -0.282), (0.032349527, -0.2695129, -0.282), (-0.032349527, -0.2695129, -0.282), (0.032349527, -0.2695129, 0.282), (-0.032349527, -0.2695129, 0.282)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.0046520084, 0.014696181, -0.4580366)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 5.551115123125783e-17, 0.9999999999999989, 0), (-0.999999999999998, -4.371139006309477e-8, -4.371139000758362e-8, 0), (4.371139000758362e-8, -0.9999999999999989, 1.9984014443252818e-15, 0), (0.004652008414268494, 0.014696180820465088, -0.4580366015434265, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_12" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 8, 7, 8, 9, 9, 8, 10, 9, 10, 11, 11, 10, 12, 11, 12, 13, 13, 12, 14, 13, 14, 15, 15, 14, 16, 15, 16, 17, 17, 16, 18, 17, 18, 19, 19, 18, 20, 19, 20, 21, 21, 20, 22, 21, 22, 23, 23, 22, 24, 23, 24, 25, 25, 24, 26, 25, 26, 27, 27, 26, 28, 27, 28, 29, 29, 28, 30, 29, 30, 31, 31, 30, 32, 31, 32, 33, 33, 32, 34, 33, 34, 35, 35, 34, 36, 35, 36, 37, 37, 36, 38, 37, 38, 39, 39, 38, 40, 39, 40, 41, 41, 40, 42, 41, 42, 43, 43, 42, 44, 43, 44, 45, 45, 44, 46, 45, 46, 47, 47, 46, 48, 47, 48, 49, 49, 48, 50, 49, 50, 51, 51, 50, 52, 51, 52, 53, 53, 52, 54, 53, 54, 55, 55, 54, 56, 55, 56, 57, 57, 56, 58, 57, 58, 59, 59, 58, 60, 59, 60, 61, 4, 2, 1, 1, 62, 60, 60, 58, 56, 56, 54, 52, 52, 50, 48, 48, 46, 44, 44, 42, 40, 40, 38, 36, 36, 34, 32, 32, 30, 28, 28, 26, 24, 24, 22, 20, 20, 18, 16, 16, 14, 12, 12, 10, 8, 8, 6, 4, 4, 1, 60, 60, 56, 52, 52, 48, 44, 44, 40, 36, 36, 32, 28, 28, 24, 20, 20, 16, 12, 12, 8, 4, 4, 60, 52, 52, 44, 36, 36, 28, 20, 20, 12, 4, 4, 52, 36, 36, 20, 4, 61, 60, 62, 61, 62, 63, 63, 62, 1, 63, 1, 0, 63, 0, 3, 3, 5, 7, 7, 9, 11, 11, 13, 15, 15, 17, 19, 19, 21, 23, 23, 25, 27, 27, 29, 31, 31, 33, 35, 35, 37, 39, 39, 41, 43, 43, 45, 47, 47, 49, 51, 51, 53, 55, 55, 57, 59, 59, 61, 63, 63, 3, 7, 7, 11, 15, 15, 19, 23, 23, 27, 31, 31, 35, 39, 39, 43, 47, 47, 51, 55, 55, 59, 63, 63, 7, 15, 15, 23, 31, 31, 39, 47, 47, 55, 63, 63, 15, 31, 31, 47, 63]
            normal3f[] normals = [(-0.6857019, 0.72788244, 0.000003801386), (0.6856949, 0.7278891, -0.0000037831967), (0.6857016, 0.7138959, -0.14200668), (-0.6857019, 0.72788244, 0.000003801386), (0.6857016, 0.7138959, -0.14200668), (-0.6856971, 0.7139015, -0.14200021), (-0.6856971, 0.7139015, -0.14200021), (0.6857016, 0.7138959, -0.14200668), (0.6856821, 0.67249155, -0.2785592), (-0.6856971, 0.7139015, -0.14200021), (0.6856821, 0.67249155, -0.2785592), (-0.68570703, 0.6724717, -0.27854553), (-0.68570703, 0.6724717, -0.27854553), (0.6856821, 0.67249155, -0.2785592), (0.6857002, 0.605211, -0.40439427), (-0.68570703, 0.6724717, -0.27854553), (0.6857002, 0.605211, -0.40439427), (-0.68567884, 0.6052312, -0.40440026), (-0.68567884, 0.6052312, -0.40440026), (0.6857002, 0.605211, -0.40439427), (0.6856923, 0.51469505, -0.514699), (-0.68567884, 0.6052312, -0.40440026), (0.6856923, 0.51469505, -0.514699), (-0.68570626, 0.5146903, -0.5146852), (-0.68570626, 0.5146903, -0.5146852), (0.6856923, 0.51469505, -0.514699), (0.6856989, 0.40439034, -0.6052153), (-0.68570626, 0.5146903, -0.5146852), (0.6856989, 0.40439034, -0.6052153), (-0.68569946, 0.4043932, -0.6052126), (-0.68569946, 0.4043932, -0.6052126), (0.6856989, 0.40439034, -0.6052153), (0.6856713, 0.27855834, -0.6725028), (-0.68569946, 0.4043932, -0.6052126), (0.6856713, 0.27855834, -0.6725028), (-0.68570846, 0.2785483, -0.67246914), (-0.68570846, 0.2785483, -0.67246914), (0.6856713, 0.27855834, -0.6725028), (0.6856985, 0.14200327, -0.7138996), (-0.68570846, 0.2785483, -0.67246914), (0.6856985, 0.14200327, -0.7138996), (-0.6856784, 0.14200866, -0.71391773), (-0.6856784, 0.14200866, -0.71391773), (0.6856985, 0.14200327, -0.7138996), (0.6856905, -2.8368186e-7, -0.72789323), (-0.6856784, 0.14200866, -0.71391773), (0.6856905, -2.8368186e-7, -0.72789323), (-0.6857086, 2.463125e-7, -0.7278761), (-0.6857086, 2.463125e-7, -0.7278761), (0.6856905, -2.8368186e-7, -0.72789323), (0.68569857, -0.1420034, -0.7138995), (-0.6857086, 2.463125e-7, -0.7278761), (0.68569857, -0.1420034, -0.7138995), (-0.68570036, -0.142004, -0.7138977), (-0.68570036, -0.142004, -0.7138977), (0.68569857, -0.1420034, -0.7138995), (0.685669, -0.27855977, -0.67250466), (-0.68570036, -0.142004, -0.7138977), (0.685669, -0.27855977, -0.67250466), (-0.68570834, -0.27854794, -0.6724694), (-0.68570834, -0.27854794, -0.6724694), (0.685669, -0.27855977, -0.67250466), (0.6856988, -0.40439066, -0.60521513), (-0.68570834, -0.27854794, -0.6724694), (0.6856988, -0.40439066, -0.60521513), (-0.6856801, -0.40440288, -0.6052281), (-0.6856801, -0.40440288, -0.6052281), (0.6856988, -0.40439066, -0.60521513), (0.68569237, -0.5146953, -0.5146988), (-0.6856801, -0.40440288, -0.6052281), (0.68569237, -0.5146953, -0.5146988), (-0.68570626, -0.51469, -0.51468545), (-0.68570626, -0.51469, -0.51468545), (0.68569237, -0.5146953, -0.5146988), (0.6857002, -0.6052111, -0.40439418), (-0.68570626, -0.51469, -0.51468545), (0.6857002, -0.6052111, -0.40439418), (-0.68569833, -0.60521615, -0.40438995), (-0.68569833, -0.60521615, -0.40438995), (0.6857002, -0.6052111, -0.40439418), (0.68567353, -0.672499, -0.27856204), (-0.68569833, -0.60521615, -0.40438995), (0.68567353, -0.672499, -0.27856204), (-0.6857071, -0.6724716, -0.27854583), (-0.6857071, -0.6724716, -0.27854583), (0.68567353, -0.672499, -0.27856204), (0.6857016, -0.71389604, -0.14200611), (-0.6857071, -0.6724716, -0.27854583), (0.6857016, -0.71389604, -0.14200611), (-0.6856861, -0.7139117, -0.14200272), (-0.6856861, -0.7139117, -0.14200272), (0.6857016, -0.71389604, -0.14200611), (0.6856949, -0.7278891, -0.0000032455077), (-0.6856861, -0.7139117, -0.14200272), (0.6856949, -0.7278891, -0.0000032455077), (-0.68570197, -0.72788244, 0.0000032567227), (-0.68570197, -0.72788244, 0.0000032567227), (0.6856949, -0.7278891, -0.0000032455077), (0.685705, -0.7138942, 0.14199945), (-0.68570197, -0.72788244, 0.0000032567227), (0.685705, -0.7138942, 0.14199945), (-0.68569475, -0.7139023, 0.14200762), (-0.68569475, -0.7139023, 0.14200762), (0.685705, -0.7138942, 0.14199945), (0.6856863, -0.6724904, 0.2785514), (-0.68569475, -0.7139023, 0.14200762), (0.6856863, -0.6724904, 0.2785514), (-0.6856987, -0.6724778, 0.27855158), (-0.6856987, -0.6724778, 0.27855158), (0.6856863, -0.6724904, 0.2785514), (0.68570536, -0.6052109, 0.40438592), (-0.6856987, -0.6724778, 0.27855158), (0.68570536, -0.6052109, 0.40438592), (-0.6856734, -0.6052322, 0.4044082), (-0.6856734, -0.6052322, 0.4044082), (0.68570536, -0.6052109, 0.40438592), (0.6856993, -0.51469404, 0.5146909), (-0.6856734, -0.6052322, 0.4044082), (0.6856993, -0.51469404, 0.5146909), (-0.68569964, -0.5146904, 0.5146938), (-0.68569964, -0.5146904, 0.5146938), (0.6856993, -0.51469404, 0.5146909), (0.685707, -0.40438858, 0.60520726), (-0.68569964, -0.5146904, 0.5146938), (0.685707, -0.40438858, 0.60520726), (-0.6856912, -0.40439436, 0.60522133), (-0.6856912, -0.40439436, 0.60522133), (0.685707, -0.40438858, 0.60520726), (0.68568075, -0.2785579, 0.6724934), (-0.6856912, -0.40439436, 0.60522133), (0.68568075, -0.2785579, 0.6724934), (-0.68569756, -0.27854875, 0.6724801), (-0.68569756, -0.27854875, 0.6724801), (0.68568075, -0.2785579, 0.6724934), (0.68570703, -0.1420023, 0.71389157), (-0.68569756, -0.27854875, 0.6724801), (0.68570703, -0.1420023, 0.71389157), (-0.68566895, -0.14200793, 0.71392715), (-0.68566895, -0.14200793, 0.71392715), (0.68570703, -0.1420023, 0.71389157), (0.68570083, 2.9141447e-7, 0.7278835), (-0.68566895, -0.14200793, 0.71392715), (0.68570083, 2.9141447e-7, 0.7278835), (-0.68569744, -2.567208e-7, 0.72788656), (-0.68569744, -2.567208e-7, 0.72788656), (0.68570083, 2.9141447e-7, 0.7278835), (0.685707, 0.14200291, 0.7138915), (-0.68569744, -2.567208e-7, 0.72788656), (0.685707, 0.14200291, 0.7138915), (-0.68569064, 0.14200346, 0.713907), (-0.68569064, 0.14200346, 0.713907), (0.685707, 0.14200291, 0.7138915), (0.6856784, 0.27855915, 0.6724953), (-0.68569064, 0.14200346, 0.713907), (0.6856784, 0.27855915, 0.6724953), (-0.68569756, 0.2785482, 0.6724804), (-0.68569756, 0.2785482, 0.6724804), (0.6856784, 0.27855915, 0.6724953), (0.685707, 0.40438893, 0.6052071), (-0.68569756, 0.2785482, 0.6724804), (0.685707, 0.40438893, 0.6052071), (-0.68567157, 0.40440425, 0.60523677), (-0.68567157, 0.40440425, 0.60523677), (0.685707, 0.40438893, 0.6052071), (0.68569916, 0.5146942, 0.51469064), (-0.68567157, 0.40440425, 0.60523677), (0.68569916, 0.5146942, 0.51469064), (-0.68569964, 0.51469034, 0.5146939), (-0.68569964, 0.51469034, 0.5146939), (0.68569916, 0.5146942, 0.51469064), (0.68570536, 0.605211, 0.40438583), (-0.68569964, 0.51469034, 0.5146939), (0.68570536, 0.605211, 0.40438583), (-0.68569326, 0.60521644, 0.40439823), (-0.68569326, 0.60521644, 0.40439823), (0.68570536, 0.605211, 0.40438583), (0.6856778, 0.672498, 0.2785543), (-0.68569326, 0.60521644, 0.40439823), (0.6856778, 0.672498, 0.2785543), (-0.6856986, 0.6724778, 0.27855182), (0.6856821, 0.67249155, -0.2785592), (0.6857016, 0.7138959, -0.14200668), (0.6856949, 0.7278891, -0.0000037831967), (0.6856949, 0.7278891, -0.0000037831967), (0.6857049, 0.7138942, 0.14199895), (0.6856778, 0.672498, 0.2785543), (0.6856778, 0.672498, 0.2785543), (0.68570536, 0.605211, 0.40438583), (0.68569916, 0.5146942, 0.51469064), (0.68569916, 0.5146942, 0.51469064), (0.685707, 0.40438893, 0.6052071), (0.6856784, 0.27855915, 0.6724953), (0.6856784, 0.27855915, 0.6724953), (0.685707, 0.14200291, 0.7138915), (0.68570083, 2.9141447e-7, 0.7278835), (0.68570083, 2.9141447e-7, 0.7278835), (0.68570703, -0.1420023, 0.71389157), (0.68568075, -0.2785579, 0.6724934), (0.68568075, -0.2785579, 0.6724934), (0.685707, -0.40438858, 0.60520726), (0.6856993, -0.51469404, 0.5146909), (0.6856993, -0.51469404, 0.5146909), (0.68570536, -0.6052109, 0.40438592), (0.6856863, -0.6724904, 0.2785514), (0.6856863, -0.6724904, 0.2785514), (0.685705, -0.7138942, 0.14199945), (0.6856949, -0.7278891, -0.0000032455077), (0.6856949, -0.7278891, -0.0000032455077), (0.6857016, -0.71389604, -0.14200611), (0.68567353, -0.672499, -0.27856204), (0.68567353, -0.672499, -0.27856204), (0.6857002, -0.6052111, -0.40439418), (0.68569237, -0.5146953, -0.5146988), (0.68569237, -0.5146953, -0.5146988), (0.6856988, -0.40439066, -0.60521513), (0.685669, -0.27855977, -0.67250466), (0.685669, -0.27855977, -0.67250466), (0.68569857, -0.1420034, -0.7138995), (0.6856905, -2.8368186e-7, -0.72789323), (0.6856905, -2.8368186e-7, -0.72789323), (0.6856985, 0.14200327, -0.7138996), (0.6856713, 0.27855834, -0.6725028), (0.6856713, 0.27855834, -0.6725028), (0.6856989, 0.40439034, -0.6052153), (0.6856923, 0.51469505, -0.514699), (0.6856923, 0.51469505, -0.514699), (0.6857002, 0.605211, -0.40439427), (0.6856821, 0.67249155, -0.2785592), (0.6856821, 0.67249155, -0.2785592), (0.6856949, 0.7278891, -0.0000037831967), (0.6856778, 0.672498, 0.2785543), (0.6856778, 0.672498, 0.2785543), (0.68569916, 0.5146942, 0.51469064), (0.6856784, 0.27855915, 0.6724953), (0.6856784, 0.27855915, 0.6724953), (0.68570083, 2.9141447e-7, 0.7278835), (0.68568075, -0.2785579, 0.6724934), (0.68568075, -0.2785579, 0.6724934), (0.6856993, -0.51469404, 0.5146909), (0.6856863, -0.6724904, 0.2785514), (0.6856863, -0.6724904, 0.2785514), (0.6856949, -0.7278891, -0.0000032455077), (0.68567353, -0.672499, -0.27856204), (0.68567353, -0.672499, -0.27856204), (0.68569237, -0.5146953, -0.5146988), (0.685669, -0.27855977, -0.67250466), (0.685669, -0.27855977, -0.67250466), (0.6856905, -2.8368186e-7, -0.72789323), (0.6856713, 0.27855834, -0.6725028), (0.6856713, 0.27855834, -0.6725028), (0.6856923, 0.51469505, -0.514699), (0.6856821, 0.67249155, -0.2785592), (0.6856821, 0.67249155, -0.2785592), (0.6856778, 0.672498, 0.2785543), (0.6856784, 0.27855915, 0.6724953), (0.6856784, 0.27855915, 0.6724953), (0.68568075, -0.2785579, 0.6724934), (0.6856863, -0.6724904, 0.2785514), (0.6856863, -0.6724904, 0.2785514), (0.68567353, -0.672499, -0.27856204), (0.685669, -0.27855977, -0.67250466), (0.685669, -0.27855977, -0.67250466), (0.6856713, 0.27855834, -0.6725028), (0.6856821, 0.67249155, -0.2785592), (0.6856821, 0.67249155, -0.2785592), (0.6856784, 0.27855915, 0.6724953), (0.6856863, -0.6724904, 0.2785514), (0.6856863, -0.6724904, 0.2785514), (0.685669, -0.27855977, -0.67250466), (0.6856821, 0.67249155, -0.2785592), (-0.6856986, 0.6724778, 0.27855182), (0.6856778, 0.672498, 0.2785543), (0.6857049, 0.7138942, 0.14199895), (-0.6856986, 0.6724778, 0.27855182), (0.6857049, 0.7138942, 0.14199895), (-0.68568397, 0.71391225, 0.14201015), (-0.68568397, 0.71391225, 0.14201015), (0.6857049, 0.7138942, 0.14199895), (0.6856949, 0.7278891, -0.0000037831967), (-0.68568397, 0.71391225, 0.14201015), (0.6856949, 0.7278891, -0.0000037831967), (-0.6857019, 0.72788244, 0.000003801386), (-0.68568397, 0.71391225, 0.14201015), (-0.6857019, 0.72788244, 0.000003801386), (-0.6856971, 0.7139015, -0.14200021), (-0.6856971, 0.7139015, -0.14200021), (-0.68570703, 0.6724717, -0.27854553), (-0.68567884, 0.6052312, -0.40440026), (-0.68567884, 0.6052312, -0.40440026), (-0.68570626, 0.5146903, -0.5146852), (-0.68569946, 0.4043932, -0.6052126), (-0.68569946, 0.4043932, -0.6052126), (-0.68570846, 0.2785483, -0.67246914), (-0.6856784, 0.14200866, -0.71391773), (-0.6856784, 0.14200866, -0.71391773), (-0.6857086, 2.463125e-7, -0.7278761), (-0.68570036, -0.142004, -0.7138977), (-0.68570036, -0.142004, -0.7138977), (-0.68570834, -0.27854794, -0.6724694), (-0.6856801, -0.40440288, -0.6052281), (-0.6856801, -0.40440288, -0.6052281), (-0.68570626, -0.51469, -0.51468545), (-0.68569833, -0.60521615, -0.40438995), (-0.68569833, -0.60521615, -0.40438995), (-0.6857071, -0.6724716, -0.27854583), (-0.6856861, -0.7139117, -0.14200272), (-0.6856861, -0.7139117, -0.14200272), (-0.68570197, -0.72788244, 0.0000032567227), (-0.68569475, -0.7139023, 0.14200762), (-0.68569475, -0.7139023, 0.14200762), (-0.6856987, -0.6724778, 0.27855158), (-0.6856734, -0.6052322, 0.4044082), (-0.6856734, -0.6052322, 0.4044082), (-0.68569964, -0.5146904, 0.5146938), (-0.6856912, -0.40439436, 0.60522133), (-0.6856912, -0.40439436, 0.60522133), (-0.68569756, -0.27854875, 0.6724801), (-0.68566895, -0.14200793, 0.71392715), (-0.68566895, -0.14200793, 0.71392715), (-0.68569744, -2.567208e-7, 0.72788656), (-0.68569064, 0.14200346, 0.713907), (-0.68569064, 0.14200346, 0.713907), (-0.68569756, 0.2785482, 0.6724804), (-0.68567157, 0.40440425, 0.60523677), (-0.68567157, 0.40440425, 0.60523677), (-0.68569964, 0.51469034, 0.5146939), (-0.68569326, 0.60521644, 0.40439823), (-0.68569326, 0.60521644, 0.40439823), (-0.6856986, 0.6724778, 0.27855182), (-0.68568397, 0.71391225, 0.14201015), (-0.68568397, 0.71391225, 0.14201015), (-0.6856971, 0.7139015, -0.14200021), (-0.68567884, 0.6052312, -0.40440026), (-0.68567884, 0.6052312, -0.40440026), (-0.68569946, 0.4043932, -0.6052126), (-0.6856784, 0.14200866, -0.71391773), (-0.6856784, 0.14200866, -0.71391773), (-0.68570036, -0.142004, -0.7138977), (-0.6856801, -0.40440288, -0.6052281), (-0.6856801, -0.40440288, -0.6052281), (-0.68569833, -0.60521615, -0.40438995), (-0.6856861, -0.7139117, -0.14200272), (-0.6856861, -0.7139117, -0.14200272), (-0.68569475, -0.7139023, 0.14200762), (-0.6856734, -0.6052322, 0.4044082), (-0.6856734, -0.6052322, 0.4044082), (-0.6856912, -0.40439436, 0.60522133), (-0.68566895, -0.14200793, 0.71392715), (-0.68566895, -0.14200793, 0.71392715), (-0.68569064, 0.14200346, 0.713907), (-0.68567157, 0.40440425, 0.60523677), (-0.68567157, 0.40440425, 0.60523677), (-0.68569326, 0.60521644, 0.40439823), (-0.68568397, 0.71391225, 0.14201015), (-0.68568397, 0.71391225, 0.14201015), (-0.68567884, 0.6052312, -0.40440026), (-0.6856784, 0.14200866, -0.71391773), (-0.6856784, 0.14200866, -0.71391773), (-0.6856801, -0.40440288, -0.6052281), (-0.6856861, -0.7139117, -0.14200272), (-0.6856861, -0.7139117, -0.14200272), (-0.6856734, -0.6052322, 0.4044082), (-0.68566895, -0.14200793, 0.71392715), (-0.68566895, -0.14200793, 0.71392715), (-0.68567157, 0.40440425, 0.60523677), (-0.68568397, 0.71391225, 0.14201015), (-0.68568397, 0.71391225, 0.14201015), (-0.6856784, 0.14200866, -0.71391773), (-0.6856861, -0.7139117, -0.14200272), (-0.6856861, -0.7139117, -0.14200272), (-0.68566895, -0.14200793, 0.71392715), (-0.68568397, 0.71391225, 0.14201015)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.009774394, 0.015730083, 9.2221e-8), (0.009774379, 0.015730083, -9.056549e-8), (0.0097743645, 0.015427828, -0.0030688767), (-0.009774409, 0.015427828, -0.0030686937), (0.009774351, 0.0145327, -0.006019731), (-0.009774423, 0.0145327, -0.0060195485), (0.0097743375, 0.013079077, -0.008739253), (-0.009774436, 0.013079077, -0.008739074), (0.009774326, 0.011122838, -0.011122932), (-0.009774447, 0.011122838, -0.011122753), (0.009774317, 0.0087391585, -0.013079171), (-0.009774457, 0.0087391585, -0.013078992), (0.00977431, 0.006019637, -0.014532787), (-0.009774464, 0.006019637, -0.014532604), (0.009774306, 0.0030687898, -0.015427918), (-0.009774468, 0.0030687898, -0.015427739), (0.009774304, 4.910297e-11, -0.01573017), (-0.00977447, 4.910297e-11, -0.015729988), (0.009774306, -0.0030687898, -0.015427918), (-0.009774468, -0.0030687898, -0.015427739), (0.00977431, -0.006019637, -0.014532787), (-0.009774464, -0.006019637, -0.014532604), (0.009774317, -0.0087391585, -0.013079171), (-0.009774457, -0.0087391585, -0.013078992), (0.009774326, -0.011122838, -0.011122932), (-0.009774447, -0.011122838, -0.011122753), (0.0097743375, -0.013079077, -0.008739253), (-0.009774436, -0.013079077, -0.008739074), (0.009774351, -0.0145327, -0.006019731), (-0.009774423, -0.0145327, -0.0060195485), (0.0097743645, -0.015427828, -0.0030688767), (-0.009774409, -0.015427828, -0.0030686937), (0.009774379, -0.015730083, -9.056549e-8), (-0.009774394, -0.015730083, 9.2221e-8), (0.009774394, -0.015427828, 0.0030686955), (-0.009774379, -0.015427828, 0.0030688785), (0.009774408, -0.0145327, 0.0060195504), (-0.009774365, -0.0145327, 0.006019733), (0.009774421, -0.013079077, 0.008739076), (-0.009774352, -0.013079077, 0.008739254), (0.0097744325, -0.011122838, 0.011122755), (-0.009774341, -0.011122838, 0.011122934), (0.009774442, -0.0087391585, 0.01307899), (-0.009774332, -0.0087391585, 0.013079173), (0.009774449, -0.006019637, 0.014532606), (-0.0097743245, -0.006019637, 0.014532789), (0.009774453, -0.0030687898, 0.015427741), (-0.009774321, -0.0030687898, 0.015427916), (0.009774455, 4.910297e-11, 0.015729988), (-0.009774319, 4.910297e-11, 0.015730163), (0.009774453, 0.0030687898, 0.015427741), (-0.009774321, 0.0030687898, 0.015427916), (0.009774449, 0.006019637, 0.014532606), (-0.0097743245, 0.006019637, 0.014532789), (0.009774442, 0.0087391585, 0.01307899), (-0.009774332, 0.0087391585, 0.013079173), (0.0097744325, 0.011122838, 0.011122755), (-0.009774341, 0.011122838, 0.011122934), (0.009774421, 0.013079077, 0.008739076), (-0.009774352, 0.013079077, 0.008739254), (0.009774408, 0.0145327, 0.0060195504), (-0.009774365, 0.0145327, 0.006019733), (0.009774394, 0.015427828, 0.0030686955), (-0.009774379, 0.015427828, 0.0030688785)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, -0.000004776746, 0)
            point3f urdf:collision:origin:xyz = (-0.3377905, 0.23469609, 0.047811788)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999885913, 0, 0.0000047767462092270105, 0), (0, 1, 0, 0), (-0.0000047767462092270105, 0, 0.9999999999885913, 0), (-0.33779048919677734, 0.23469609022140503, 0.04781178757548332, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_13" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 8, 7, 8, 9, 9, 8, 10, 9, 10, 11, 11, 10, 12, 11, 12, 13, 13, 12, 14, 13, 14, 15, 15, 14, 16, 15, 16, 17, 17, 16, 18, 17, 18, 19, 19, 18, 20, 19, 20, 21, 21, 20, 22, 21, 22, 23, 23, 22, 24, 23, 24, 25, 25, 24, 26, 25, 26, 27, 27, 26, 28, 27, 28, 29, 29, 28, 30, 29, 30, 31, 31, 30, 32, 31, 32, 33, 33, 32, 34, 33, 34, 35, 35, 34, 36, 35, 36, 37, 37, 36, 38, 37, 38, 39, 39, 38, 40, 39, 40, 41, 41, 40, 42, 41, 42, 43, 43, 42, 44, 43, 44, 45, 45, 44, 46, 45, 46, 47, 47, 46, 48, 47, 48, 49, 49, 48, 50, 49, 50, 51, 51, 50, 52, 51, 52, 53, 53, 52, 54, 53, 54, 55, 55, 54, 56, 55, 56, 57, 57, 56, 58, 57, 58, 59, 59, 58, 60, 59, 60, 61, 4, 2, 1, 1, 62, 60, 60, 58, 56, 56, 54, 52, 52, 50, 48, 48, 46, 44, 44, 42, 40, 40, 38, 36, 36, 34, 32, 32, 30, 28, 28, 26, 24, 24, 22, 20, 20, 18, 16, 16, 14, 12, 12, 10, 8, 8, 6, 4, 4, 1, 60, 60, 56, 52, 52, 48, 44, 44, 40, 36, 36, 32, 28, 28, 24, 20, 20, 16, 12, 12, 8, 4, 4, 60, 52, 52, 44, 36, 36, 28, 20, 20, 12, 4, 4, 52, 36, 36, 20, 4, 61, 60, 62, 61, 62, 63, 63, 62, 1, 63, 1, 0, 63, 0, 3, 3, 5, 7, 7, 9, 11, 11, 13, 15, 15, 17, 19, 19, 21, 23, 23, 25, 27, 27, 29, 31, 31, 33, 35, 35, 37, 39, 39, 41, 43, 43, 45, 47, 47, 49, 51, 51, 53, 55, 55, 57, 59, 59, 61, 63, 63, 3, 7, 7, 11, 15, 15, 19, 23, 23, 27, 31, 31, 35, 39, 39, 43, 47, 47, 51, 55, 55, 59, 63, 63, 7, 15, 15, 23, 31, 31, 39, 47, 47, 55, 63, 63, 15, 31, 31, 47, 63]
            normal3f[] normals = [(-0.6857019, 0.72788244, 0.000003801386), (0.6856949, 0.72788906, -0.00000378298), (0.68570364, 0.71389395, -0.14200708), (-0.6857019, 0.72788244, 0.000003801386), (0.68570364, 0.71389395, -0.14200708), (-0.6856971, 0.7139015, -0.14200021), (-0.6856971, 0.7139015, -0.14200021), (0.68570364, 0.71389395, -0.14200708), (0.68568224, 0.67249143, -0.27855912), (-0.6856971, 0.7139015, -0.14200021), (0.68568224, 0.67249143, -0.27855912), (-0.68570703, 0.6724717, -0.27854553), (-0.68570703, 0.6724717, -0.27854553), (0.68568224, 0.67249143, -0.27855912), (0.6857002, 0.605211, -0.40439427), (-0.68570703, 0.6724717, -0.27854553), (0.6857002, 0.605211, -0.40439427), (-0.68567884, 0.6052312, -0.40440026), (-0.68567884, 0.6052312, -0.40440026), (0.6857002, 0.605211, -0.40439427), (0.685692, 0.51469547, -0.5146989), (-0.68567884, 0.6052312, -0.40440026), (0.685692, 0.51469547, -0.5146989), (-0.68570626, 0.5146903, -0.5146852), (-0.68570626, 0.5146903, -0.5146852), (0.685692, 0.51469547, -0.5146989), (0.6856989, 0.40438902, -0.6052162), (-0.68570626, 0.5146903, -0.5146852), (0.6856989, 0.40438902, -0.6052162), (-0.68569946, 0.40439326, -0.6052126), (-0.68569946, 0.40439326, -0.6052126), (0.6856989, 0.40438902, -0.6052162), (0.6856712, 0.27855834, -0.6725029), (-0.68569946, 0.40439326, -0.6052126), (0.6856712, 0.27855834, -0.6725029), (-0.6857074, 0.27854866, -0.67247015), (-0.6857074, 0.27854866, -0.67247015), (0.6856712, 0.27855834, -0.6725029), (0.68569803, 0.14200231, -0.7139002), (-0.6857074, 0.27854866, -0.67247015), (0.68569803, 0.14200231, -0.7139002), (-0.68567836, 0.14200845, -0.7139179), (-0.68567836, 0.14200845, -0.7139179), (0.68569803, 0.14200231, -0.7139002), (0.68569005, -2.906204e-7, -0.7278937), (-0.68567836, 0.14200845, -0.7139179), (0.68569005, -2.906204e-7, -0.7278937), (-0.68570864, 2.4978164e-7, -0.727876), (-0.68570864, 2.4978164e-7, -0.727876), (0.68569005, -2.906204e-7, -0.7278937), (0.6856981, -0.14200246, -0.7139002), (-0.68570864, 2.4978164e-7, -0.727876), (0.6856981, -0.14200246, -0.7139002), (-0.68570024, -0.1420038, -0.71389776), (-0.68570024, -0.1420038, -0.71389776), (0.6856981, -0.14200246, -0.7139002), (0.6856688, -0.27855974, -0.6725047), (-0.68570024, -0.1420038, -0.71389776), (0.6856688, -0.27855974, -0.6725047), (-0.6857072, -0.27854827, -0.6724704), (-0.6857072, -0.27854827, -0.6724704), (0.6856688, -0.27855974, -0.6725047), (0.6856988, -0.40438938, -0.605216), (-0.6857072, -0.27854827, -0.6724704), (0.6856988, -0.40438938, -0.605216), (-0.6856801, -0.40440297, -0.6052281), (-0.6856801, -0.40440297, -0.6052281), (0.6856988, -0.40438938, -0.605216), (0.6856921, -0.51469564, -0.51469874), (-0.6856801, -0.40440297, -0.6052281), (0.6856921, -0.51469564, -0.51469874), (-0.68570626, -0.51469, -0.51468545), (-0.68570626, -0.51469, -0.51468545), (0.6856921, -0.51469564, -0.51469874), (0.6857002, -0.6052111, -0.40439418), (-0.68570626, -0.51469, -0.51468545), (0.6857002, -0.6052111, -0.40439418), (-0.68569833, -0.60521615, -0.40438995), (-0.68569833, -0.60521615, -0.40438995), (0.6857002, -0.6052111, -0.40439418), (0.6856737, -0.6724989, -0.27856207), (-0.68569833, -0.60521615, -0.40438995), (0.6856737, -0.6724989, -0.27856207), (-0.6857071, -0.6724716, -0.27854583), (-0.6857071, -0.6724716, -0.27854583), (0.6856737, -0.6724989, -0.27856207), (0.68570364, -0.71389407, -0.14200652), (-0.6857071, -0.6724716, -0.27854583), (0.68570364, -0.71389407, -0.14200652), (-0.6856861, -0.71391165, -0.1420027), (-0.6856861, -0.71391165, -0.1420027), (0.68570364, -0.71389407, -0.14200652), (0.6856949, -0.7278891, -0.000003252446), (-0.6856861, -0.71391165, -0.1420027), (0.6856949, -0.7278891, -0.000003252446), (-0.6857019, -0.7278825, 0.000003270599), (-0.6857019, -0.7278825, 0.000003270599), (0.6856949, -0.7278891, -0.000003252446), (0.6857037, -0.7138955, 0.1419992), (-0.6857019, -0.7278825, 0.000003270599), (0.6857037, -0.7138955, 0.1419992), (-0.68569475, -0.7139023, 0.14200762), (-0.68569475, -0.7139023, 0.14200762), (0.6857037, -0.7138955, 0.1419992), (0.6856863, -0.6724905, 0.2785515), (-0.68569475, -0.7139023, 0.14200762), (0.6856863, -0.6724905, 0.2785515), (-0.6856987, -0.6724778, 0.27855158), (-0.6856987, -0.6724778, 0.27855158), (0.6856863, -0.6724905, 0.2785515), (0.68570536, -0.6052109, 0.40438592), (-0.6856987, -0.6724778, 0.27855158), (0.68570536, -0.6052109, 0.40438592), (-0.6856734, -0.6052322, 0.40440822), (-0.6856734, -0.6052322, 0.40440822), (0.68570536, -0.6052109, 0.40438592), (0.6856995, -0.51469356, 0.51469094), (-0.6856734, -0.6052322, 0.40440822), (0.6856995, -0.51469356, 0.51469094), (-0.68569964, -0.5146904, 0.5146938), (-0.68569964, -0.5146904, 0.5146938), (0.6856995, -0.51469356, 0.51469094), (0.68570703, -0.40438995, 0.6052064), (-0.68569964, -0.5146904, 0.5146938), (0.68570703, -0.40438995, 0.6052064), (-0.6856912, -0.40439433, 0.60522133), (-0.6856912, -0.40439433, 0.60522133), (0.68570703, -0.40438995, 0.6052064), (0.68568075, -0.27855828, 0.6724933), (-0.6856912, -0.40439433, 0.60522133), (0.68568075, -0.27855828, 0.6724933), (-0.6856989, -0.2785469, 0.6724795), (-0.6856989, -0.2785469, 0.6724795), (0.68568075, -0.27855828, 0.6724933), (0.68570715, -0.14200279, 0.7138914), (-0.6856989, -0.2785469, 0.6724795), (0.68570715, -0.14200279, 0.7138914), (-0.6856694, -0.14200832, 0.7139265), (-0.6856694, -0.14200832, 0.7139265), (0.68570715, -0.14200279, 0.7138914), (0.6857016, 1.14484216e-7, 0.72788274), (-0.6856694, -0.14200832, 0.7139265), (0.6857016, 1.14484216e-7, 0.72788274), (-0.6856969, -4.2671215e-7, 0.7278873), (-0.6856969, -4.2671215e-7, 0.7278873), (0.6857016, 1.14484216e-7, 0.72788274), (0.68570715, 0.14200363, 0.71389127), (-0.6856969, -4.2671215e-7, 0.7278873), (0.68570715, 0.14200363, 0.71389127), (-0.6856913, 0.14200409, 0.71390635), (-0.6856913, 0.14200409, 0.71390635), (0.68570715, 0.14200363, 0.71389127), (0.6856785, 0.27855948, 0.6724952), (-0.6856913, 0.14200409, 0.71390635), (0.6856785, 0.27855948, 0.6724952), (-0.68569887, 0.2785463, 0.67247987), (-0.68569887, 0.2785463, 0.67247987), (0.6856785, 0.27855948, 0.6724952), (0.685707, 0.40439025, 0.60520613), (-0.68569887, 0.2785463, 0.67247987), (0.685707, 0.40439025, 0.60520613), (-0.6856716, 0.40440422, 0.6052369), (-0.6856716, 0.40440422, 0.6052369), (0.685707, 0.40439025, 0.60520613), (0.68569946, 0.51469386, 0.5146907), (-0.6856716, 0.40440422, 0.6052369), (0.68569946, 0.51469386, 0.5146907), (-0.68569964, 0.51469034, 0.5146939), (-0.68569964, 0.51469034, 0.5146939), (0.68569946, 0.51469386, 0.5146907), (0.68570536, 0.605211, 0.40438583), (-0.68569964, 0.51469034, 0.5146939), (0.68570536, 0.605211, 0.40438583), (-0.68569326, 0.60521644, 0.40439823), (-0.68569326, 0.60521644, 0.40439823), (0.68570536, 0.605211, 0.40438583), (0.68567777, 0.67249805, 0.27855423), (-0.68569326, 0.60521644, 0.40439823), (0.68567777, 0.67249805, 0.27855423), (-0.6856986, 0.6724778, 0.27855182), (0.68568224, 0.67249143, -0.27855912), (0.68570364, 0.71389395, -0.14200708), (0.6856949, 0.72788906, -0.00000378298), (0.6856949, 0.72788906, -0.00000378298), (0.68570364, 0.7138955, 0.14199868), (0.68567777, 0.67249805, 0.27855423), (0.68567777, 0.67249805, 0.27855423), (0.68570536, 0.605211, 0.40438583), (0.68569946, 0.51469386, 0.5146907), (0.68569946, 0.51469386, 0.5146907), (0.685707, 0.40439025, 0.60520613), (0.6856785, 0.27855948, 0.6724952), (0.6856785, 0.27855948, 0.6724952), (0.68570715, 0.14200363, 0.71389127), (0.6857016, 1.14484216e-7, 0.72788274), (0.6857016, 1.14484216e-7, 0.72788274), (0.68570715, -0.14200279, 0.7138914), (0.68568075, -0.27855828, 0.6724933), (0.68568075, -0.27855828, 0.6724933), (0.68570703, -0.40438995, 0.6052064), (0.6856995, -0.51469356, 0.51469094), (0.6856995, -0.51469356, 0.51469094), (0.68570536, -0.6052109, 0.40438592), (0.6856863, -0.6724905, 0.2785515), (0.6856863, -0.6724905, 0.2785515), (0.6857037, -0.7138955, 0.1419992), (0.6856949, -0.7278891, -0.000003252446), (0.6856949, -0.7278891, -0.000003252446), (0.68570364, -0.71389407, -0.14200652), (0.6856737, -0.6724989, -0.27856207), (0.6856737, -0.6724989, -0.27856207), (0.6857002, -0.6052111, -0.40439418), (0.6856921, -0.51469564, -0.51469874), (0.6856921, -0.51469564, -0.51469874), (0.6856988, -0.40438938, -0.605216), (0.6856688, -0.27855974, -0.6725047), (0.6856688, -0.27855974, -0.6725047), (0.6856981, -0.14200246, -0.7139002), (0.68569005, -2.906204e-7, -0.7278937), (0.68569005, -2.906204e-7, -0.7278937), (0.68569803, 0.14200231, -0.7139002), (0.6856712, 0.27855834, -0.6725029), (0.6856712, 0.27855834, -0.6725029), (0.6856989, 0.40438902, -0.6052162), (0.685692, 0.51469547, -0.5146989), (0.685692, 0.51469547, -0.5146989), (0.6857002, 0.605211, -0.40439427), (0.68568224, 0.67249143, -0.27855912), (0.68568224, 0.67249143, -0.27855912), (0.6856949, 0.72788906, -0.00000378298), (0.68567777, 0.67249805, 0.27855423), (0.68567777, 0.67249805, 0.27855423), (0.68569946, 0.51469386, 0.5146907), (0.6856785, 0.27855948, 0.6724952), (0.6856785, 0.27855948, 0.6724952), (0.6857016, 1.14484216e-7, 0.72788274), (0.68568075, -0.27855828, 0.6724933), (0.68568075, -0.27855828, 0.6724933), (0.6856995, -0.51469356, 0.51469094), (0.6856863, -0.6724905, 0.2785515), (0.6856863, -0.6724905, 0.2785515), (0.6856949, -0.7278891, -0.000003252446), (0.6856737, -0.6724989, -0.27856207), (0.6856737, -0.6724989, -0.27856207), (0.6856921, -0.51469564, -0.51469874), (0.6856688, -0.27855974, -0.6725047), (0.6856688, -0.27855974, -0.6725047), (0.68569005, -2.906204e-7, -0.7278937), (0.6856712, 0.27855834, -0.6725029), (0.6856712, 0.27855834, -0.6725029), (0.685692, 0.51469547, -0.5146989), (0.68568224, 0.67249143, -0.27855912), (0.68568224, 0.67249143, -0.27855912), (0.68567777, 0.67249805, 0.27855423), (0.6856785, 0.27855948, 0.6724952), (0.6856785, 0.27855948, 0.6724952), (0.68568075, -0.27855828, 0.6724933), (0.6856863, -0.6724905, 0.2785515), (0.6856863, -0.6724905, 0.2785515), (0.6856737, -0.6724989, -0.27856207), (0.6856688, -0.27855974, -0.6725047), (0.6856688, -0.27855974, -0.6725047), (0.6856712, 0.27855834, -0.6725029), (0.68568224, 0.67249143, -0.27855912), (0.68568224, 0.67249143, -0.27855912), (0.6856785, 0.27855948, 0.6724952), (0.6856863, -0.6724905, 0.2785515), (0.6856863, -0.6724905, 0.2785515), (0.6856688, -0.27855974, -0.6725047), (0.68568224, 0.67249143, -0.27855912), (-0.6856986, 0.6724778, 0.27855182), (0.68567777, 0.67249805, 0.27855423), (0.68570364, 0.7138955, 0.14199868), (-0.6856986, 0.6724778, 0.27855182), (0.68570364, 0.7138955, 0.14199868), (-0.6856839, 0.71391225, 0.14201015), (-0.6856839, 0.71391225, 0.14201015), (0.68570364, 0.7138955, 0.14199868), (0.6856949, 0.72788906, -0.00000378298), (-0.6856839, 0.71391225, 0.14201015), (0.6856949, 0.72788906, -0.00000378298), (-0.6857019, 0.72788244, 0.000003801386), (-0.6856839, 0.71391225, 0.14201015), (-0.6857019, 0.72788244, 0.000003801386), (-0.6856971, 0.7139015, -0.14200021), (-0.6856971, 0.7139015, -0.14200021), (-0.68570703, 0.6724717, -0.27854553), (-0.68567884, 0.6052312, -0.40440026), (-0.68567884, 0.6052312, -0.40440026), (-0.68570626, 0.5146903, -0.5146852), (-0.68569946, 0.40439326, -0.6052126), (-0.68569946, 0.40439326, -0.6052126), (-0.6857074, 0.27854866, -0.67247015), (-0.68567836, 0.14200845, -0.7139179), (-0.68567836, 0.14200845, -0.7139179), (-0.68570864, 2.4978164e-7, -0.727876), (-0.68570024, -0.1420038, -0.71389776), (-0.68570024, -0.1420038, -0.71389776), (-0.6857072, -0.27854827, -0.6724704), (-0.6856801, -0.40440297, -0.6052281), (-0.6856801, -0.40440297, -0.6052281), (-0.68570626, -0.51469, -0.51468545), (-0.68569833, -0.60521615, -0.40438995), (-0.68569833, -0.60521615, -0.40438995), (-0.6857071, -0.6724716, -0.27854583), (-0.6856861, -0.71391165, -0.1420027), (-0.6856861, -0.71391165, -0.1420027), (-0.6857019, -0.7278825, 0.000003270599), (-0.68569475, -0.7139023, 0.14200762), (-0.68569475, -0.7139023, 0.14200762), (-0.6856987, -0.6724778, 0.27855158), (-0.6856734, -0.6052322, 0.40440822), (-0.6856734, -0.6052322, 0.40440822), (-0.68569964, -0.5146904, 0.5146938), (-0.6856912, -0.40439433, 0.60522133), (-0.6856912, -0.40439433, 0.60522133), (-0.6856989, -0.2785469, 0.6724795), (-0.6856694, -0.14200832, 0.7139265), (-0.6856694, -0.14200832, 0.7139265), (-0.6856969, -4.2671215e-7, 0.7278873), (-0.6856913, 0.14200409, 0.71390635), (-0.6856913, 0.14200409, 0.71390635), (-0.68569887, 0.2785463, 0.67247987), (-0.6856716, 0.40440422, 0.6052369), (-0.6856716, 0.40440422, 0.6052369), (-0.68569964, 0.51469034, 0.5146939), (-0.68569326, 0.60521644, 0.40439823), (-0.68569326, 0.60521644, 0.40439823), (-0.6856986, 0.6724778, 0.27855182), (-0.6856839, 0.71391225, 0.14201015), (-0.6856839, 0.71391225, 0.14201015), (-0.6856971, 0.7139015, -0.14200021), (-0.68567884, 0.6052312, -0.40440026), (-0.68567884, 0.6052312, -0.40440026), (-0.68569946, 0.40439326, -0.6052126), (-0.68567836, 0.14200845, -0.7139179), (-0.68567836, 0.14200845, -0.7139179), (-0.68570024, -0.1420038, -0.71389776), (-0.6856801, -0.40440297, -0.6052281), (-0.6856801, -0.40440297, -0.6052281), (-0.68569833, -0.60521615, -0.40438995), (-0.6856861, -0.71391165, -0.1420027), (-0.6856861, -0.71391165, -0.1420027), (-0.68569475, -0.7139023, 0.14200762), (-0.6856734, -0.6052322, 0.40440822), (-0.6856734, -0.6052322, 0.40440822), (-0.6856912, -0.40439433, 0.60522133), (-0.6856694, -0.14200832, 0.7139265), (-0.6856694, -0.14200832, 0.7139265), (-0.6856913, 0.14200409, 0.71390635), (-0.6856716, 0.40440422, 0.6052369), (-0.6856716, 0.40440422, 0.6052369), (-0.68569326, 0.60521644, 0.40439823), (-0.6856839, 0.71391225, 0.14201015), (-0.6856839, 0.71391225, 0.14201015), (-0.68567884, 0.6052312, -0.40440026), (-0.68567836, 0.14200845, -0.7139179), (-0.68567836, 0.14200845, -0.7139179), (-0.6856801, -0.40440297, -0.6052281), (-0.6856861, -0.71391165, -0.1420027), (-0.6856861, -0.71391165, -0.1420027), (-0.6856734, -0.6052322, 0.40440822), (-0.6856694, -0.14200832, 0.7139265), (-0.6856694, -0.14200832, 0.7139265), (-0.6856716, 0.40440422, 0.6052369), (-0.6856839, 0.71391225, 0.14201015), (-0.6856839, 0.71391225, 0.14201015), (-0.68567836, 0.14200845, -0.7139179), (-0.6856861, -0.71391165, -0.1420027), (-0.6856861, -0.71391165, -0.1420027), (-0.6856694, -0.14200832, 0.7139265), (-0.6856839, 0.71391225, 0.14201015)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.009774394, 0.015730083, 9.2413586e-8), (0.009774379, 0.015730083, -9.016914e-8), (0.0097743645, 0.015427828, -0.0030688762), (-0.009774409, 0.015427828, -0.0030686937), (0.009774351, 0.0145327, -0.006019731), (-0.009774423, 0.0145327, -0.0060195485), (0.0097743375, 0.013079077, -0.008739253), (-0.009774436, 0.013079077, -0.008739074), (0.009774326, 0.011122838, -0.011122932), (-0.009774447, 0.011122838, -0.011122753), (0.009774317, 0.0087391585, -0.013079171), (-0.009774457, 0.0087391585, -0.013078992), (0.0097743105, 0.006019637, -0.014532787), (-0.009774463, 0.006019637, -0.014532604), (0.009774306, 0.0030687898, -0.015427918), (-0.009774468, 0.0030687898, -0.015427739), (0.009774304, 5.2031435e-11, -0.015730169), (-0.00977447, 5.2031435e-11, -0.015729986), (0.009774306, -0.0030687898, -0.015427918), (-0.009774468, -0.0030687898, -0.015427739), (0.0097743105, -0.006019637, -0.014532787), (-0.009774463, -0.006019637, -0.014532604), (0.009774317, -0.0087391585, -0.013079171), (-0.009774457, -0.0087391585, -0.013078992), (0.009774326, -0.011122838, -0.011122932), (-0.009774447, -0.011122838, -0.011122753), (0.0097743375, -0.013079077, -0.008739253), (-0.009774436, -0.013079077, -0.008739074), (0.009774351, -0.0145327, -0.006019731), (-0.009774423, -0.0145327, -0.0060195485), (0.0097743645, -0.015427828, -0.0030688762), (-0.009774409, -0.015427828, -0.0030686937), (0.009774379, -0.015730083, -9.016914e-8), (-0.009774394, -0.015730083, 9.2413586e-8), (0.009774394, -0.015427828, 0.003068696), (-0.009774379, -0.015427828, 0.0030688785), (0.009774408, -0.0145327, 0.0060195504), (-0.009774365, -0.0145327, 0.006019733), (0.009774421, -0.013079077, 0.008739076), (-0.009774352, -0.013079077, 0.008739254), (0.0097744325, -0.011122838, 0.011122755), (-0.009774341, -0.011122838, 0.011122934), (0.009774442, -0.0087391585, 0.01307899), (-0.009774332, -0.0087391585, 0.013079173), (0.009774448, -0.006019637, 0.014532606), (-0.009774325, -0.006019637, 0.014532789), (0.009774453, -0.0030687898, 0.015427745), (-0.009774321, -0.0030687898, 0.015427913), (0.009774455, 5.2031435e-11, 0.015729986), (-0.009774319, 5.2031435e-11, 0.015730169), (0.009774453, 0.0030687898, 0.015427745), (-0.009774321, 0.0030687898, 0.015427913), (0.009774448, 0.006019637, 0.014532606), (-0.009774325, 0.006019637, 0.014532789), (0.009774442, 0.0087391585, 0.01307899), (-0.009774332, 0.0087391585, 0.013079173), (0.0097744325, 0.011122838, 0.011122755), (-0.009774341, 0.011122838, 0.011122934), (0.009774421, 0.013079077, 0.008739076), (-0.009774352, 0.013079077, 0.008739254), (0.009774408, 0.0145327, 0.0060195504), (-0.009774365, 0.0145327, 0.006019733), (0.009774394, 0.015427828, 0.003068696), (-0.009774379, 0.015427828, 0.0030688785)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, -0.000004766322, 0)
            point3f urdf:collision:origin:xyz = (-0.33756486, -0.2053039, 0.047811784)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999886411, 0, 0.000004766322035702759, 0), (0, 1, 0, 0), (-0.000004766322035702759, 0, 0.9999999999886411, 0), (-0.3375648558139801, -0.20530390739440918, 0.047811783850193024, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_14" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773483, 0.57735413, -0.57734835), (-0.5773607, 0.57734174, 0.5773484), (0.5773483, 0.57735413, 0.57734835), (-0.5773483, 0.57735413, -0.57734835), (0.5773483, 0.57735413, 0.57734835), (0.5773607, 0.57734174, -0.5773484), (0.5773607, 0.57734174, -0.5773484), (0.5773483, 0.57735413, 0.57734835), (0.5773607, -0.57734174, 0.5773484), (0.5773607, 0.57734174, -0.5773484), (0.5773607, -0.57734174, 0.5773484), (0.5773483, -0.57735413, -0.57734835), (0.5773483, -0.57735413, -0.57734835), (0.5773607, -0.57734174, 0.5773484), (-0.5773483, -0.57735413, 0.57734835), (0.5773483, -0.57735413, -0.57734835), (-0.5773483, -0.57735413, 0.57734835), (-0.5773607, -0.57734174, -0.5773484), (-0.5773607, -0.57734174, -0.5773484), (-0.5773483, -0.57735413, 0.57734835), (-0.5773607, 0.57734174, 0.5773484), (-0.5773607, -0.57734174, -0.5773484), (-0.5773607, 0.57734174, 0.5773484), (-0.5773483, 0.57735413, -0.57734835), (0.5773607, 0.57734174, -0.5773484), (0.5773483, -0.57735413, -0.57734835), (-0.5773607, -0.57734174, -0.5773484), (0.5773607, 0.57734174, -0.5773484), (-0.5773607, -0.57734174, -0.5773484), (-0.5773483, 0.57735413, -0.57734835), (0.5773607, -0.57734174, 0.5773484), (0.5773483, 0.57735413, 0.57734835), (-0.5773607, 0.57734174, 0.5773484), (0.5773607, -0.57734174, 0.5773484), (-0.5773607, 0.57734174, 0.5773484), (-0.5773483, -0.57735413, 0.57734835)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0069999546, 0.29499993, -0.3935144), (-0.0069999546, 0.29499993, 0.3935144), (0.006999925, 0.29499993, 0.3935144), (0.006999925, 0.29499993, -0.3935144), (0.006999925, -0.29499993, 0.3935144), (0.006999925, -0.29499993, -0.3935144), (-0.0069999546, -0.29499993, 0.3935144), (-0.0069999546, -0.29499993, -0.3935144)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, 0.9076964, -0.28469467)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (-0.020835012197494507, 0.9076964259147644, -0.2846946716308594, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_15" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734877, 0.5773533, 0.57734877), (0.5773693, 0.5773394, 0.5773423), (0.57734877, 0.5773533, -0.57734877), (-0.57734877, 0.5773533, 0.57734877), (0.57734877, 0.5773533, -0.57734877), (-0.5773693, 0.5773394, -0.5773423), (-0.5773693, 0.5773394, -0.5773423), (0.57734877, 0.5773533, -0.57734877), (0.5773693, -0.5773394, -0.5773423), (-0.5773693, 0.5773394, -0.5773423), (0.5773693, -0.5773394, -0.5773423), (-0.57734877, -0.5773533, -0.57734877), (-0.57734877, -0.5773533, -0.57734877), (0.5773693, -0.5773394, -0.5773423), (0.57734877, -0.5773533, 0.57734877), (-0.57734877, -0.5773533, -0.57734877), (0.57734877, -0.5773533, 0.57734877), (-0.5773693, -0.5773394, 0.5773423), (-0.5773693, -0.5773394, 0.5773423), (0.57734877, -0.5773533, 0.57734877), (0.5773693, 0.5773394, 0.5773423), (-0.5773693, -0.5773394, 0.5773423), (0.5773693, 0.5773394, 0.5773423), (-0.57734877, 0.5773533, 0.57734877), (-0.5773693, 0.5773394, -0.5773423), (-0.57734877, -0.5773533, -0.57734877), (-0.5773693, -0.5773394, 0.5773423), (-0.5773693, 0.5773394, -0.5773423), (-0.5773693, -0.5773394, 0.5773423), (-0.57734877, 0.5773533, 0.57734877), (0.5773693, -0.5773394, -0.5773423), (0.57734877, 0.5773533, -0.57734877), (0.5773693, 0.5773394, 0.5773423), (0.5773693, -0.5773394, -0.5773423), (0.5773693, 0.5773394, 0.5773423), (0.57734877, -0.5773533, 0.57734877)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0034999847, 0.26000002, 0.29500014), (0.0034999847, 0.26000002, 0.29500014), (0.0034999847, 0.26000002, -0.29500014), (-0.0034999847, 0.26000002, -0.29500014), (0.0034999847, -0.26, -0.29500014), (-0.0034999847, -0.26, -0.29500014), (0.0034999847, -0.26, 0.29500014), (-0.0034999847, -0.26, 0.29500014)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (-0.03407277, 0.014845118, 0.14729089)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Kitchenette_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 5.551115123125783e-17, 0.9999999999999989, 0), (-0.999999999999998, -4.371139006309477e-8, -4.371139000758362e-8, 0), (4.371139000758362e-8, -0.9999999999999989, 1.9984014443252818e-15, 0), (-0.03407277166843414, 0.014845117926597595, 0.1472908854484558, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsPrismaticJoint "drawer_02_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_02>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, 0.616, -0.157)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            vector3f urdf:joint:axis = (-1, 0, 0)
            rel urdf:joint:child = </dlr_kitchen/drawer_02>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, 0.616, -0.157)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_03_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_03>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.097, 0.616, -0.522)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            vector3f urdf:joint:axis = (-1, 0, 0)
            rel urdf:joint:child = </dlr_kitchen/drawer_03>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.097, 0.616, -0.522)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsRevoluteJoint "oven_door_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/oven_door>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.316, 0.004, -0.486)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, 0.7071068, 0, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 90.00021
            vector3f urdf:joint:axis = (0, -1, 0)
            rel urdf:joint:child = </dlr_kitchen/oven_door>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 1.5708001
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.316, 0.004, -0.486)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsPrismaticJoint "oven_drawer_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/oven_drawer>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, 0.016, -0.557)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            vector3f urdf:joint:axis = (-1, 0, 0)
            rel urdf:joint:child = </dlr_kitchen/oven_drawer>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, 0.016, -0.557)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_04_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_04>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, -0.584, 0.043)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            vector3f urdf:joint:axis = (-1, 0, 0)
            rel urdf:joint:child = </dlr_kitchen/drawer_04>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, -0.584, 0.043)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_05_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_05>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, -0.584, -0.157)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            vector3f urdf:joint:axis = (-1, 0, 0)
            rel urdf:joint:child = </dlr_kitchen/drawer_05>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, -0.584, -0.157)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_06_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_06>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.097, -0.584, -0.522)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            vector3f urdf:joint:axis = (-1, 0, 0)
            rel urdf:joint:child = </dlr_kitchen/drawer_06>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.097, -0.584, -0.522)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_01_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_01>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, 0.616, 0.043)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            vector3f urdf:joint:axis = (-1, 0, 0)
            rel urdf:joint:child = </dlr_kitchen/drawer_01>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, 0.616, 0.043)
            rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }
    }

    def Xform "drawer_02" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        bool physics:kinematicEnabled = 0
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (0.00015154743, 0.9979493, 0.00036479018, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_drawernwnartifact>
        rel semanticTag:semanticReports = </SOMA_DFL/_class_drawernwnartifact>
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (3.1413348, 0.12810309, 0.0007145388)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (1.8487005403404815, 3.8178377959889542, 0.6292089819908142, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_02_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734823, 0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (-0.57734823, 0.57734823, -0.5773542), (0.57734823, -0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.57734823, 0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (0.5773699, 0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (-0.57734823, 0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (-0.57734823, 0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (0.57734823, 0.57734823, 0.5773542)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0049999617, 0.2828017, -0.28303587), (0.004999969, 0.2828017, -0.28303587), (0.004999969, -0.2828017, -0.28303587), (-0.0049999617, -0.2828017, -0.28303587), (0.004999969, -0.2828017, 0.28303587), (-0.0049999617, -0.2828017, 0.28303587), (0.004999969, 0.2828017, 0.28303587), (-0.0049999617, 0.2828017, 0.28303587)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_02_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11408046633005142, 1.4901161193847656e-8, -0.08638661354780197, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773302, -0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, 0.5773603, -0.5773603), (-0.5773302, -0.5773603, 0.5773603), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, -0.5773511, -0.5773549), (-0.57734483, -0.5773511, -0.5773549), (-0.5773302, 0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, 0.5773511, -0.57735497), (0.5773302, -0.5773603, -0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (0.5773302, 0.5773603, 0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773302, 0.5773603, 0.5773603), (0.5773449, -0.5773511, 0.57735497), (0.5773449, -0.5773511, 0.57735497), (0.5773302, 0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, -0.5773603, 0.5773603), (-0.57734483, -0.5773511, -0.5773549), (0.5773302, -0.5773603, -0.5773603), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.5773302, -0.5773603, 0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, 0.5773511, 0.5773549), (0.5773302, 0.5773603, 0.5773603)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0054723136, -0.09984982, 0.29802996), (-0.0054723136, 0.09984982, 0.29802996), (-0.0054723136, 0.09984982, -0.29802996), (-0.0054723136, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, -0.29802996), (0.0054722913, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, 0.29802996), (0.0054722913, -0.09984982, 0.29802996)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_02_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.17442794144153595, -0.0008446574211120605, -0.03791983425617218, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773379, -0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.5773379, -0.5773564, 0.5773564), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, -0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, 0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (0.5773379, 0.5773564, 0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.5773379, 0.5773564, 0.5773564), (0.57734567, -0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (-0.57734567, -0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, 0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0031750873, -0.061499752, 0.272), (-0.0031750873, 0.061499752, 0.272), (-0.0031750873, 0.061499752, -0.272), (-0.0031750873, -0.061499752, -0.272), (0.0031750724, 0.061499752, -0.272), (0.0031750724, -0.061499752, -0.272), (0.0031750724, 0.061499752, 0.272), (0.0031750724, -0.061499752, 0.272)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_02_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.3939414918422699, -0.0008016228675842285, -0.019886843860149384, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_02_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, -0.2778016924858093, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_02_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, 0.2761983275413513, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.6204346, -0.53078127, -0.5773493), (-0.53078264, 0.62043554, -0.5773469), (0.5759696, 0.5705666, -0.58541673), (-0.6204346, -0.53078127, -0.5773493), (0.5759696, 0.5705666, -0.58541673), (0.5782127, -0.583695, -0.57006174), (0.5782127, -0.583695, -0.57006174), (0.5759696, 0.5705666, -0.58541673), (0.5759755, 0.5705681, 0.5854094), (0.5782127, -0.583695, -0.57006174), (0.5759755, 0.5705681, 0.5854094), (0.5782246, -0.58370304, 0.5700412), (0.5782246, -0.58370304, 0.5700412), (0.5759755, 0.5705681, 0.5854094), (-0.5307868, 0.6204455, 0.57733256), (0.5782246, -0.58370304, 0.5700412), (-0.5307868, 0.6204455, 0.57733256), (-0.62043524, -0.53078425, 0.5773458), (-0.62043524, -0.53078425, 0.5773458), (-0.5307868, 0.6204455, 0.57733256), (-0.53078264, 0.62043554, -0.5773469), (-0.62043524, -0.53078425, 0.5773458), (-0.53078264, 0.62043554, -0.5773469), (-0.6204346, -0.53078127, -0.5773493), (0.5782127, -0.583695, -0.57006174), (0.5782246, -0.58370304, 0.5700412), (-0.62043524, -0.53078425, 0.5773458), (0.5782127, -0.583695, -0.57006174), (-0.62043524, -0.53078425, 0.5773458), (-0.6204346, -0.53078127, -0.5773493), (0.5759755, 0.5705681, 0.5854094), (0.5759696, 0.5705666, -0.58541673), (-0.53078264, 0.62043554, -0.5773469), (0.5759755, 0.5705681, 0.5854094), (-0.53078264, 0.62043554, -0.5773469), (-0.5307868, 0.6204455, 0.57733256)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.010100868, -0.029527072, -0.27986103), (-0.004821146, 0.038267687, -0.27986103), (0.0051486567, 0.03749126, -0.27986103), (0.009838887, -0.03107994, -0.27986103), (0.0051486567, 0.03749126, 0.27986097), (0.009838887, -0.03107994, 0.27986097), (-0.004821146, 0.038267687, 0.27986097), (-0.010100868, -0.029527072, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_02_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.357943561572597e-8, 0.9969812315710851, 0.07764292559532149, 0), (4.710527007345533e-8, -0.07764292559531949, 0.9969812315710851, 0), (0.999999999999998, 4.7105270295499935e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, -0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.62043464, -0.5307812, -0.57734925), (-0.5782127, -0.583695, -0.57006174), (-0.5759696, 0.5705666, -0.58541673), (0.62043464, -0.5307812, -0.57734925), (-0.5759696, 0.5705666, -0.58541673), (0.5307827, 0.62043554, -0.5773469), (-0.5782127, -0.583695, -0.57006174), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (-0.5782127, -0.583695, -0.57006174), (-0.5759755, 0.5705681, 0.5854094), (-0.5759696, 0.5705666, -0.58541673), (-0.5782246, -0.58370304, 0.5700412), (0.62043524, -0.53078425, 0.5773458), (0.5307868, 0.6204455, 0.57733256), (-0.5782246, -0.58370304, 0.5700412), (0.5307868, 0.6204455, 0.57733256), (-0.5759755, 0.5705681, 0.5854094), (0.62043524, -0.53078425, 0.5773458), (0.62043464, -0.5307812, -0.57734925), (0.5307827, 0.62043554, -0.5773469), (0.62043524, -0.53078425, 0.5773458), (0.5307827, 0.62043554, -0.5773469), (0.5307868, 0.6204455, 0.57733256), (-0.5782127, -0.583695, -0.57006174), (0.62043464, -0.5307812, -0.57734925), (0.62043524, -0.53078425, 0.5773458), (-0.5782127, -0.583695, -0.57006174), (0.62043524, -0.53078425, 0.5773458), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (0.5307868, 0.6204455, 0.57733256), (0.5307827, 0.62043554, -0.5773469), (-0.5759755, 0.5705681, 0.5854094), (0.5307827, 0.62043554, -0.5773469), (-0.5759696, 0.5705666, -0.58541673)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.010100865, -0.029527072, -0.27986103), (-0.009838889, -0.03107994, -0.27986103), (-0.0051486595, 0.03749126, -0.27986103), (0.004821143, 0.038267687, -0.27986103), (-0.009838889, -0.03107994, 0.27986097), (-0.0051486595, 0.03749126, 0.27986097), (0.010100865, -0.029527072, 0.27986097), (0.004821143, 0.038267687, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_02_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.3579435393681365e-8, 0.9969812315710851, -0.07764292559532149, 0), (4.03175097196673e-8, 0.07764292559532326, 0.9969812315710851, 0), (0.9999999999999982, 4.03175098306896e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, 0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_02_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (-0.53304553, -0.464603, 0.5330521, 0.4646094)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_drawernwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (1.5707973, -0.13699229, -1.5708094)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_02_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773567, -0.57734704, -0.57734704), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773567, -0.57734704, -0.57734704), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, 0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (-0.5773567, 0.57734704, 0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, 0.5773631, 0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773567, -0.57734704, 0.57734704), (0.5773553, -0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (0.5773567, -0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, -0.57734704, -0.57734704), (-0.5773553, 0.5773631, -0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773567, -0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, -0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005019702, -0.010811567, -0.16495954), (-0.005019702, -0.010811567, 0.16495954), (-0.005019702, 0.010811567, 0.16495954), (-0.005019702, 0.010811567, -0.16495954), (0.005019702, 0.010811567, 0.16495954), (0.005019702, 0.010811567, -0.16495954), (0.005019702, -0.010811567, 0.16495954), (0.005019702, -0.010811567, -0.16495954)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.000002346932888031006, 0.0012064725160598755, 9.834766387939453e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_02_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (-0.5773559, 0.5773559, -0.57733905), (0.5773559, -0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.57735586, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.57735586, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005500015, 0.010811567, -0.012989666), (0.0055000074, 0.010811567, -0.012989666), (0.0055000074, -0.010811567, -0.012989666), (-0.005500015, -0.010811567, -0.012989666), (0.0055000074, -0.010811567, 0.012989668), (-0.005500015, -0.010811567, 0.012989668), (0.0055000074, 0.010811567, 0.012989668), (-0.005500015, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064725160598755, 0.15946051478385925, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_02_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (-0.5773559, 0.5773559, -0.577339), (0.5773559, -0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773559, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.5773559, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0055039823, 0.010811567, -0.012989666), (0.0055039823, 0.010811567, -0.012989666), (0.0055039823, -0.010811567, -0.012989666), (-0.0055039823, -0.010811567, -0.012989666), (0.0055039823, -0.010811567, 0.012989668), (-0.0055039823, -0.010811567, 0.012989668), (0.0055039823, 0.010811567, 0.012989668), (-0.0055039823, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064723996445537, -0.15945649147033691, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_03" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (-0.009161649, -0.00032812098, -0.07310583)
        float3 physics:diagonalInertia = (0.38564655, 0.4764746, 0.6430068)
        bool physics:kinematicEnabled = 0
        float physics:mass = 7.7570677
        quatf physics:principalAxes = (0.00045899992, 0.99140584, 0.0021758925, -0.13080314)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_drawernwnartifact>
        rel semanticTag:semanticReports = </SOMA_DFL/_class_drawernwnartifact>
        float urdf:link:inertial:inertia:ixx = 0.38564655
        float urdf:link:inertial:inertia:iyy = 0.4764746
        float urdf:link:inertial:inertia:izz = 0.6430068
        float urdf:link:inertial:mass = 7.7570677
        float3 urdf:link:inertial:origin:rpy = (3.1412396, 0.26235947, 0.004342933)
        point3f urdf:link:inertial:origin:xyz = (-0.009161649, -0.00032812098, -0.07310583)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (1.8487003496413175, 3.8688377950349233, 0.26420897245407104, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_03_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.6204343, -0.5307813, -0.57734954), (-0.5782127, -0.58369505, -0.5700617), (-0.57597136, 0.57056576, -0.5854158), (0.6204343, -0.5307813, -0.57734954), (-0.57597136, 0.57056576, -0.5854158), (0.5307804, 0.62043667, -0.57734793), (-0.5782127, -0.58369505, -0.5700617), (-0.5782264, -0.5837023, 0.5700401), (-0.5759734, 0.5705692, 0.58541054), (-0.5782127, -0.58369505, -0.5700617), (-0.5759734, 0.5705692, 0.58541054), (-0.57597136, 0.57056576, -0.5854158), (-0.5782264, -0.5837023, 0.5700401), (0.62043333, -0.5307853, 0.5773469), (0.5307882, 0.6204448, 0.57733196), (-0.5782264, -0.5837023, 0.5700401), (0.5307882, 0.6204448, 0.57733196), (-0.5759734, 0.5705692, 0.58541054), (0.62043333, -0.5307853, 0.5773469), (0.6204343, -0.5307813, -0.57734954), (0.5307804, 0.62043667, -0.57734793), (0.62043333, -0.5307853, 0.5773469), (0.5307804, 0.62043667, -0.57734793), (0.5307882, 0.6204448, 0.57733196), (-0.5782127, -0.58369505, -0.5700617), (0.6204343, -0.5307813, -0.57734954), (0.62043333, -0.5307853, 0.5773469), (-0.5782127, -0.58369505, -0.5700617), (0.62043333, -0.5307853, 0.5773469), (-0.5782264, -0.5837023, 0.5700401), (-0.5759734, 0.5705692, 0.58541054), (0.5307882, 0.6204448, 0.57733196), (0.5307804, 0.62043667, -0.57734793), (-0.5759734, 0.5705692, 0.58541054), (0.5307804, 0.62043667, -0.57734793), (-0.57597136, 0.57056576, -0.5854158)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.010100865, -0.029527064, -0.279861), (-0.009838889, -0.031079935, -0.279861), (-0.0051486595, 0.037491247, -0.279861), (0.004821143, 0.038267676, -0.279861), (-0.009838889, -0.031079935, 0.27986097), (-0.0051486595, 0.037491247, 0.27986097), (0.010100865, -0.029527064, 0.27986097), (0.004821143, 0.038267676, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772117, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, 0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_03_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.3579435393681365e-8, 0.9969812298356301, -0.07764294787958859, 0), (4.031750888700003e-8, 0.07764294787959036, 0.9969812298356301, 0), (0.9999999999999982, 4.031750888700003e-8, -4.3579435393681365e-8, 0), (0.06011587753891945, 0.275023877620697, -0.11386485397815704, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.6204352, -0.53078085, -0.57734895), (-0.5307804, 0.62043667, -0.57734793), (0.57597125, 0.5705659, -0.5854159), (-0.6204352, -0.53078085, -0.57734895), (0.57597125, 0.5705659, -0.5854159), (0.5782116, -0.5836955, -0.57006216), (0.5782116, -0.5836955, -0.57006216), (0.57597125, 0.5705659, -0.5854159), (0.57597125, 0.57057023, 0.5854116), (0.5782116, -0.5836955, -0.57006216), (0.57597125, 0.57057023, 0.5854116), (0.5782262, -0.5837024, 0.5700403), (0.5782262, -0.5837024, 0.5700403), (0.57597125, 0.57057023, 0.5854116), (-0.53079003, 0.6204439, 0.5773311), (0.5782262, -0.5837024, 0.5700403), (-0.53079003, 0.6204439, 0.5773311), (-0.6204333, -0.5307853, 0.5773469), (-0.6204333, -0.5307853, 0.5773469), (-0.53079003, 0.6204439, 0.5773311), (-0.5307804, 0.62043667, -0.57734793), (-0.6204333, -0.5307853, 0.5773469), (-0.5307804, 0.62043667, -0.57734793), (-0.6204352, -0.53078085, -0.57734895), (0.5782116, -0.5836955, -0.57006216), (0.5782262, -0.5837024, 0.5700403), (-0.6204333, -0.5307853, 0.5773469), (0.5782116, -0.5836955, -0.57006216), (-0.6204333, -0.5307853, 0.5773469), (-0.6204352, -0.53078085, -0.57734895), (0.57597125, 0.57057023, 0.5854116), (0.57597125, 0.5705659, -0.5854159), (-0.5307804, 0.62043667, -0.57734793), (0.57597125, 0.57057023, 0.5854116), (-0.5307804, 0.62043667, -0.57734793), (-0.53079003, 0.6204439, 0.5773311)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.010100868, -0.029527064, -0.279861), (-0.0048211454, 0.038267676, -0.279861), (0.005148657, 0.037491247, -0.279861), (0.009838886, -0.031079933, -0.279861), (0.005148657, 0.037491247, 0.27986097), (0.009838886, -0.031079933, 0.27986097), (-0.0048211454, 0.038267676, 0.27986097), (-0.010100868, -0.029527064, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772118, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, -0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_03_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.357943561572597e-8, 0.9969812292571452, 0.07764295530767751, 0), (4.7105271627767564e-8, -0.07764295530767562, 0.9969812292571452, 0), (0.9999999999999981, 4.7105271627767564e-8, -4.357943561572597e-8, 0), (0.06011587753891945, -0.275023877620697, -0.11386485397815704, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.5773394, -0.5773721), (0.5773517, 0.5773517, -0.5773474), (0.5773394, -0.5773394, -0.5773721), (-0.5773394, 0.5773394, -0.5773721), (0.5773394, -0.5773394, -0.5773721), (-0.5773517, -0.5773517, -0.5773474), (-0.5773517, -0.5773517, -0.5773474), (0.5773394, -0.5773394, -0.5773721), (0.5773517, -0.5773517, 0.5773474), (-0.5773517, -0.5773517, -0.5773474), (0.5773517, -0.5773517, 0.5773474), (-0.5773394, -0.5773394, 0.5773721), (-0.5773394, -0.5773394, 0.5773721), (0.5773517, -0.5773517, 0.5773474), (0.5773394, 0.5773394, 0.5773721), (-0.5773394, -0.5773394, 0.5773721), (0.5773394, 0.5773394, 0.5773721), (-0.5773517, 0.5773517, 0.5773474), (-0.5773517, 0.5773517, 0.5773474), (0.5773394, 0.5773394, 0.5773721), (0.5773517, 0.5773517, -0.5773474), (-0.5773517, 0.5773517, 0.5773474), (0.5773517, 0.5773517, -0.5773474), (-0.5773394, 0.5773394, -0.5773721), (-0.5773517, -0.5773517, -0.5773474), (-0.5773394, -0.5773394, 0.5773721), (-0.5773517, 0.5773517, 0.5773474), (-0.5773517, -0.5773517, -0.5773474), (-0.5773517, 0.5773517, 0.5773474), (-0.5773394, 0.5773394, -0.5773721), (0.5773517, -0.5773517, 0.5773474), (0.5773394, -0.5773394, -0.5773721), (0.5773517, 0.5773517, -0.5773474), (0.5773517, -0.5773517, 0.5773474), (0.5773517, 0.5773517, -0.5773474), (0.5773394, 0.5773394, 0.5773721)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999988, 0.004999995, -0.279861), (0.004999988, 0.004999995, -0.279861), (0.004999988, -0.004999995, -0.279861), (-0.004999988, -0.004999995, -0.279861), (0.004999988, -0.004999995, 0.27986097), (-0.004999988, -0.004999995, 0.27986097), (0.004999988, 0.004999995, 0.27986097), (-0.004999988, 0.004999995, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06011587, 0.27619833, 0.04391294)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_03_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.06011587008833885, 0.2761983275413513, 0.043912939727306366, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, -0.5773394, -0.5773721), (-0.5773517, 0.5773517, -0.5773474), (0.5773394, 0.5773394, -0.5773721), (-0.5773394, -0.5773394, -0.5773721), (0.5773394, 0.5773394, -0.5773721), (0.5773517, -0.5773517, -0.5773474), (0.5773517, -0.5773517, -0.5773474), (0.5773394, 0.5773394, -0.5773721), (0.5773517, 0.5773517, 0.5773474), (0.5773517, -0.5773517, -0.5773474), (0.5773517, 0.5773517, 0.5773474), (0.5773394, -0.5773394, 0.5773721), (0.5773394, -0.5773394, 0.5773721), (0.5773517, 0.5773517, 0.5773474), (-0.5773394, 0.5773394, 0.5773721), (0.5773394, -0.5773394, 0.5773721), (-0.5773394, 0.5773394, 0.5773721), (-0.5773517, -0.5773517, 0.5773474), (-0.5773517, -0.5773517, 0.5773474), (-0.5773394, 0.5773394, 0.5773721), (-0.5773517, 0.5773517, -0.5773474), (-0.5773517, -0.5773517, 0.5773474), (-0.5773517, 0.5773517, -0.5773474), (-0.5773394, -0.5773394, -0.5773721), (0.5773517, -0.5773517, -0.5773474), (0.5773394, -0.5773394, 0.5773721), (-0.5773517, -0.5773517, 0.5773474), (0.5773517, -0.5773517, -0.5773474), (-0.5773517, -0.5773517, 0.5773474), (-0.5773394, -0.5773394, -0.5773721), (0.5773517, 0.5773517, 0.5773474), (0.5773394, 0.5773394, -0.5773721), (-0.5773517, 0.5773517, -0.5773474), (0.5773517, 0.5773517, 0.5773474), (-0.5773517, 0.5773517, -0.5773474), (-0.5773394, 0.5773394, 0.5773721)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999995, -0.0049999915, -0.279861), (-0.004999995, 0.0049999915, -0.279861), (0.004999995, 0.0049999915, -0.279861), (0.004999995, -0.0049999915, -0.279861), (0.004999995, 0.0049999915, 0.27986097), (0.004999995, -0.0049999915, 0.27986097), (-0.004999995, 0.0049999915, 0.27986097), (-0.004999995, -0.0049999915, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.06011587, -0.2778017, 0.043912943)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_03_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.9999999999999989, 1.27675647831893e-15, 0), (4.371139000758362e-8, 6.661338147750939e-16, 0.9999999999999989, 0), (0.999999999999998, 4.371139000758362e-8, -4.371139006309477e-8, 0), (0.06011587008833885, -0.2778016924858093, 0.043912943452596664, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57733005, -0.57736033, 0.57736033), (-0.57734656, 0.5773492, 0.57735497), (-0.57733005, 0.57736033, -0.57736033), (-0.57733005, -0.57736033, 0.57736033), (-0.57733005, 0.57736033, -0.57736033), (-0.57734656, -0.5773492, -0.57735497), (-0.57734656, -0.5773492, -0.57735497), (-0.57733005, 0.57736033, -0.57736033), (0.57734656, 0.5773492, -0.57735497), (-0.57734656, -0.5773492, -0.57735497), (0.57734656, 0.5773492, -0.57735497), (0.57733005, -0.57736033, -0.57736033), (0.57733005, -0.57736033, -0.57736033), (0.57734656, 0.5773492, -0.57735497), (0.57733005, 0.57736033, 0.57736033), (0.57733005, -0.57736033, -0.57736033), (0.57733005, 0.57736033, 0.57736033), (0.57734656, -0.5773492, 0.57735497), (0.57734656, -0.5773492, 0.57735497), (0.57733005, 0.57736033, 0.57736033), (-0.57734656, 0.5773492, 0.57735497), (0.57734656, -0.5773492, 0.57735497), (-0.57734656, 0.5773492, 0.57735497), (-0.57733005, -0.57736033, 0.57736033), (-0.57734656, -0.5773492, -0.57735497), (0.57733005, -0.57736033, -0.57736033), (0.57734656, -0.5773492, 0.57735497), (-0.57734656, -0.5773492, -0.57735497), (0.57734656, -0.5773492, 0.57735497), (-0.57733005, -0.57736033, 0.57736033), (0.57734656, 0.5773492, -0.57735497), (-0.57733005, 0.57736033, -0.57736033), (-0.57734656, 0.5773492, 0.57735497), (0.57734656, 0.5773492, -0.57735497), (-0.57734656, 0.5773492, 0.57735497), (0.57733005, 0.57736033, 0.57736033)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0031750798, -0.096499965, 0.2831666), (-0.0031750798, 0.096499965, 0.2831666), (-0.0031750798, 0.096499965, -0.2831666), (-0.0031750798, -0.096499965, -0.2831666), (0.0031750798, 0.096499965, -0.2831666), (0.0031750798, -0.096499965, -0.2831666), (0.0031750798, 0.096499965, 0.2831666), (0.0031750798, -0.096499965, 0.2831666)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.34315193, -0.00036489964, -0.047587022)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_03_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.34315192699432373, -0.0003648996353149414, -0.04758702218532562, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773559, -0.5773474, 0.5773474), (-0.57734567, 0.577352, 0.5773531), (-0.5773559, 0.5773474, -0.5773474), (-0.5773559, -0.5773474, 0.5773474), (-0.5773559, 0.5773474, -0.5773474), (-0.57734567, -0.577352, -0.5773531), (-0.57734567, -0.577352, -0.5773531), (-0.5773559, 0.5773474, -0.5773474), (0.57734567, 0.577352, -0.5773531), (-0.57734567, -0.577352, -0.5773531), (0.57734567, 0.577352, -0.5773531), (0.5773559, -0.5773474, -0.5773474), (0.5773559, -0.5773474, -0.5773474), (0.57734567, 0.577352, -0.5773531), (0.5773559, 0.5773474, 0.5773474), (0.5773559, -0.5773474, -0.5773474), (0.5773559, 0.5773474, 0.5773474), (0.57734567, -0.577352, 0.5773531), (0.57734567, -0.577352, 0.5773531), (0.5773559, 0.5773474, 0.5773474), (-0.57734567, 0.577352, 0.5773531), (0.57734567, -0.577352, 0.5773531), (-0.57734567, 0.577352, 0.5773531), (-0.5773559, -0.5773474, 0.5773474), (-0.57734567, -0.577352, -0.5773531), (0.5773559, -0.5773474, -0.5773474), (0.57734567, -0.577352, 0.5773531), (-0.57734567, -0.577352, -0.5773531), (0.57734567, -0.577352, 0.5773531), (-0.5773559, -0.5773474, 0.5773474), (0.57734567, 0.577352, -0.5773531), (-0.5773559, 0.5773474, -0.5773474), (-0.57734567, 0.577352, 0.5773531), (0.57734567, 0.577352, -0.5773531), (-0.57734567, 0.577352, 0.5773531), (0.5773559, 0.5773474, 0.5773474)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0054723024, -0.19985001, 0.29802996), (-0.0054723024, 0.19985, 0.29802996), (-0.0054723024, 0.19985, -0.29802996), (-0.0054723024, -0.19985001, -0.29802996), (0.0054723024, 0.19985, -0.29802996), (0.0054723024, -0.19985001, -0.29802996), (0.0054723024, 0.19985, 0.29802996), (0.0054723024, -0.19985001, 0.29802996)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.22521752, -0.0008446574, 0.026221953)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_03_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.2252175211906433, -0.0008446574211120605, 0.026221953332424164, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734823, 0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (-0.57734823, 0.57734823, -0.5773542), (0.57734823, -0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.57734823, 0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (0.5773699, 0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (-0.57734823, 0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (-0.57734823, 0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (0.57734823, 0.57734823, 0.5773542)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0049999654, 0.2828017, -0.28303587), (0.0049999654, 0.2828017, -0.28303587), (0.0049999654, -0.2828017, -0.28303587), (-0.0049999654, -0.2828017, -0.28303587), (0.0049999654, -0.2828017, 0.28303587), (-0.0049999654, -0.2828017, 0.28303587), (0.0049999654, 0.2828017, 0.28303587), (-0.0049999654, 0.2828017, 0.28303587)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06329089, 1.4901161e-8, -0.14908701)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_03_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.06329088658094406, 1.4901161193847656e-8, -0.14908701181411743, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_03_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (-0.53304553, -0.464603, 0.5330521, 0.4646094)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_drawernwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (1.5707973, -0.13699229, -1.5708094)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.26072901487350464, 0.0004400000034365803, 0.1899079978466034, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_03_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773567, -0.57734704, -0.57734704), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773567, -0.57734704, -0.57734704), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, 0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (-0.5773567, 0.57734704, 0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, 0.5773631, 0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773567, -0.57734704, 0.57734704), (0.5773553, -0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (0.5773567, -0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, -0.57734704, -0.57734704), (-0.5773553, 0.5773631, -0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773567, -0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, -0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005019702, -0.010811567, -0.16495954), (-0.005019702, -0.010811567, 0.16495954), (-0.005019702, 0.010811567, 0.16495954), (-0.005019702, 0.010811567, -0.16495954), (0.005019702, 0.010811567, 0.16495954), (0.005019702, 0.010811567, -0.16495954), (0.005019702, -0.010811567, 0.16495954), (0.005019702, -0.010811567, -0.16495954)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.000002346932888031006, 0.0012064725160598755, 9.834766387939453e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_03_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (-0.5773559, 0.5773559, -0.57733905), (0.5773559, -0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.57735586, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.57735586, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005500015, 0.010811567, -0.012989666), (0.0055000074, 0.010811567, -0.012989666), (0.0055000074, -0.010811567, -0.012989666), (-0.005500015, -0.010811567, -0.012989666), (0.0055000074, -0.010811567, 0.012989668), (-0.005500015, -0.010811567, 0.012989668), (0.0055000074, 0.010811567, 0.012989668), (-0.005500015, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064725160598755, 0.15946051478385925, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_03_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (-0.5773559, 0.5773559, -0.577339), (0.5773559, -0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773559, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.5773559, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0055039823, 0.010811567, -0.012989666), (0.0055039823, 0.010811567, -0.012989666), (0.0055039823, -0.010811567, -0.012989666), (-0.0055039823, -0.010811567, -0.012989666), (0.0055039823, -0.010811567, 0.012989668), (-0.0055039823, -0.010811567, 0.012989668), (0.0055039823, 0.010811567, 0.012989668), (-0.0055039823, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064723996445537, -0.15945649147033691, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "oven_door" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (-0.006090462, 0.010207861, 0.23177263)
        float3 physics:diagonalInertia = (0.09859467, 0.24083796, 0.33928758)
        bool physics:kinematicEnabled = 0
        float physics:mass = 3.3539793
        quatf physics:principalAxes = (-0.70710677, -3.090862e-8, 0.7071068, 3.0908623e-8)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_doornwnartifactmovable_barrier>
        rel semanticTag:semanticReports = [
            </SOMA_DFL/_class_doornwnartifactmovable_barrier>,
            </SOMA_DFL/_class_doorwaynwnartifact>,
            </SOMA_DFL/_class_ovennwnartifact>,
        ]
        float urdf:link:inertial:inertia:ixx = 0.09859467
        float urdf:link:inertial:inertia:iyy = 0.24083796
        float urdf:link:inertial:inertia:izz = 0.33928758
        float urdf:link:inertial:mass = 3.3539793
        float3 urdf:link:inertial:origin:rpy = (2.337974, -1.5707963, -2.337974)
        point3f urdf:link:inertial:origin:xyz = (-0.006090462, 0.010207861, 0.23177263)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (2.460701164993894, 3.649840071743943, 0.3002089858055115, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_oven_door_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57736456, -0.57734317, 0.57734317), (-0.57734585, 0.5773514, 0.57735354), (-0.57736456, 0.57734317, -0.57734317), (-0.57736456, -0.57734317, 0.57734317), (-0.57736456, 0.57734317, -0.57734317), (-0.57734585, -0.5773514, -0.57735354), (-0.57734585, -0.5773514, -0.57735354), (-0.57736456, 0.57734317, -0.57734317), (0.57734585, 0.5773514, -0.57735354), (-0.57734585, -0.5773514, -0.57735354), (0.57734585, 0.5773514, -0.57735354), (0.57736456, -0.57734317, -0.57734317), (0.57736456, -0.57734317, -0.57734317), (0.57734585, 0.5773514, -0.57735354), (0.57736456, 0.57734317, 0.57734317), (0.57736456, -0.57734317, -0.57734317), (0.57736456, 0.57734317, 0.57734317), (0.57734585, -0.5773514, 0.57735354), (0.57734585, -0.5773514, 0.57735354), (0.57736456, 0.57734317, 0.57734317), (-0.57734585, 0.5773514, 0.57735354), (0.57734585, -0.5773514, 0.57735354), (-0.57734585, 0.5773514, 0.57735354), (-0.57736456, -0.57734317, 0.57734317), (-0.57734585, -0.5773514, -0.57735354), (0.57736456, -0.57734317, -0.57734317), (0.57734585, -0.5773514, 0.57735354), (-0.57734585, -0.5773514, -0.57735354), (0.57734585, -0.5773514, 0.57735354), (-0.57736456, -0.57734317, 0.57734317), (0.57734585, 0.5773514, -0.57735354), (-0.57736456, 0.57734317, -0.57734317), (-0.57734585, 0.5773514, 0.57735354), (0.57734585, 0.5773514, -0.57735354), (-0.57734585, 0.5773514, 0.57735354), (0.57736456, 0.57734317, 0.57734317)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.006090492, -0.22927238, 0.2969999), (-0.006090492, 0.22927241, 0.2969999), (-0.006090492, 0.22927241, -0.2969999), (-0.006090492, -0.22927238, -0.2969999), (0.006090492, 0.22927241, -0.2969999), (0.006090492, -0.22927238, -0.2969999), (0.006090492, 0.22927241, 0.2969999), (0.006090492, -0.22927238, 0.2969999)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.006090462, 0.010207862, 0.23427261)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDoor_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.0060904622077941895, 0.01020786166191101, 0.23427261412143707, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "oven_door_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (-0.0016785798, 0.000032943914, -0.0061250348)
            float3 physics:diagonalInertia = (0.000051665415, 0.0070423284, 0.007072341)
            float physics:mass = 0.276021
            quatf physics:principalAxes = (0.5964069, 0.37989983, 0.5964576, 0.37975428)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_doornwnartifactmovable_barrier>,
                </SOMA_DFL/_class_doorknobnwnartifact>,
                </SOMA_DFL/_class_doorwaynwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
                </SOMA_DFL/_class_ovennwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000051665415
            float urdf:link:inertial:inertia:iyy = 0.0070423284
            float urdf:link:inertial:inertia:izz = 0.007072341
            float urdf:link:inertial:mass = 0.276021
            float3 urdf:link:inertial:origin:rpy = (1.5709851, 0.4366715, 1.570741)
            point3f urdf:link:inertial:origin:xyz = (-0.0016785798, 0.000032943914, -0.0061250348)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.046932999044656754, 0.015960000455379486, 0.4150789976119995, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_oven_door_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.47387967, -0.5687644, -0.67226857), (-0.47390082, 0.56876355, -0.6722544), (0.6718593, 0.5847704, -0.45458624), (-0.47387967, -0.5687644, -0.67226857), (0.6718593, 0.5847704, -0.45458624), (0.6718564, -0.5847852, -0.4545715), (0.6718564, -0.5847852, -0.4545715), (0.6718593, 0.5847704, -0.45458624), (0.36779997, 0.55898154, 0.74314386), (0.6718564, -0.5847852, -0.4545715), (0.36779997, 0.55898154, 0.74314386), (0.36779454, -0.55894357, 0.7431751), (0.36779454, -0.55894357, 0.7431751), (0.36779997, 0.55898154, 0.74314386), (-0.70711344, 0.6043555, 0.36707628), (0.36779454, -0.55894357, 0.7431751), (-0.70711344, 0.6043555, 0.36707628), (-0.7071102, -0.60436934, 0.3670598), (-0.7071102, -0.60436934, 0.3670598), (-0.70711344, 0.6043555, 0.36707628), (-0.47390082, 0.56876355, -0.6722544), (-0.7071102, -0.60436934, 0.3670598), (-0.47390082, 0.56876355, -0.6722544), (-0.47387967, -0.5687644, -0.67226857), (0.6718564, -0.5847852, -0.4545715), (0.36779454, -0.55894357, 0.7431751), (-0.7071102, -0.60436934, 0.3670598), (0.6718564, -0.5847852, -0.4545715), (-0.7071102, -0.60436934, 0.3670598), (-0.47387967, -0.5687644, -0.67226857), (0.36779997, 0.55898154, 0.74314386), (0.6718593, 0.5847704, -0.45458624), (-0.47390082, 0.56876355, -0.6722544), (0.36779997, 0.55898154, 0.74314386), (-0.47390082, 0.56876355, -0.6722544), (-0.70711344, 0.6043555, 0.36707628)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.009886789, -0.012466192, -0.025298346), (-0.009886789, 0.012466192, -0.025298346), (0.013952816, 0.012466192, -0.019004589), (0.013952816, -0.012466192, -0.019004589), (0.0080524, 0.012466192, 0.028715514), (0.0080524, -0.012466192, 0.028715514), (-0.0134048145, 0.012466192, 0.016184378), (-0.0134048145, -0.012466192, 0.016184378)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (1.5707964, -1.110223e-15, 2.0993721)
                point3f urdf:collision:origin:xyz = (0.01523653, 0.00763711, 0.22170116)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.5043040378471768, 0.8635261648676507, 1.1657341758564144e-15, 0), (3.774592949312705e-8, 2.2043829428497475e-8, 0.999999999999999, 0), (0.8635261648676498, 0.5043040378471765, -4.3711389841050163e-8, 0), (0.01523653045296669, 0.007637110073119402, 0.22170116007328033, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_door_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.47387984, -0.5687645, -0.6722684), (-0.47390315, 0.5687626, -0.6722535), (0.67185944, 0.5847705, -0.45458606), (-0.47387984, -0.5687645, -0.6722684), (0.67185944, 0.5847705, -0.45458606), (0.67185766, -0.58478445, -0.45457068), (0.67185766, -0.58478445, -0.45457068), (0.67185944, 0.5847705, -0.45458606), (0.36780256, 0.5589808, 0.7431432), (0.67185766, -0.58478445, -0.45457068), (0.36780256, 0.5589808, 0.7431432), (0.36779484, -0.5589437, 0.74317497), (0.36779484, -0.5589437, 0.74317497), (0.36780256, 0.5589808, 0.7431432), (-0.70711344, 0.6043556, 0.36707616), (0.36779484, -0.5589437, 0.74317497), (-0.70711344, 0.6043556, 0.36707616), (-0.7071114, -0.6043684, 0.36705908), (-0.7071114, -0.6043684, 0.36705908), (-0.70711344, 0.6043556, 0.36707616), (-0.47390315, 0.5687626, -0.6722535), (-0.7071114, -0.6043684, 0.36705908), (-0.47390315, 0.5687626, -0.6722535), (-0.47387984, -0.5687645, -0.6722684), (0.67185766, -0.58478445, -0.45457068), (0.36779484, -0.5589437, 0.74317497), (-0.7071114, -0.6043684, 0.36705908), (0.67185766, -0.58478445, -0.45457068), (-0.7071114, -0.6043684, 0.36705908), (-0.47387984, -0.5687645, -0.6722684), (0.36780256, 0.5589808, 0.7431432), (0.67185944, 0.5847705, -0.45458606), (-0.47390315, 0.5687626, -0.6722535), (0.36780256, 0.5589808, 0.7431432), (-0.47390315, 0.5687626, -0.6722535), (-0.70711344, 0.6043556, 0.36707616)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.009886789, -0.012842614, -0.025298346), (-0.009886789, 0.012842622, -0.025298346), (0.013952816, 0.012842622, -0.019004589), (0.013952816, -0.012842614, -0.019004589), (0.0080524, 0.012842622, 0.028715514), (0.0080524, -0.012842614, 0.028715514), (-0.0134048145, 0.012842622, 0.016184378), (-0.0134048145, -0.012842614, 0.016184378)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (1.5707964, -1.110223e-15, 2.0993721)
                point3f urdf:collision:origin:xyz = (0.01523653, 0.00763711, -0.23288307)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.5043040378471768, 0.8635261648676507, 1.1657341758564144e-15, 0), (3.774592949312705e-8, 2.2043829428497475e-8, 0.999999999999999, 0), (0.8635261648676498, 0.5043040378471765, -4.3711389841050163e-8, 0), (0.01523653045296669, 0.007637110073119402, -0.23288306593894958, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_door_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 8, 7, 8, 9, 9, 8, 10, 9, 10, 11, 11, 10, 12, 11, 12, 13, 13, 12, 14, 13, 14, 15, 15, 14, 16, 15, 16, 17, 17, 16, 18, 17, 18, 19, 19, 18, 20, 19, 20, 21, 21, 20, 22, 21, 22, 23, 23, 22, 24, 23, 24, 25, 25, 24, 26, 25, 26, 27, 27, 26, 28, 27, 28, 29, 29, 28, 30, 29, 30, 31, 31, 30, 32, 31, 32, 33, 33, 32, 34, 33, 34, 35, 35, 34, 36, 35, 36, 37, 37, 36, 38, 37, 38, 39, 39, 38, 40, 39, 40, 41, 41, 40, 42, 41, 42, 43, 43, 42, 44, 43, 44, 45, 45, 44, 46, 45, 46, 47, 47, 46, 48, 47, 48, 49, 49, 48, 50, 49, 50, 51, 51, 50, 52, 51, 52, 53, 53, 52, 54, 53, 54, 55, 55, 54, 56, 55, 56, 57, 57, 56, 58, 57, 58, 59, 59, 58, 60, 59, 60, 61, 4, 2, 1, 1, 62, 60, 60, 58, 56, 56, 54, 52, 52, 50, 48, 48, 46, 44, 44, 42, 40, 40, 38, 36, 36, 34, 32, 32, 30, 28, 28, 26, 24, 24, 22, 20, 20, 18, 16, 16, 14, 12, 12, 10, 8, 8, 6, 4, 4, 1, 60, 60, 56, 52, 52, 48, 44, 44, 40, 36, 36, 32, 28, 28, 24, 20, 20, 16, 12, 12, 8, 4, 4, 60, 52, 52, 44, 36, 36, 28, 20, 20, 12, 4, 4, 52, 36, 36, 20, 4, 61, 60, 62, 61, 62, 63, 63, 62, 1, 63, 1, 0, 63, 0, 3, 3, 5, 7, 7, 9, 11, 11, 13, 15, 15, 17, 19, 19, 21, 23, 23, 25, 27, 27, 29, 31, 31, 33, 35, 35, 37, 39, 39, 41, 43, 43, 45, 47, 47, 49, 51, 51, 53, 55, 55, 57, 59, 59, 61, 63, 63, 3, 7, 7, 11, 15, 15, 19, 23, 23, 27, 31, 31, 35, 39, 39, 43, 47, 47, 51, 55, 55, 59, 63, 63, 7, 15, 15, 23, 31, 31, 39, 47, 47, 55, 63, 63, 15, 31, 31, 47, 63]
                normal3f[] normals = [(0.7279172, -4.3015675e-7, -0.68566513), (0.72788435, 4.237905e-7, 0.6856999), (0.7138974, -0.14200275, 0.6857009), (0.7279172, -4.3015675e-7, -0.68566513), (0.7138974, -0.14200275, 0.6857009), (0.7139064, -0.14200416, -0.68569136), (0.7139064, -0.14200416, -0.68569136), (0.7138974, -0.14200275, 0.6857009), (0.6724919, -0.27855545, 0.68568325), (0.7139064, -0.14200416, -0.68569136), (0.6724919, -0.27855545, 0.68568325), (0.6725158, -0.27853554, -0.6856679), (0.6725158, -0.27853554, -0.6856679), (0.6724919, -0.27855545, 0.68568325), (0.6052131, -0.40439025, 0.6857008), (0.6725158, -0.27853554, -0.6856679), (0.6052131, -0.40439025, 0.6857008), (0.60523593, -0.40440363, -0.6856727), (0.60523593, -0.40440363, -0.6856727), (0.6052131, -0.40439025, 0.6857008), (0.5146971, -0.5146959, 0.68569326), (0.60523593, -0.40440363, -0.6856727), (0.5146971, -0.5146959, 0.68569326), (0.51471746, -0.5146821, -0.68568814), (0.51471746, -0.5146821, -0.68568814), (0.5146971, -0.5146959, 0.68569326), (0.4044205, -0.6052039, 0.6856911), (0.51471746, -0.5146821, -0.68568814), (0.4044205, -0.6052039, 0.6856911), (0.4043916, -0.60521924, -0.6856947), (0.4043916, -0.60521924, -0.6856947), (0.4044205, -0.6052039, 0.6856911), (0.2785603, -0.6724997, 0.68567353), (0.4043916, -0.60521924, -0.6856947), (0.2785603, -0.6724997, 0.68567353), (0.2785493, -0.67247653, -0.68570083), (0.2785493, -0.67247653, -0.68570083), (0.2785603, -0.6724997, 0.68567353), (0.14200288, -0.7138974, 0.6857009), (0.2785493, -0.67247653, -0.68570083), (0.14200288, -0.7138974, 0.6857009), (0.14200787, -0.71392477, -0.6856714), (0.14200787, -0.71392477, -0.6856714), (0.14200288, -0.7138974, 0.6857009), (1.2489184e-7, -0.7278902, 0.68569374), (0.14200787, -0.71392477, -0.6856714), (1.2489184e-7, -0.7278902, 0.68569374), (-1.4917495e-7, -0.7278833, -0.6857011), (-1.4917495e-7, -0.7278833, -0.6857011), (1.2489184e-7, -0.7278902, 0.68569374), (-0.14200266, -0.71389765, 0.6857007), (-1.4917495e-7, -0.7278833, -0.6857011), (-0.14200266, -0.71389765, 0.6857007), (-0.14200427, -0.7139042, -0.6856935), (-0.14200427, -0.7139042, -0.6856935), (-0.14200266, -0.71389765, 0.6857007), (-0.278561, -0.67250186, 0.6856712), (-0.14200427, -0.7139042, -0.6856935), (-0.278561, -0.67250186, 0.6856712), (-0.27854946, -0.67247653, -0.68570083), (-0.27854946, -0.67247653, -0.68570083), (-0.278561, -0.67250186, 0.6856712), (-0.40442008, -0.605204, 0.6856912), (-0.27854946, -0.67247653, -0.68570083), (-0.40442008, -0.605204, 0.6856912), (-0.40440202, -0.60523474, -0.68567485), (-0.40440202, -0.60523474, -0.68567485), (-0.40442008, -0.605204, 0.6856912), (-0.51469815, -0.5146957, 0.6856924), (-0.40440202, -0.60523474, -0.68567485), (-0.51469815, -0.5146957, 0.6856924), (-0.51471776, -0.51468194, -0.6856881), (-0.51471776, -0.51468194, -0.6856881), (-0.51469815, -0.5146957, 0.6856924), (-0.6052357, -0.40438122, 0.6856862), (-0.51471776, -0.51468194, -0.6856881), (-0.6052357, -0.40438122, 0.6856862), (-0.6052208, -0.40439305, -0.68569237), (-0.6052208, -0.40439305, -0.68569237), (-0.6052357, -0.40438122, 0.6856862), (-0.6725009, -0.2785582, 0.6856732), (-0.6052208, -0.40439305, -0.68569237), (-0.6725009, -0.2785582, 0.6856732), (-0.6725157, -0.2785358, -0.6856679), (-0.6725157, -0.2785358, -0.6856679), (-0.6725009, -0.2785582, 0.6856732), (-0.7138974, -0.14200301, 0.68570083), (-0.6725157, -0.2785358, -0.6856679), (-0.7138974, -0.14200301, 0.68570083), (-0.7139163, -0.1420059, -0.6856805), (-0.7139163, -0.1420059, -0.6856805), (-0.7138974, -0.14200301, 0.68570083), (-0.7278845, -1.3530075e-7, 0.68569976), (-0.7139163, -0.1420059, -0.6856805), (-0.7278845, -1.3530075e-7, 0.68569976), (-0.727917, 1.2488418e-7, -0.6856653), (-0.727917, 1.2488418e-7, -0.6856653), (-0.7278845, -1.3530075e-7, 0.68569976), (-0.71396744, 0.14198858, 0.68563086), (-0.727917, 1.2488418e-7, -0.6856653), (-0.71396744, 0.14198858, 0.68563086), (-0.7139076, 0.1420037, -0.6856901), (-0.7139076, 0.1420037, -0.6856901), (-0.71396744, 0.14198858, 0.68563086), (-0.6724943, 0.27855504, 0.68568105), (-0.7139076, 0.1420037, -0.6856901), (-0.6724943, 0.27855504, 0.68568105), (-0.67255497, 0.27852213, -0.6856349), (-0.67255497, 0.27852213, -0.6856349), (-0.6724943, 0.27855504, 0.68568105), (-0.6052129, 0.40439016, 0.685701), (-0.67255497, 0.27852213, -0.6856349), (-0.6052129, 0.40439016, 0.685701), (-0.6052375, 0.40440267, -0.685672), (-0.6052375, 0.40440267, -0.685672), (-0.6052129, 0.40439016, 0.685701), (-0.5146962, 0.5146964, 0.6856935), (-0.6052375, 0.40440267, -0.685672), (-0.5146962, 0.5146964, 0.6856935), (-0.5146652, 0.51470095, -0.68571335), (-0.5146652, 0.51470095, -0.68571335), (-0.5146962, 0.5146964, 0.6856935), (-0.40439028, 0.6052127, 0.6857011), (-0.5146652, 0.51470095, -0.68571335), (-0.40439028, 0.6052127, 0.6857011), (-0.40438938, 0.6052198, -0.68569547), (-0.40438938, 0.6052198, -0.68569547), (-0.40439028, 0.6052127, 0.6857011), (-0.27855924, 0.6724998, 0.6856739), (-0.40438938, 0.6052198, -0.68569547), (-0.27855924, 0.6724998, 0.6856739), (-0.27854937, 0.67247653, -0.6857008), (-0.27854937, 0.67247653, -0.6857008), (-0.27855924, 0.6724998, 0.6856739), (-0.14200306, 0.7138974, 0.6857008), (-0.27854937, 0.67247653, -0.6857008), (-0.14200306, 0.7138974, 0.6857008), (-0.14200795, 0.7139244, -0.68567175), (-0.14200795, 0.7139244, -0.68567175), (-0.14200306, 0.7138974, 0.6857008), (-2.947009e-7, 0.7278901, 0.6856938), (-0.14200795, 0.7139244, -0.68567175), (-2.947009e-7, 0.7278901, 0.6856938), (1.2489066e-7, 0.72788334, -0.685701), (1.2489066e-7, 0.72788334, -0.685701), (-2.947009e-7, 0.7278901, 0.6856938), (0.14199838, 0.7138979, 0.6857013), (1.2489066e-7, 0.72788334, -0.685701), (0.14199838, 0.7138979, 0.6857013), (0.1420044, 0.7139043, -0.68569344), (0.1420044, 0.7139043, -0.68569344), (0.14199838, 0.7138979, 0.6857013), (0.2785598, 0.67250186, 0.6856716), (0.1420044, 0.7139043, -0.68569344), (0.2785598, 0.67250186, 0.6856716), (0.27854958, 0.6724764, -0.68570083), (0.27854958, 0.6724764, -0.68570083), (0.2785598, 0.67250186, 0.6856716), (0.40439036, 0.6052127, 0.6857012), (0.27854958, 0.6724764, -0.68570083), (0.40439036, 0.6052127, 0.6857012), (0.40440187, 0.60523444, -0.68567514), (0.40440187, 0.60523444, -0.68567514), (0.40439036, 0.6052127, 0.6857012), (0.5146959, 0.5146965, 0.6856935), (0.40440187, 0.60523444, -0.68567514), (0.5146959, 0.5146965, 0.6856935), (0.514665, 0.51470095, -0.68571347), (0.514665, 0.51470095, -0.68571347), (0.5146959, 0.5146965, 0.6856935), (0.605213, 0.4043904, 0.68570083), (0.514665, 0.51470095, -0.68571347), (0.605213, 0.4043904, 0.68570083), (0.60522115, 0.40439314, -0.6856921), (0.60522115, 0.40439314, -0.6856921), (0.605213, 0.4043904, 0.68570083), (0.6725018, 0.2785579, 0.6856725), (0.60522115, 0.40439314, -0.6856921), (0.6725018, 0.2785579, 0.6856725), (0.672555, 0.27852187, -0.685635), (0.6724919, -0.27855545, 0.68568325), (0.7138974, -0.14200275, 0.6857009), (0.72788435, 4.237905e-7, 0.6856999), (0.72788435, 4.237905e-7, 0.6856999), (0.71396744, 0.14198886, 0.6856308), (0.6725018, 0.2785579, 0.6856725), (0.6725018, 0.2785579, 0.6856725), (0.605213, 0.4043904, 0.68570083), (0.5146959, 0.5146965, 0.6856935), (0.5146959, 0.5146965, 0.6856935), (0.40439036, 0.6052127, 0.6857012), (0.2785598, 0.67250186, 0.6856716), (0.2785598, 0.67250186, 0.6856716), (0.14199838, 0.7138979, 0.6857013), (-2.947009e-7, 0.7278901, 0.6856938), (-2.947009e-7, 0.7278901, 0.6856938), (-0.14200306, 0.7138974, 0.6857008), (-0.27855924, 0.6724998, 0.6856739), (-0.27855924, 0.6724998, 0.6856739), (-0.40439028, 0.6052127, 0.6857011), (-0.5146962, 0.5146964, 0.6856935), (-0.5146962, 0.5146964, 0.6856935), (-0.6052129, 0.40439016, 0.685701), (-0.6724943, 0.27855504, 0.68568105), (-0.6724943, 0.27855504, 0.68568105), (-0.71396744, 0.14198858, 0.68563086), (-0.7278845, -1.3530075e-7, 0.68569976), (-0.7278845, -1.3530075e-7, 0.68569976), (-0.7138974, -0.14200301, 0.68570083), (-0.6725009, -0.2785582, 0.6856732), (-0.6725009, -0.2785582, 0.6856732), (-0.6052357, -0.40438122, 0.6856862), (-0.51469815, -0.5146957, 0.6856924), (-0.51469815, -0.5146957, 0.6856924), (-0.40442008, -0.605204, 0.6856912), (-0.278561, -0.67250186, 0.6856712), (-0.278561, -0.67250186, 0.6856712), (-0.14200266, -0.71389765, 0.6857007), (1.2489184e-7, -0.7278902, 0.68569374), (1.2489184e-7, -0.7278902, 0.68569374), (0.14200288, -0.7138974, 0.6857009), (0.2785603, -0.6724997, 0.68567353), (0.2785603, -0.6724997, 0.68567353), (0.4044205, -0.6052039, 0.6856911), (0.5146971, -0.5146959, 0.68569326), (0.5146971, -0.5146959, 0.68569326), (0.6052131, -0.40439025, 0.6857008), (0.6724919, -0.27855545, 0.68568325), (0.6724919, -0.27855545, 0.68568325), (0.72788435, 4.237905e-7, 0.6856999), (0.6725018, 0.2785579, 0.6856725), (0.6725018, 0.2785579, 0.6856725), (0.5146959, 0.5146965, 0.6856935), (0.2785598, 0.67250186, 0.6856716), (0.2785598, 0.67250186, 0.6856716), (-2.947009e-7, 0.7278901, 0.6856938), (-0.27855924, 0.6724998, 0.6856739), (-0.27855924, 0.6724998, 0.6856739), (-0.5146962, 0.5146964, 0.6856935), (-0.6724943, 0.27855504, 0.68568105), (-0.6724943, 0.27855504, 0.68568105), (-0.7278845, -1.3530075e-7, 0.68569976), (-0.6725009, -0.2785582, 0.6856732), (-0.6725009, -0.2785582, 0.6856732), (-0.51469815, -0.5146957, 0.6856924), (-0.278561, -0.67250186, 0.6856712), (-0.278561, -0.67250186, 0.6856712), (1.2489184e-7, -0.7278902, 0.68569374), (0.2785603, -0.6724997, 0.68567353), (0.2785603, -0.6724997, 0.68567353), (0.5146971, -0.5146959, 0.68569326), (0.6724919, -0.27855545, 0.68568325), (0.6724919, -0.27855545, 0.68568325), (0.6725018, 0.2785579, 0.6856725), (0.2785598, 0.67250186, 0.6856716), (0.2785598, 0.67250186, 0.6856716), (-0.27855924, 0.6724998, 0.6856739), (-0.6724943, 0.27855504, 0.68568105), (-0.6724943, 0.27855504, 0.68568105), (-0.6725009, -0.2785582, 0.6856732), (-0.278561, -0.67250186, 0.6856712), (-0.278561, -0.67250186, 0.6856712), (0.2785603, -0.6724997, 0.68567353), (0.6724919, -0.27855545, 0.68568325), (0.6724919, -0.27855545, 0.68568325), (0.2785598, 0.67250186, 0.6856716), (-0.6724943, 0.27855504, 0.68568105), (-0.6724943, 0.27855504, 0.68568105), (-0.278561, -0.67250186, 0.6856712), (0.6724919, -0.27855545, 0.68568325), (0.672555, 0.27852187, -0.685635), (0.6725018, 0.2785579, 0.6856725), (0.71396744, 0.14198886, 0.6856308), (0.672555, 0.27852187, -0.685635), (0.71396744, 0.14198886, 0.6856308), (0.7139176, 0.14200546, -0.6856794), (0.7139176, 0.14200546, -0.6856794), (0.71396744, 0.14198886, 0.6856308), (0.72788435, 4.237905e-7, 0.6856999), (0.7139176, 0.14200546, -0.6856794), (0.72788435, 4.237905e-7, 0.6856999), (0.7279172, -4.3015675e-7, -0.68566513), (0.7139176, 0.14200546, -0.6856794), (0.7279172, -4.3015675e-7, -0.68566513), (0.7139064, -0.14200416, -0.68569136), (0.7139064, -0.14200416, -0.68569136), (0.6725158, -0.27853554, -0.6856679), (0.60523593, -0.40440363, -0.6856727), (0.60523593, -0.40440363, -0.6856727), (0.51471746, -0.5146821, -0.68568814), (0.4043916, -0.60521924, -0.6856947), (0.4043916, -0.60521924, -0.6856947), (0.2785493, -0.67247653, -0.68570083), (0.14200787, -0.71392477, -0.6856714), (0.14200787, -0.71392477, -0.6856714), (-1.4917495e-7, -0.7278833, -0.6857011), (-0.14200427, -0.7139042, -0.6856935), (-0.14200427, -0.7139042, -0.6856935), (-0.27854946, -0.67247653, -0.68570083), (-0.40440202, -0.60523474, -0.68567485), (-0.40440202, -0.60523474, -0.68567485), (-0.51471776, -0.51468194, -0.6856881), (-0.6052208, -0.40439305, -0.68569237), (-0.6052208, -0.40439305, -0.68569237), (-0.6725157, -0.2785358, -0.6856679), (-0.7139163, -0.1420059, -0.6856805), (-0.7139163, -0.1420059, -0.6856805), (-0.727917, 1.2488418e-7, -0.6856653), (-0.7139076, 0.1420037, -0.6856901), (-0.7139076, 0.1420037, -0.6856901), (-0.67255497, 0.27852213, -0.6856349), (-0.6052375, 0.40440267, -0.685672), (-0.6052375, 0.40440267, -0.685672), (-0.5146652, 0.51470095, -0.68571335), (-0.40438938, 0.6052198, -0.68569547), (-0.40438938, 0.6052198, -0.68569547), (-0.27854937, 0.67247653, -0.6857008), (-0.14200795, 0.7139244, -0.68567175), (-0.14200795, 0.7139244, -0.68567175), (1.2489066e-7, 0.72788334, -0.685701), (0.1420044, 0.7139043, -0.68569344), (0.1420044, 0.7139043, -0.68569344), (0.27854958, 0.6724764, -0.68570083), (0.40440187, 0.60523444, -0.68567514), (0.40440187, 0.60523444, -0.68567514), (0.514665, 0.51470095, -0.68571347), (0.60522115, 0.40439314, -0.6856921), (0.60522115, 0.40439314, -0.6856921), (0.672555, 0.27852187, -0.685635), (0.7139176, 0.14200546, -0.6856794), (0.7139176, 0.14200546, -0.6856794), (0.7139064, -0.14200416, -0.68569136), (0.60523593, -0.40440363, -0.6856727), (0.60523593, -0.40440363, -0.6856727), (0.4043916, -0.60521924, -0.6856947), (0.14200787, -0.71392477, -0.6856714), (0.14200787, -0.71392477, -0.6856714), (-0.14200427, -0.7139042, -0.6856935), (-0.40440202, -0.60523474, -0.68567485), (-0.40440202, -0.60523474, -0.68567485), (-0.6052208, -0.40439305, -0.68569237), (-0.7139163, -0.1420059, -0.6856805), (-0.7139163, -0.1420059, -0.6856805), (-0.7139076, 0.1420037, -0.6856901), (-0.6052375, 0.40440267, -0.685672), (-0.6052375, 0.40440267, -0.685672), (-0.40438938, 0.6052198, -0.68569547), (-0.14200795, 0.7139244, -0.68567175), (-0.14200795, 0.7139244, -0.68567175), (0.1420044, 0.7139043, -0.68569344), (0.40440187, 0.60523444, -0.68567514), (0.40440187, 0.60523444, -0.68567514), (0.60522115, 0.40439314, -0.6856921), (0.7139176, 0.14200546, -0.6856794), (0.7139176, 0.14200546, -0.6856794), (0.60523593, -0.40440363, -0.6856727), (0.14200787, -0.71392477, -0.6856714), (0.14200787, -0.71392477, -0.6856714), (-0.40440202, -0.60523474, -0.68567485), (-0.7139163, -0.1420059, -0.6856805), (-0.7139163, -0.1420059, -0.6856805), (-0.6052375, 0.40440267, -0.685672), (-0.14200795, 0.7139244, -0.68567175), (-0.14200795, 0.7139244, -0.68567175), (0.40440187, 0.60523444, -0.68567514), (0.7139176, 0.14200546, -0.6856794), (0.7139176, 0.14200546, -0.6856794), (0.14200787, -0.71392477, -0.6856714), (-0.7139163, -0.1420059, -0.6856805), (-0.7139163, -0.1420059, -0.6856805), (-0.14200795, 0.7139244, -0.68567175), (0.7139176, 0.14200546, -0.6856794)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(0.012200061, 1.3837767e-10, -0.23961005), (0.012200061, 1.3837767e-10, 0.23961005), (0.01196564, -0.0023801127, 0.23961005), (0.01196564, -0.0023801127, -0.23961005), (0.011271386, -0.0046687606, 0.23961005), (0.011271386, -0.0046687606, -0.23961005), (0.010143979, -0.006777991, 0.23961005), (0.010143979, -0.006777991, -0.23961005), (0.008626745, -0.008626747, 0.23961005), (0.008626745, -0.008626747, -0.23961005), (0.006777991, -0.0101439785, 0.23961005), (0.006777991, -0.0101439785, -0.23961005), (0.0046687615, -0.011271388, 0.23961005), (0.0046687615, -0.011271388, -0.23961005), (0.002380113, -0.011965643, 0.23961005), (0.002380113, -0.011965643, -0.23961005), (-2.0974184e-10, -0.012200061, 0.23961005), (-2.0974184e-10, -0.012200061, -0.23961005), (-0.002380113, -0.011965643, 0.23961005), (-0.002380113, -0.011965643, -0.23961005), (-0.004668761, -0.011271388, 0.23961005), (-0.004668761, -0.011271388, -0.23961005), (-0.0067779915, -0.0101439785, 0.23961005), (-0.0067779915, -0.0101439785, -0.23961005), (-0.008626747, -0.008626747, 0.23961005), (-0.008626747, -0.008626747, -0.23961005), (-0.0101439785, -0.006777991, 0.23961005), (-0.0101439785, -0.006777991, -0.23961005), (-0.011271386, -0.0046687606, 0.23961005), (-0.011271386, -0.0046687606, -0.23961005), (-0.011965641, -0.0023801127, 0.23961005), (-0.011965641, -0.0023801127, -0.23961005), (-0.012200061, 1.3837767e-10, 0.23961005), (-0.012200061, 1.3837767e-10, -0.23961005), (-0.011965641, 0.0023801134, 0.23961005), (-0.011965641, 0.0023801134, -0.23961005), (-0.011271386, 0.00466876, 0.23961005), (-0.011271386, 0.00466876, -0.23961005), (-0.0101439785, 0.0067779915, 0.23961005), (-0.0101439785, 0.0067779915, -0.23961005), (-0.008626747, 0.008626747, 0.23961005), (-0.008626747, 0.008626747, -0.23961005), (-0.0067779915, 0.010143978, 0.23961005), (-0.0067779915, 0.010143978, -0.23961005), (-0.004668761, 0.011271388, 0.23961005), (-0.004668761, 0.011271388, -0.23961005), (-0.002380113, 0.011965643, 0.23961005), (-0.002380113, 0.011965643, -0.23961005), (-2.0974184e-10, 0.012200062, 0.23961005), (-2.0974184e-10, 0.012200062, -0.23961005), (0.002380113, 0.011965643, 0.23961005), (0.002380113, 0.011965643, -0.23961005), (0.0046687615, 0.011271388, 0.23961005), (0.0046687615, 0.011271388, -0.23961005), (0.006777991, 0.010143978, 0.23961005), (0.006777991, 0.010143978, -0.23961005), (0.008626745, 0.008626747, 0.23961005), (0.008626745, 0.008626747, -0.23961005), (0.010143979, 0.0067779915, 0.23961005), (0.010143979, 0.0067779915, -0.23961005), (0.011271386, 0.00466876, 0.23961005), (0.011271386, 0.00466876, -0.23961005), (0.01196564, 0.0023801134, 0.23961005), (0.01196564, 0.0023801134, -0.23961005)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
                point3f urdf:collision:origin:xyz = (-0.005733653, -0.0017900086, -0.005442649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (-0.005733652971684933, -0.0017900086240842938, -0.0054426491260528564, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "oven_drawer" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (0.07058255, -0.009504064, -0.06355084)
        float3 physics:diagonalInertia = (0.24297307, 0.30771157, 0.49120617)
        bool physics:kinematicEnabled = 0
        float physics:mass = 5.9858694
        quatf physics:principalAxes = (0.996713, -0.0011511198, -0.064003, 0.049653813)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_drawernwnartifact>
        rel semanticTag:semanticReports = [
            </SOMA_DFL/_class_drawernwnartifact>,
            </SOMA_DFL/_class_ovennwnartifact>,
        ]
        float urdf:link:inertial:inertia:ixx = 0.24297307
        float urdf:link:inertial:inertia:iyy = 0.30771157
        float urdf:link:inertial:inertia:izz = 0.49120617
        float urdf:link:inertial:mass = 5.9858694
        float3 urdf:link:inertial:origin:rpy = (-0.008721919, -0.12781869, 0.100111)
        point3f urdf:link:inertial:origin:xyz = (0.07058255, -0.009504064, -0.06355084)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (2.4487005362384675, 3.8178400395085585, 0.22920900583267212, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_oven_drawer_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773489, 0.5773489, -0.57735306), (0.5773699, 0.57734364, -0.5773372), (0.5773489, -0.5773489, -0.57735306), (-0.5773489, 0.5773489, -0.57735306), (0.5773489, -0.5773489, -0.57735306), (-0.5773699, -0.57734364, -0.5773372), (-0.5773699, -0.57734364, -0.5773372), (0.5773489, -0.5773489, -0.57735306), (0.5773699, -0.57734364, 0.5773372), (-0.5773699, -0.57734364, -0.5773372), (0.5773699, -0.57734364, 0.5773372), (-0.5773489, -0.5773489, 0.57735306), (-0.5773489, -0.5773489, 0.57735306), (0.5773699, -0.57734364, 0.5773372), (0.5773489, 0.5773489, 0.57735306), (-0.5773489, -0.5773489, 0.57735306), (0.5773489, 0.5773489, 0.57735306), (-0.5773699, 0.57734364, 0.5773372), (-0.5773699, 0.57734364, 0.5773372), (0.5773489, 0.5773489, 0.57735306), (0.5773699, 0.57734364, -0.5773372), (-0.5773699, 0.57734364, 0.5773372), (0.5773699, 0.57734364, -0.5773372), (-0.5773489, 0.5773489, -0.57735306), (-0.5773699, -0.57734364, -0.5773372), (-0.5773489, -0.5773489, 0.57735306), (-0.5773699, 0.57734364, 0.5773372), (-0.5773699, -0.57734364, -0.5773372), (-0.5773699, 0.57734364, 0.5773372), (-0.5773489, 0.5773489, -0.57735306), (0.5773699, -0.57734364, 0.5773372), (0.5773489, -0.5773489, -0.57735306), (0.5773699, 0.57734364, -0.5773372), (0.5773699, -0.57734364, 0.5773372), (0.5773699, 0.57734364, -0.5773372), (0.5773489, 0.5773489, 0.57735306)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0049999617, 0.2808017, -0.28303587), (0.004999969, 0.2808017, -0.28303587), (0.004999969, -0.2808017, -0.28303587), (-0.0049999617, -0.2808017, -0.28303587), (0.004999969, -0.2808017, 0.28303587), (-0.0049999617, -0.2808017, 0.28303587), (0.004999969, 0.2808017, 0.28303587), (-0.0049999617, 0.2808017, 0.28303587)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, -0.0019999892, -0.086386606)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDrawer_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11408046633005142, -0.001999989151954651, -0.08638660609722137, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773306, -0.5773601, 0.57736015), (-0.5773449, 0.57735115, 0.5773548), (-0.5773306, 0.5773601, -0.57736015), (-0.5773306, -0.5773601, 0.57736015), (-0.5773306, 0.5773601, -0.57736015), (-0.5773449, -0.57735115, -0.5773548), (-0.5773449, -0.57735115, -0.5773548), (-0.5773306, 0.5773601, -0.57736015), (0.5773449, 0.57735115, -0.5773548), (-0.5773449, -0.57735115, -0.5773548), (0.5773449, 0.57735115, -0.5773548), (0.5773306, -0.57736015, -0.57736015), (0.5773306, -0.57736015, -0.57736015), (0.5773449, 0.57735115, -0.5773548), (0.5773306, 0.57736015, 0.57736015), (0.5773306, -0.57736015, -0.57736015), (0.5773306, 0.57736015, 0.57736015), (0.5773449, -0.57735115, 0.5773548), (0.5773449, -0.57735115, 0.5773548), (0.5773306, 0.57736015, 0.57736015), (-0.5773449, 0.57735115, 0.5773548), (0.5773449, -0.57735115, 0.5773548), (-0.5773449, 0.57735115, 0.5773548), (-0.5773306, -0.5773601, 0.57736015), (-0.5773449, -0.57735115, -0.5773548), (0.5773306, -0.57736015, -0.57736015), (0.5773449, -0.57735115, 0.5773548), (-0.5773449, -0.57735115, -0.5773548), (0.5773449, -0.57735115, 0.5773548), (-0.5773306, -0.5773601, 0.57736015), (0.5773449, 0.57735115, -0.5773548), (-0.5773306, 0.5773601, -0.57736015), (-0.5773449, 0.57735115, 0.5773548), (0.5773449, 0.57735115, -0.5773548), (-0.5773449, 0.57735115, 0.5773548), (0.5773306, 0.57736015, 0.57736015)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0054723136, -0.094849825, 0.29802996), (-0.0054723136, 0.09484982, 0.29802996), (-0.0054723136, 0.09484982, -0.29802996), (-0.0054723136, -0.094849825, -0.29802996), (0.0054722913, 0.09484982, -0.29802996), (0.0054722913, -0.094849825, -0.29802996), (0.0054722913, 0.09484982, 0.29802996), (0.0054722913, -0.094849825, 0.29802996)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.042919833)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDrawer_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.17442794144153595, -0.0008446574211120605, -0.0429198332130909, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773379, -0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.5773379, -0.5773564, 0.5773564), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, -0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, 0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (0.5773379, 0.5773564, 0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.5773379, 0.5773564, 0.5773564), (0.57734567, -0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (-0.57734567, -0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, 0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0031750873, -0.061499752, 0.272), (-0.0031750873, 0.061499752, 0.272), (-0.0031750873, 0.061499752, -0.272), (-0.0031750873, -0.061499752, -0.272), (0.0031750724, 0.061499752, -0.272), (0.0031750724, -0.061499752, -0.272), (0.0031750724, 0.061499752, 0.272), (0.0031750724, -0.061499752, 0.272)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDrawer_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.3939414918422699, -0.0008016228675842285, -0.019886843860149384, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDrawer_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, -0.2778016924858093, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773511, -0.57735115, -0.57734865), (-0.57735264, 0.57734996, -0.5773481), (0.5773511, 0.57735115, -0.57734865), (-0.5773511, -0.57735115, -0.57734865), (0.5773511, 0.57735115, -0.57734865), (0.57735264, -0.57734996, -0.5773481), (0.57735264, -0.57734996, -0.5773481), (0.5773511, 0.57735115, -0.57734865), (0.57735264, 0.57734996, 0.5773481), (0.57735264, -0.57734996, -0.5773481), (0.57735264, 0.57734996, 0.5773481), (0.5773511, -0.57735115, 0.57734865), (0.5773511, -0.57735115, 0.57734865), (0.57735264, 0.57734996, 0.5773481), (-0.5773511, 0.57735115, 0.57734865), (0.5773511, -0.57735115, 0.57734865), (-0.5773511, 0.57735115, 0.57734865), (-0.57735264, -0.57734996, 0.5773481), (-0.57735264, -0.57734996, 0.5773481), (-0.5773511, 0.57735115, 0.57734865), (-0.57735264, 0.57734996, -0.5773481), (-0.57735264, -0.57734996, 0.5773481), (-0.57735264, 0.57734996, -0.5773481), (-0.5773511, -0.57735115, -0.57734865), (0.57735264, -0.57734996, -0.5773481), (0.5773511, -0.57735115, 0.57734865), (-0.57735264, -0.57734996, 0.5773481), (0.57735264, -0.57734996, -0.5773481), (-0.57735264, -0.57734996, 0.5773481), (-0.5773511, -0.57735115, -0.57734865), (0.57735264, 0.57734996, 0.5773481), (0.5773511, 0.57735115, -0.57734865), (-0.57735264, 0.57734996, -0.5773481), (0.57735264, 0.57734996, 0.5773481), (-0.57735264, 0.57734996, -0.5773481), (-0.5773511, 0.57735115, 0.57734865)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0029999912, -0.004999779, -0.279861), (-0.0029999912, 0.004999779, -0.279861), (0.0029999912, 0.004999779, -0.279861), (0.0029999912, -0.004999779, -0.279861), (0.0029999912, 0.004999779, 0.279861), (0.0029999912, -0.004999779, 0.279861), (-0.0029999912, 0.004999779, 0.279861), (-0.0029999912, -0.004999779, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27419832, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDrawer_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.9999999999999989, 1.27675647831893e-15, 0), (4.371139000758362e-8, 6.661338147750939e-16, 0.9999999999999989, 0), (0.999999999999998, 4.371139000758362e-8, -4.371139006309477e-8, 0), (0.11090544611215591, 0.2741983234882355, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.6204346, -0.53078127, -0.5773493), (-0.53078264, 0.62043554, -0.5773469), (0.5759696, 0.5705666, -0.58541673), (-0.6204346, -0.53078127, -0.5773493), (0.5759696, 0.5705666, -0.58541673), (0.5782127, -0.583695, -0.57006174), (0.5782127, -0.583695, -0.57006174), (0.5759696, 0.5705666, -0.58541673), (0.5759755, 0.5705681, 0.5854094), (0.5782127, -0.583695, -0.57006174), (0.5759755, 0.5705681, 0.5854094), (0.5782246, -0.58370304, 0.5700412), (0.5782246, -0.58370304, 0.5700412), (0.5759755, 0.5705681, 0.5854094), (-0.5307868, 0.6204455, 0.57733256), (0.5782246, -0.58370304, 0.5700412), (-0.5307868, 0.6204455, 0.57733256), (-0.62043524, -0.53078425, 0.5773458), (-0.62043524, -0.53078425, 0.5773458), (-0.5307868, 0.6204455, 0.57733256), (-0.53078264, 0.62043554, -0.5773469), (-0.62043524, -0.53078425, 0.5773458), (-0.53078264, 0.62043554, -0.5773469), (-0.6204346, -0.53078127, -0.5773493), (0.5782127, -0.583695, -0.57006174), (0.5782246, -0.58370304, 0.5700412), (-0.62043524, -0.53078425, 0.5773458), (0.5782127, -0.583695, -0.57006174), (-0.62043524, -0.53078425, 0.5773458), (-0.6204346, -0.53078127, -0.5773493), (0.5759755, 0.5705681, 0.5854094), (0.5759696, 0.5705666, -0.58541673), (-0.53078264, 0.62043554, -0.5773469), (0.5759755, 0.5705681, 0.5854094), (-0.53078264, 0.62043554, -0.5773469), (-0.5307868, 0.6204455, 0.57733256)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.010100868, -0.029527072, -0.27986103), (-0.004821146, 0.038267687, -0.27986103), (0.0051486567, 0.03749126, -0.27986103), (0.009838887, -0.03107994, -0.27986103), (0.0051486567, 0.03749126, 0.27986097), (0.009838887, -0.03107994, 0.27986097), (-0.004821146, 0.038267687, 0.27986097), (-0.010100868, -0.029527072, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDrawer_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.357943561572597e-8, 0.9969812315710851, 0.07764292559532149, 0), (4.710527007345533e-8, -0.07764292559531949, 0.9969812315710851, 0), (0.999999999999998, 4.7105270295499935e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, -0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.619492, -0.5318751, -0.5773548), (-0.5792433, -0.5826709, -0.57006305), (-0.5749559, 0.57158434, -0.5854204), (0.619492, -0.5318751, -0.5773548), (-0.5749559, 0.57158434, -0.5854204), (0.53188175, 0.6194929, -0.57734776), (-0.5792433, -0.5826709, -0.57006305), (-0.57925266, -0.58267426, 0.57005006), (-0.57496035, 0.571588, 0.58541244), (-0.5792433, -0.5826709, -0.57006305), (-0.57496035, 0.571588, 0.58541244), (-0.5749559, 0.57158434, -0.5854204), (-0.57925266, -0.58267426, 0.57005006), (0.6194946, -0.5318818, 0.57734585), (0.5318863, 0.6194998, 0.5773361), (-0.57925266, -0.58267426, 0.57005006), (0.5318863, 0.6194998, 0.5773361), (-0.57496035, 0.571588, 0.58541244), (0.6194946, -0.5318818, 0.57734585), (0.619492, -0.5318751, -0.5773548), (0.53188175, 0.6194929, -0.57734776), (0.6194946, -0.5318818, 0.57734585), (0.53188175, 0.6194929, -0.57734776), (0.5318863, 0.6194998, 0.5773361), (-0.5792433, -0.5826709, -0.57006305), (0.619492, -0.5318751, -0.5773548), (0.6194946, -0.5318818, 0.57734585), (-0.5792433, -0.5826709, -0.57006305), (0.6194946, -0.5318818, 0.57734585), (-0.57925266, -0.58267426, 0.57005006), (-0.57496035, 0.571588, 0.58541244), (0.5318863, 0.6194998, 0.5773361), (0.53188175, 0.6194929, -0.57734776), (-0.57496035, 0.571588, 0.58541244), (0.53188175, 0.6194929, -0.57734776), (-0.5749559, 0.57158434, -0.5854204)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.008050813, -0.028319215, -0.27986103), (-0.007903183, -0.02953326, -0.27986103), (-0.0030915185, 0.039029527, -0.27986103), (0.0028911668, 0.039484788, -0.27986103), (-0.007903183, -0.02953326, 0.27986097), (-0.0030915185, 0.039029527, 0.27986097), (0.008050813, -0.028319215, 0.27986097), (0.0028911668, 0.039484788, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07595011, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090546, 0.27292284, -0.052538224)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_OvenDrawer_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.3585377973442974e-8, 0.9971171766893112, -0.07587711085126436, 0), (4.039469608807522e-8, 0.07587711085126614, 0.9971171766893112, 0), (0.9999999999999982, 4.039469608807522e-8, -4.3585377973442974e-8, 0), (0.11090546101331711, 0.2729228436946869, -0.052538223564624786, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "oven_drawer_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (-0.53304553, -0.464603, 0.5330521, 0.4646094)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_drawernwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
                </SOMA_DFL/_class_ovennwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (1.5707973, -0.13699229, -1.5708094)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_oven_drawer_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773567, -0.57734704, -0.57734704), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773567, -0.57734704, -0.57734704), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, 0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (-0.5773567, 0.57734704, 0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, 0.5773631, 0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773567, -0.57734704, 0.57734704), (0.5773553, -0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (0.5773567, -0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, -0.57734704, -0.57734704), (-0.5773553, 0.5773631, -0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773567, -0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, -0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005019702, -0.010811567, -0.16495954), (-0.005019702, -0.010811567, 0.16495954), (-0.005019702, 0.010811567, 0.16495954), (-0.005019702, 0.010811567, -0.16495954), (0.005019702, 0.010811567, 0.16495954), (0.005019702, 0.010811567, -0.16495954), (0.005019702, -0.010811567, 0.16495954), (0.005019702, -0.010811567, -0.16495954)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.000002346932888031006, 0.0012064725160598755, 9.834766387939453e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_drawer_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (-0.5773559, 0.5773559, -0.57733905), (0.5773559, -0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.57735586, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.57735586, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005500015, 0.010811567, -0.012989666), (0.0055000074, 0.010811567, -0.012989666), (0.0055000074, -0.010811567, -0.012989666), (-0.005500015, -0.010811567, -0.012989666), (0.0055000074, -0.010811567, 0.012989668), (-0.005500015, -0.010811567, 0.012989668), (0.0055000074, 0.010811567, 0.012989668), (-0.005500015, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064725160598755, 0.15946051478385925, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_drawer_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (-0.5773559, 0.5773559, -0.577339), (0.5773559, -0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773559, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.5773559, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0055039823, 0.010811567, -0.012989666), (0.0055039823, 0.010811567, -0.012989666), (0.0055039823, -0.010811567, -0.012989666), (-0.0055039823, -0.010811567, -0.012989666), (0.0055039823, -0.010811567, 0.012989668), (-0.0055039823, -0.010811567, 0.012989668), (0.0055039823, 0.010811567, 0.012989668), (-0.0055039823, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064723996445537, -0.15945649147033691, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_04" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        bool physics:kinematicEnabled = 0
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (0.00015154743, 0.9979493, 0.00036479018, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_drawernwnartifact>
        rel semanticTag:semanticReports = </SOMA_DFL/_class_drawernwnartifact>
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (3.1413348, 0.12810309, 0.0007145388)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (3.0487005284111635, 3.817842283028149, 0.8292089886963367, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_04_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734823, 0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (-0.57734823, 0.57734823, -0.5773542), (0.57734823, -0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.57734823, 0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (0.5773699, 0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (-0.57734823, 0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (-0.57734823, 0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (0.57734823, 0.57734823, 0.5773542)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0049999617, 0.2828017, -0.28303587), (0.004999969, 0.2828017, -0.28303587), (0.004999969, -0.2828017, -0.28303587), (-0.0049999617, -0.2828017, -0.28303587), (0.004999969, -0.2828017, 0.28303587), (-0.0049999617, -0.2828017, 0.28303587), (0.004999969, 0.2828017, 0.28303587), (-0.0049999617, 0.2828017, 0.28303587)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_04_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11408046633005142, 1.4901161193847656e-8, -0.08638661354780197, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773302, -0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, 0.5773603, -0.5773603), (-0.5773302, -0.5773603, 0.5773603), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, -0.5773511, -0.5773549), (-0.57734483, -0.5773511, -0.5773549), (-0.5773302, 0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, 0.5773511, -0.57735497), (0.5773302, -0.5773603, -0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (0.5773302, 0.5773603, 0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773302, 0.5773603, 0.5773603), (0.5773449, -0.5773511, 0.57735497), (0.5773449, -0.5773511, 0.57735497), (0.5773302, 0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, -0.5773603, 0.5773603), (-0.57734483, -0.5773511, -0.5773549), (0.5773302, -0.5773603, -0.5773603), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.5773302, -0.5773603, 0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, 0.5773511, 0.5773549), (0.5773302, 0.5773603, 0.5773603)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0054723136, -0.09984982, 0.29802996), (-0.0054723136, 0.09984982, 0.29802996), (-0.0054723136, 0.09984982, -0.29802996), (-0.0054723136, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, -0.29802996), (0.0054722913, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, 0.29802996), (0.0054722913, -0.09984982, 0.29802996)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_04_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.17442794144153595, -0.0008446574211120605, -0.03791983425617218, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773379, -0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.5773379, -0.5773564, 0.5773564), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, -0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, 0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (0.5773379, 0.5773564, 0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.5773379, 0.5773564, 0.5773564), (0.57734567, -0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (-0.57734567, -0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, 0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0031750873, -0.061499752, 0.272), (-0.0031750873, 0.061499752, 0.272), (-0.0031750873, 0.061499752, -0.272), (-0.0031750873, -0.061499752, -0.272), (0.0031750724, 0.061499752, -0.272), (0.0031750724, -0.061499752, -0.272), (0.0031750724, 0.061499752, 0.272), (0.0031750724, -0.061499752, 0.272)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_04_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.3939414918422699, -0.0008016228675842285, -0.019886843860149384, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_04_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, -0.2778016924858093, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_04_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, 0.2761983275413513, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.6204346, -0.53078127, -0.5773493), (-0.53078264, 0.62043554, -0.5773469), (0.5759696, 0.5705666, -0.58541673), (-0.6204346, -0.53078127, -0.5773493), (0.5759696, 0.5705666, -0.58541673), (0.5782127, -0.583695, -0.57006174), (0.5782127, -0.583695, -0.57006174), (0.5759696, 0.5705666, -0.58541673), (0.5759755, 0.5705681, 0.5854094), (0.5782127, -0.583695, -0.57006174), (0.5759755, 0.5705681, 0.5854094), (0.5782246, -0.58370304, 0.5700412), (0.5782246, -0.58370304, 0.5700412), (0.5759755, 0.5705681, 0.5854094), (-0.5307868, 0.6204455, 0.57733256), (0.5782246, -0.58370304, 0.5700412), (-0.5307868, 0.6204455, 0.57733256), (-0.62043524, -0.53078425, 0.5773458), (-0.62043524, -0.53078425, 0.5773458), (-0.5307868, 0.6204455, 0.57733256), (-0.53078264, 0.62043554, -0.5773469), (-0.62043524, -0.53078425, 0.5773458), (-0.53078264, 0.62043554, -0.5773469), (-0.6204346, -0.53078127, -0.5773493), (0.5782127, -0.583695, -0.57006174), (0.5782246, -0.58370304, 0.5700412), (-0.62043524, -0.53078425, 0.5773458), (0.5782127, -0.583695, -0.57006174), (-0.62043524, -0.53078425, 0.5773458), (-0.6204346, -0.53078127, -0.5773493), (0.5759755, 0.5705681, 0.5854094), (0.5759696, 0.5705666, -0.58541673), (-0.53078264, 0.62043554, -0.5773469), (0.5759755, 0.5705681, 0.5854094), (-0.53078264, 0.62043554, -0.5773469), (-0.5307868, 0.6204455, 0.57733256)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.010100868, -0.029527072, -0.27986103), (-0.004821146, 0.038267687, -0.27986103), (0.0051486567, 0.03749126, -0.27986103), (0.009838887, -0.03107994, -0.27986103), (0.0051486567, 0.03749126, 0.27986097), (0.009838887, -0.03107994, 0.27986097), (-0.004821146, 0.038267687, 0.27986097), (-0.010100868, -0.029527072, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_04_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.357943561572597e-8, 0.9969812315710851, 0.07764292559532149, 0), (4.710527007345533e-8, -0.07764292559531949, 0.9969812315710851, 0), (0.999999999999998, 4.7105270295499935e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, -0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.62043464, -0.5307812, -0.57734925), (-0.5782127, -0.583695, -0.57006174), (-0.5759696, 0.5705666, -0.58541673), (0.62043464, -0.5307812, -0.57734925), (-0.5759696, 0.5705666, -0.58541673), (0.5307827, 0.62043554, -0.5773469), (-0.5782127, -0.583695, -0.57006174), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (-0.5782127, -0.583695, -0.57006174), (-0.5759755, 0.5705681, 0.5854094), (-0.5759696, 0.5705666, -0.58541673), (-0.5782246, -0.58370304, 0.5700412), (0.62043524, -0.53078425, 0.5773458), (0.5307868, 0.6204455, 0.57733256), (-0.5782246, -0.58370304, 0.5700412), (0.5307868, 0.6204455, 0.57733256), (-0.5759755, 0.5705681, 0.5854094), (0.62043524, -0.53078425, 0.5773458), (0.62043464, -0.5307812, -0.57734925), (0.5307827, 0.62043554, -0.5773469), (0.62043524, -0.53078425, 0.5773458), (0.5307827, 0.62043554, -0.5773469), (0.5307868, 0.6204455, 0.57733256), (-0.5782127, -0.583695, -0.57006174), (0.62043464, -0.5307812, -0.57734925), (0.62043524, -0.53078425, 0.5773458), (-0.5782127, -0.583695, -0.57006174), (0.62043524, -0.53078425, 0.5773458), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (0.5307868, 0.6204455, 0.57733256), (0.5307827, 0.62043554, -0.5773469), (-0.5759755, 0.5705681, 0.5854094), (0.5307827, 0.62043554, -0.5773469), (-0.5759696, 0.5705666, -0.58541673)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.010100865, -0.029527072, -0.27986103), (-0.009838889, -0.03107994, -0.27986103), (-0.0051486595, 0.03749126, -0.27986103), (0.004821143, 0.038267687, -0.27986103), (-0.009838889, -0.03107994, 0.27986097), (-0.0051486595, 0.03749126, 0.27986097), (0.010100865, -0.029527072, 0.27986097), (0.004821143, 0.038267687, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_04_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.3579435393681365e-8, 0.9969812315710851, -0.07764292559532149, 0), (4.03175097196673e-8, 0.07764292559532326, 0.9969812315710851, 0), (0.9999999999999982, 4.03175098306896e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, 0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_04_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (-0.53304553, -0.464603, 0.5330521, 0.4646094)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_drawernwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (1.5707973, -0.13699229, -1.5708094)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_04_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773567, -0.57734704, -0.57734704), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773567, -0.57734704, -0.57734704), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, 0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (-0.5773567, 0.57734704, 0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, 0.5773631, 0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773567, -0.57734704, 0.57734704), (0.5773553, -0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (0.5773567, -0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, -0.57734704, -0.57734704), (-0.5773553, 0.5773631, -0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773567, -0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, -0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005019702, -0.010811567, -0.16495954), (-0.005019702, -0.010811567, 0.16495954), (-0.005019702, 0.010811567, 0.16495954), (-0.005019702, 0.010811567, -0.16495954), (0.005019702, 0.010811567, 0.16495954), (0.005019702, 0.010811567, -0.16495954), (0.005019702, -0.010811567, 0.16495954), (0.005019702, -0.010811567, -0.16495954)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.000002346932888031006, 0.0012064725160598755, 9.834766387939453e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_04_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (-0.5773559, 0.5773559, -0.57733905), (0.5773559, -0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.57735586, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.57735586, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005500015, 0.010811567, -0.012989666), (0.0055000074, 0.010811567, -0.012989666), (0.0055000074, -0.010811567, -0.012989666), (-0.005500015, -0.010811567, -0.012989666), (0.0055000074, -0.010811567, 0.012989668), (-0.005500015, -0.010811567, 0.012989668), (0.0055000074, 0.010811567, 0.012989668), (-0.005500015, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064725160598755, 0.15946051478385925, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_04_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (-0.5773559, 0.5773559, -0.577339), (0.5773559, -0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773559, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.5773559, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0055039823, 0.010811567, -0.012989666), (0.0055039823, 0.010811567, -0.012989666), (0.0055039823, -0.010811567, -0.012989666), (-0.0055039823, -0.010811567, -0.012989666), (0.0055039823, -0.010811567, 0.012989668), (-0.0055039823, -0.010811567, 0.012989668), (0.0055039823, 0.010811567, 0.012989668), (-0.0055039823, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064723996445537, -0.15945649147033691, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_05" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        bool physics:kinematicEnabled = 0
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (0.00015154743, 0.9979493, 0.00036479018, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_drawernwnartifact>
        rel semanticTag:semanticReports = </SOMA_DFL/_class_drawernwnartifact>
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (3.1413348, 0.12810309, 0.0007145388)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (3.0487005284111635, 3.817842283028149, 0.6292089819908142, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_05_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734823, 0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (-0.57734823, 0.57734823, -0.5773542), (0.57734823, -0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.57734823, 0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (0.5773699, 0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (-0.57734823, 0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (-0.57734823, 0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (0.57734823, 0.57734823, 0.5773542)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0049999617, 0.2828017, -0.28303587), (0.004999969, 0.2828017, -0.28303587), (0.004999969, -0.2828017, -0.28303587), (-0.0049999617, -0.2828017, -0.28303587), (0.004999969, -0.2828017, 0.28303587), (-0.0049999617, -0.2828017, 0.28303587), (0.004999969, 0.2828017, 0.28303587), (-0.0049999617, 0.2828017, 0.28303587)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_05_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11408046633005142, 1.4901161193847656e-8, -0.08638661354780197, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773302, -0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, 0.5773603, -0.5773603), (-0.5773302, -0.5773603, 0.5773603), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, -0.5773511, -0.5773549), (-0.57734483, -0.5773511, -0.5773549), (-0.5773302, 0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, 0.5773511, -0.57735497), (0.5773302, -0.5773603, -0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (0.5773302, 0.5773603, 0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773302, 0.5773603, 0.5773603), (0.5773449, -0.5773511, 0.57735497), (0.5773449, -0.5773511, 0.57735497), (0.5773302, 0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, -0.5773603, 0.5773603), (-0.57734483, -0.5773511, -0.5773549), (0.5773302, -0.5773603, -0.5773603), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.5773302, -0.5773603, 0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, 0.5773511, 0.5773549), (0.5773302, 0.5773603, 0.5773603)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0054723136, -0.09984982, 0.29802996), (-0.0054723136, 0.09984982, 0.29802996), (-0.0054723136, 0.09984982, -0.29802996), (-0.0054723136, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, -0.29802996), (0.0054722913, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, 0.29802996), (0.0054722913, -0.09984982, 0.29802996)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_05_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.17442794144153595, -0.0008446574211120605, -0.03791983425617218, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773379, -0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.5773379, -0.5773564, 0.5773564), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, -0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, 0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (0.5773379, 0.5773564, 0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.5773379, 0.5773564, 0.5773564), (0.57734567, -0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (-0.57734567, -0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, 0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0031750873, -0.061499752, 0.272), (-0.0031750873, 0.061499752, 0.272), (-0.0031750873, 0.061499752, -0.272), (-0.0031750873, -0.061499752, -0.272), (0.0031750724, 0.061499752, -0.272), (0.0031750724, -0.061499752, -0.272), (0.0031750724, 0.061499752, 0.272), (0.0031750724, -0.061499752, 0.272)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_05_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.3939414918422699, -0.0008016228675842285, -0.019886843860149384, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_05_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, -0.2778016924858093, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_05_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, 0.2761983275413513, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.6204346, -0.53078127, -0.5773493), (-0.53078264, 0.62043554, -0.5773469), (0.5759696, 0.5705666, -0.58541673), (-0.6204346, -0.53078127, -0.5773493), (0.5759696, 0.5705666, -0.58541673), (0.5782127, -0.583695, -0.57006174), (0.5782127, -0.583695, -0.57006174), (0.5759696, 0.5705666, -0.58541673), (0.5759755, 0.5705681, 0.5854094), (0.5782127, -0.583695, -0.57006174), (0.5759755, 0.5705681, 0.5854094), (0.5782246, -0.58370304, 0.5700412), (0.5782246, -0.58370304, 0.5700412), (0.5759755, 0.5705681, 0.5854094), (-0.5307868, 0.6204455, 0.57733256), (0.5782246, -0.58370304, 0.5700412), (-0.5307868, 0.6204455, 0.57733256), (-0.62043524, -0.53078425, 0.5773458), (-0.62043524, -0.53078425, 0.5773458), (-0.5307868, 0.6204455, 0.57733256), (-0.53078264, 0.62043554, -0.5773469), (-0.62043524, -0.53078425, 0.5773458), (-0.53078264, 0.62043554, -0.5773469), (-0.6204346, -0.53078127, -0.5773493), (0.5782127, -0.583695, -0.57006174), (0.5782246, -0.58370304, 0.5700412), (-0.62043524, -0.53078425, 0.5773458), (0.5782127, -0.583695, -0.57006174), (-0.62043524, -0.53078425, 0.5773458), (-0.6204346, -0.53078127, -0.5773493), (0.5759755, 0.5705681, 0.5854094), (0.5759696, 0.5705666, -0.58541673), (-0.53078264, 0.62043554, -0.5773469), (0.5759755, 0.5705681, 0.5854094), (-0.53078264, 0.62043554, -0.5773469), (-0.5307868, 0.6204455, 0.57733256)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.010100868, -0.029527072, -0.27986103), (-0.004821146, 0.038267687, -0.27986103), (0.0051486567, 0.03749126, -0.27986103), (0.009838887, -0.03107994, -0.27986103), (0.0051486567, 0.03749126, 0.27986097), (0.009838887, -0.03107994, 0.27986097), (-0.004821146, 0.038267687, 0.27986097), (-0.010100868, -0.029527072, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_05_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.357943561572597e-8, 0.9969812315710851, 0.07764292559532149, 0), (4.710527007345533e-8, -0.07764292559531949, 0.9969812315710851, 0), (0.999999999999998, 4.7105270295499935e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, -0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.62043464, -0.5307812, -0.57734925), (-0.5782127, -0.583695, -0.57006174), (-0.5759696, 0.5705666, -0.58541673), (0.62043464, -0.5307812, -0.57734925), (-0.5759696, 0.5705666, -0.58541673), (0.5307827, 0.62043554, -0.5773469), (-0.5782127, -0.583695, -0.57006174), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (-0.5782127, -0.583695, -0.57006174), (-0.5759755, 0.5705681, 0.5854094), (-0.5759696, 0.5705666, -0.58541673), (-0.5782246, -0.58370304, 0.5700412), (0.62043524, -0.53078425, 0.5773458), (0.5307868, 0.6204455, 0.57733256), (-0.5782246, -0.58370304, 0.5700412), (0.5307868, 0.6204455, 0.57733256), (-0.5759755, 0.5705681, 0.5854094), (0.62043524, -0.53078425, 0.5773458), (0.62043464, -0.5307812, -0.57734925), (0.5307827, 0.62043554, -0.5773469), (0.62043524, -0.53078425, 0.5773458), (0.5307827, 0.62043554, -0.5773469), (0.5307868, 0.6204455, 0.57733256), (-0.5782127, -0.583695, -0.57006174), (0.62043464, -0.5307812, -0.57734925), (0.62043524, -0.53078425, 0.5773458), (-0.5782127, -0.583695, -0.57006174), (0.62043524, -0.53078425, 0.5773458), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (0.5307868, 0.6204455, 0.57733256), (0.5307827, 0.62043554, -0.5773469), (-0.5759755, 0.5705681, 0.5854094), (0.5307827, 0.62043554, -0.5773469), (-0.5759696, 0.5705666, -0.58541673)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.010100865, -0.029527072, -0.27986103), (-0.009838889, -0.03107994, -0.27986103), (-0.0051486595, 0.03749126, -0.27986103), (0.004821143, 0.038267687, -0.27986103), (-0.009838889, -0.03107994, 0.27986097), (-0.0051486595, 0.03749126, 0.27986097), (0.010100865, -0.029527072, 0.27986097), (0.004821143, 0.038267687, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_05_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.3579435393681365e-8, 0.9969812315710851, -0.07764292559532149, 0), (4.03175097196673e-8, 0.07764292559532326, 0.9969812315710851, 0), (0.9999999999999982, 4.03175098306896e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, 0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_05_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (-0.53304553, -0.464603, 0.5330521, 0.4646094)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_drawernwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (1.5707973, -0.13699229, -1.5708094)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_05_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773567, -0.57734704, -0.57734704), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773567, -0.57734704, -0.57734704), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, 0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (-0.5773567, 0.57734704, 0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, 0.5773631, 0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773567, -0.57734704, 0.57734704), (0.5773553, -0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (0.5773567, -0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, -0.57734704, -0.57734704), (-0.5773553, 0.5773631, -0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773567, -0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, -0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005019702, -0.010811567, -0.16495954), (-0.005019702, -0.010811567, 0.16495954), (-0.005019702, 0.010811567, 0.16495954), (-0.005019702, 0.010811567, -0.16495954), (0.005019702, 0.010811567, 0.16495954), (0.005019702, 0.010811567, -0.16495954), (0.005019702, -0.010811567, 0.16495954), (0.005019702, -0.010811567, -0.16495954)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.000002346932888031006, 0.0012064725160598755, 9.834766387939453e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_05_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (-0.5773559, 0.5773559, -0.57733905), (0.5773559, -0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.57735586, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.57735586, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005500015, 0.010811567, -0.012989666), (0.0055000074, 0.010811567, -0.012989666), (0.0055000074, -0.010811567, -0.012989666), (-0.005500015, -0.010811567, -0.012989666), (0.0055000074, -0.010811567, 0.012989668), (-0.005500015, -0.010811567, 0.012989668), (0.0055000074, 0.010811567, 0.012989668), (-0.005500015, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064725160598755, 0.15946051478385925, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_05_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (-0.5773559, 0.5773559, -0.577339), (0.5773559, -0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773559, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.5773559, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0055039823, 0.010811567, -0.012989666), (0.0055039823, 0.010811567, -0.012989666), (0.0055039823, -0.010811567, -0.012989666), (-0.0055039823, -0.010811567, -0.012989666), (0.0055039823, -0.010811567, 0.012989668), (-0.0055039823, -0.010811567, 0.012989668), (0.0055039823, 0.010811567, 0.012989668), (-0.0055039823, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064723996445537, -0.15945649147033691, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_06" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (-0.009161649, -0.00032812098, -0.07310583)
        float3 physics:diagonalInertia = (0.38564655, 0.4764746, 0.6430068)
        bool physics:kinematicEnabled = 0
        float physics:mass = 7.7570677
        quatf physics:principalAxes = (0.00045899992, 0.99140584, 0.0021758925, -0.13080314)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_drawernwnartifact>
        rel semanticTag:semanticReports = </SOMA_DFL/_class_drawernwnartifact>
        float urdf:link:inertial:inertia:ixx = 0.38564655
        float urdf:link:inertial:inertia:iyy = 0.4764746
        float urdf:link:inertial:inertia:izz = 0.6430068
        float urdf:link:inertial:mass = 7.7570677
        float3 urdf:link:inertial:origin:rpy = (3.1412396, 0.26235947, 0.004342933)
        point3f urdf:link:inertial:origin:xyz = (-0.009161649, -0.00032812098, -0.07310583)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (3.0487003377119994, 3.868842282074118, 0.26420897245407104, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_06_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.6204343, -0.5307813, -0.57734954), (-0.5782127, -0.58369505, -0.5700617), (-0.57597136, 0.57056576, -0.5854158), (0.6204343, -0.5307813, -0.57734954), (-0.57597136, 0.57056576, -0.5854158), (0.5307804, 0.62043667, -0.57734793), (-0.5782127, -0.58369505, -0.5700617), (-0.5782264, -0.5837023, 0.5700401), (-0.5759734, 0.5705692, 0.58541054), (-0.5782127, -0.58369505, -0.5700617), (-0.5759734, 0.5705692, 0.58541054), (-0.57597136, 0.57056576, -0.5854158), (-0.5782264, -0.5837023, 0.5700401), (0.62043333, -0.5307853, 0.5773469), (0.5307882, 0.6204448, 0.57733196), (-0.5782264, -0.5837023, 0.5700401), (0.5307882, 0.6204448, 0.57733196), (-0.5759734, 0.5705692, 0.58541054), (0.62043333, -0.5307853, 0.5773469), (0.6204343, -0.5307813, -0.57734954), (0.5307804, 0.62043667, -0.57734793), (0.62043333, -0.5307853, 0.5773469), (0.5307804, 0.62043667, -0.57734793), (0.5307882, 0.6204448, 0.57733196), (-0.5782127, -0.58369505, -0.5700617), (0.6204343, -0.5307813, -0.57734954), (0.62043333, -0.5307853, 0.5773469), (-0.5782127, -0.58369505, -0.5700617), (0.62043333, -0.5307853, 0.5773469), (-0.5782264, -0.5837023, 0.5700401), (-0.5759734, 0.5705692, 0.58541054), (0.5307882, 0.6204448, 0.57733196), (0.5307804, 0.62043667, -0.57734793), (-0.5759734, 0.5705692, 0.58541054), (0.5307804, 0.62043667, -0.57734793), (-0.57597136, 0.57056576, -0.5854158)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.010100865, -0.029527064, -0.279861), (-0.009838889, -0.031079935, -0.279861), (-0.0051486595, 0.037491247, -0.279861), (0.004821143, 0.038267676, -0.279861), (-0.009838889, -0.031079935, 0.27986097), (-0.0051486595, 0.037491247, 0.27986097), (0.010100865, -0.029527064, 0.27986097), (0.004821143, 0.038267676, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772117, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, 0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_06_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.3579435393681365e-8, 0.9969812298356301, -0.07764294787958859, 0), (4.031750888700003e-8, 0.07764294787959036, 0.9969812298356301, 0), (0.9999999999999982, 4.031750888700003e-8, -4.3579435393681365e-8, 0), (0.06011587753891945, 0.275023877620697, -0.11386485397815704, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.6204352, -0.53078085, -0.57734895), (-0.5307804, 0.62043667, -0.57734793), (0.57597125, 0.5705659, -0.5854159), (-0.6204352, -0.53078085, -0.57734895), (0.57597125, 0.5705659, -0.5854159), (0.5782116, -0.5836955, -0.57006216), (0.5782116, -0.5836955, -0.57006216), (0.57597125, 0.5705659, -0.5854159), (0.57597125, 0.57057023, 0.5854116), (0.5782116, -0.5836955, -0.57006216), (0.57597125, 0.57057023, 0.5854116), (0.5782262, -0.5837024, 0.5700403), (0.5782262, -0.5837024, 0.5700403), (0.57597125, 0.57057023, 0.5854116), (-0.53079003, 0.6204439, 0.5773311), (0.5782262, -0.5837024, 0.5700403), (-0.53079003, 0.6204439, 0.5773311), (-0.6204333, -0.5307853, 0.5773469), (-0.6204333, -0.5307853, 0.5773469), (-0.53079003, 0.6204439, 0.5773311), (-0.5307804, 0.62043667, -0.57734793), (-0.6204333, -0.5307853, 0.5773469), (-0.5307804, 0.62043667, -0.57734793), (-0.6204352, -0.53078085, -0.57734895), (0.5782116, -0.5836955, -0.57006216), (0.5782262, -0.5837024, 0.5700403), (-0.6204333, -0.5307853, 0.5773469), (0.5782116, -0.5836955, -0.57006216), (-0.6204333, -0.5307853, 0.5773469), (-0.6204352, -0.53078085, -0.57734895), (0.57597125, 0.57057023, 0.5854116), (0.57597125, 0.5705659, -0.5854159), (-0.5307804, 0.62043667, -0.57734793), (0.57597125, 0.57057023, 0.5854116), (-0.5307804, 0.62043667, -0.57734793), (-0.53079003, 0.6204439, 0.5773311)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.010100868, -0.029527064, -0.279861), (-0.0048211454, 0.038267676, -0.279861), (0.005148657, 0.037491247, -0.279861), (0.009838886, -0.031079933, -0.279861), (0.005148657, 0.037491247, 0.27986097), (0.009838886, -0.031079933, 0.27986097), (-0.0048211454, 0.038267676, 0.27986097), (-0.010100868, -0.029527064, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772118, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, -0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_06_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.357943561572597e-8, 0.9969812292571452, 0.07764295530767751, 0), (4.7105271627767564e-8, -0.07764295530767562, 0.9969812292571452, 0), (0.9999999999999981, 4.7105271627767564e-8, -4.357943561572597e-8, 0), (0.06011587753891945, -0.275023877620697, -0.11386485397815704, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.5773394, -0.5773721), (0.5773517, 0.5773517, -0.5773474), (0.5773394, -0.5773394, -0.5773721), (-0.5773394, 0.5773394, -0.5773721), (0.5773394, -0.5773394, -0.5773721), (-0.5773517, -0.5773517, -0.5773474), (-0.5773517, -0.5773517, -0.5773474), (0.5773394, -0.5773394, -0.5773721), (0.5773517, -0.5773517, 0.5773474), (-0.5773517, -0.5773517, -0.5773474), (0.5773517, -0.5773517, 0.5773474), (-0.5773394, -0.5773394, 0.5773721), (-0.5773394, -0.5773394, 0.5773721), (0.5773517, -0.5773517, 0.5773474), (0.5773394, 0.5773394, 0.5773721), (-0.5773394, -0.5773394, 0.5773721), (0.5773394, 0.5773394, 0.5773721), (-0.5773517, 0.5773517, 0.5773474), (-0.5773517, 0.5773517, 0.5773474), (0.5773394, 0.5773394, 0.5773721), (0.5773517, 0.5773517, -0.5773474), (-0.5773517, 0.5773517, 0.5773474), (0.5773517, 0.5773517, -0.5773474), (-0.5773394, 0.5773394, -0.5773721), (-0.5773517, -0.5773517, -0.5773474), (-0.5773394, -0.5773394, 0.5773721), (-0.5773517, 0.5773517, 0.5773474), (-0.5773517, -0.5773517, -0.5773474), (-0.5773517, 0.5773517, 0.5773474), (-0.5773394, 0.5773394, -0.5773721), (0.5773517, -0.5773517, 0.5773474), (0.5773394, -0.5773394, -0.5773721), (0.5773517, 0.5773517, -0.5773474), (0.5773517, -0.5773517, 0.5773474), (0.5773517, 0.5773517, -0.5773474), (0.5773394, 0.5773394, 0.5773721)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999988, 0.004999995, -0.279861), (0.004999988, 0.004999995, -0.279861), (0.004999988, -0.004999995, -0.279861), (-0.004999988, -0.004999995, -0.279861), (0.004999988, -0.004999995, 0.27986097), (-0.004999988, -0.004999995, 0.27986097), (0.004999988, 0.004999995, 0.27986097), (-0.004999988, 0.004999995, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06011587, 0.27619833, 0.04391294)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_06_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.06011587008833885, 0.2761983275413513, 0.043912939727306366, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, -0.5773394, -0.5773721), (-0.5773517, 0.5773517, -0.5773474), (0.5773394, 0.5773394, -0.5773721), (-0.5773394, -0.5773394, -0.5773721), (0.5773394, 0.5773394, -0.5773721), (0.5773517, -0.5773517, -0.5773474), (0.5773517, -0.5773517, -0.5773474), (0.5773394, 0.5773394, -0.5773721), (0.5773517, 0.5773517, 0.5773474), (0.5773517, -0.5773517, -0.5773474), (0.5773517, 0.5773517, 0.5773474), (0.5773394, -0.5773394, 0.5773721), (0.5773394, -0.5773394, 0.5773721), (0.5773517, 0.5773517, 0.5773474), (-0.5773394, 0.5773394, 0.5773721), (0.5773394, -0.5773394, 0.5773721), (-0.5773394, 0.5773394, 0.5773721), (-0.5773517, -0.5773517, 0.5773474), (-0.5773517, -0.5773517, 0.5773474), (-0.5773394, 0.5773394, 0.5773721), (-0.5773517, 0.5773517, -0.5773474), (-0.5773517, -0.5773517, 0.5773474), (-0.5773517, 0.5773517, -0.5773474), (-0.5773394, -0.5773394, -0.5773721), (0.5773517, -0.5773517, -0.5773474), (0.5773394, -0.5773394, 0.5773721), (-0.5773517, -0.5773517, 0.5773474), (0.5773517, -0.5773517, -0.5773474), (-0.5773517, -0.5773517, 0.5773474), (-0.5773394, -0.5773394, -0.5773721), (0.5773517, 0.5773517, 0.5773474), (0.5773394, 0.5773394, -0.5773721), (-0.5773517, 0.5773517, -0.5773474), (0.5773517, 0.5773517, 0.5773474), (-0.5773517, 0.5773517, -0.5773474), (-0.5773394, 0.5773394, 0.5773721)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999995, -0.0049999915, -0.279861), (-0.004999995, 0.0049999915, -0.279861), (0.004999995, 0.0049999915, -0.279861), (0.004999995, -0.0049999915, -0.279861), (0.004999995, 0.0049999915, 0.27986097), (0.004999995, -0.0049999915, 0.27986097), (-0.004999995, 0.0049999915, 0.27986097), (-0.004999995, -0.0049999915, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.06011587, -0.2778017, 0.043912943)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_06_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.9999999999999989, 1.27675647831893e-15, 0), (4.371139000758362e-8, 6.661338147750939e-16, 0.9999999999999989, 0), (0.999999999999998, 4.371139000758362e-8, -4.371139006309477e-8, 0), (0.06011587008833885, -0.2778016924858093, 0.043912943452596664, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57733005, -0.57736033, 0.57736033), (-0.57734656, 0.5773492, 0.57735497), (-0.57733005, 0.57736033, -0.57736033), (-0.57733005, -0.57736033, 0.57736033), (-0.57733005, 0.57736033, -0.57736033), (-0.57734656, -0.5773492, -0.57735497), (-0.57734656, -0.5773492, -0.57735497), (-0.57733005, 0.57736033, -0.57736033), (0.57734656, 0.5773492, -0.57735497), (-0.57734656, -0.5773492, -0.57735497), (0.57734656, 0.5773492, -0.57735497), (0.57733005, -0.57736033, -0.57736033), (0.57733005, -0.57736033, -0.57736033), (0.57734656, 0.5773492, -0.57735497), (0.57733005, 0.57736033, 0.57736033), (0.57733005, -0.57736033, -0.57736033), (0.57733005, 0.57736033, 0.57736033), (0.57734656, -0.5773492, 0.57735497), (0.57734656, -0.5773492, 0.57735497), (0.57733005, 0.57736033, 0.57736033), (-0.57734656, 0.5773492, 0.57735497), (0.57734656, -0.5773492, 0.57735497), (-0.57734656, 0.5773492, 0.57735497), (-0.57733005, -0.57736033, 0.57736033), (-0.57734656, -0.5773492, -0.57735497), (0.57733005, -0.57736033, -0.57736033), (0.57734656, -0.5773492, 0.57735497), (-0.57734656, -0.5773492, -0.57735497), (0.57734656, -0.5773492, 0.57735497), (-0.57733005, -0.57736033, 0.57736033), (0.57734656, 0.5773492, -0.57735497), (-0.57733005, 0.57736033, -0.57736033), (-0.57734656, 0.5773492, 0.57735497), (0.57734656, 0.5773492, -0.57735497), (-0.57734656, 0.5773492, 0.57735497), (0.57733005, 0.57736033, 0.57736033)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0031750798, -0.096499965, 0.2831666), (-0.0031750798, 0.096499965, 0.2831666), (-0.0031750798, 0.096499965, -0.2831666), (-0.0031750798, -0.096499965, -0.2831666), (0.0031750798, 0.096499965, -0.2831666), (0.0031750798, -0.096499965, -0.2831666), (0.0031750798, 0.096499965, 0.2831666), (0.0031750798, -0.096499965, 0.2831666)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.34315193, -0.00036489964, -0.047587022)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_06_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.34315192699432373, -0.0003648996353149414, -0.04758702218532562, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773559, -0.5773474, 0.5773474), (-0.57734567, 0.577352, 0.5773531), (-0.5773559, 0.5773474, -0.5773474), (-0.5773559, -0.5773474, 0.5773474), (-0.5773559, 0.5773474, -0.5773474), (-0.57734567, -0.577352, -0.5773531), (-0.57734567, -0.577352, -0.5773531), (-0.5773559, 0.5773474, -0.5773474), (0.57734567, 0.577352, -0.5773531), (-0.57734567, -0.577352, -0.5773531), (0.57734567, 0.577352, -0.5773531), (0.5773559, -0.5773474, -0.5773474), (0.5773559, -0.5773474, -0.5773474), (0.57734567, 0.577352, -0.5773531), (0.5773559, 0.5773474, 0.5773474), (0.5773559, -0.5773474, -0.5773474), (0.5773559, 0.5773474, 0.5773474), (0.57734567, -0.577352, 0.5773531), (0.57734567, -0.577352, 0.5773531), (0.5773559, 0.5773474, 0.5773474), (-0.57734567, 0.577352, 0.5773531), (0.57734567, -0.577352, 0.5773531), (-0.57734567, 0.577352, 0.5773531), (-0.5773559, -0.5773474, 0.5773474), (-0.57734567, -0.577352, -0.5773531), (0.5773559, -0.5773474, -0.5773474), (0.57734567, -0.577352, 0.5773531), (-0.57734567, -0.577352, -0.5773531), (0.57734567, -0.577352, 0.5773531), (-0.5773559, -0.5773474, 0.5773474), (0.57734567, 0.577352, -0.5773531), (-0.5773559, 0.5773474, -0.5773474), (-0.57734567, 0.577352, 0.5773531), (0.57734567, 0.577352, -0.5773531), (-0.57734567, 0.577352, 0.5773531), (0.5773559, 0.5773474, 0.5773474)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0054723024, -0.19985001, 0.29802996), (-0.0054723024, 0.19985, 0.29802996), (-0.0054723024, 0.19985, -0.29802996), (-0.0054723024, -0.19985001, -0.29802996), (0.0054723024, 0.19985, -0.29802996), (0.0054723024, -0.19985001, -0.29802996), (0.0054723024, 0.19985, 0.29802996), (0.0054723024, -0.19985001, 0.29802996)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.22521752, -0.0008446574, 0.026221953)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_06_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.2252175211906433, -0.0008446574211120605, 0.026221953332424164, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734823, 0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (-0.57734823, 0.57734823, -0.5773542), (0.57734823, -0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.57734823, 0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (0.5773699, 0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (-0.57734823, 0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (-0.57734823, 0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (0.57734823, 0.57734823, 0.5773542)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0049999654, 0.2828017, -0.28303587), (0.0049999654, 0.2828017, -0.28303587), (0.0049999654, -0.2828017, -0.28303587), (-0.0049999654, -0.2828017, -0.28303587), (0.0049999654, -0.2828017, 0.28303587), (-0.0049999654, -0.2828017, 0.28303587), (0.0049999654, 0.2828017, 0.28303587), (-0.0049999654, 0.2828017, 0.28303587)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06329089, 1.4901161e-8, -0.14908701)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_06_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.06329088658094406, 1.4901161193847656e-8, -0.14908701181411743, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_06_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (-0.53304553, -0.464603, 0.5330521, 0.4646094)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_drawernwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (1.5707973, -0.13699229, -1.5708094)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.26072901487350464, 0.0004400000034365803, 0.1899079978466034, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_06_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773567, -0.57734704, -0.57734704), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773567, -0.57734704, -0.57734704), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, 0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (-0.5773567, 0.57734704, 0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, 0.5773631, 0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773567, -0.57734704, 0.57734704), (0.5773553, -0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (0.5773567, -0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, -0.57734704, -0.57734704), (-0.5773553, 0.5773631, -0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773567, -0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, -0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005019702, -0.010811567, -0.16495954), (-0.005019702, -0.010811567, 0.16495954), (-0.005019702, 0.010811567, 0.16495954), (-0.005019702, 0.010811567, -0.16495954), (0.005019702, 0.010811567, 0.16495954), (0.005019702, 0.010811567, -0.16495954), (0.005019702, -0.010811567, 0.16495954), (0.005019702, -0.010811567, -0.16495954)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.000002346932888031006, 0.0012064725160598755, 9.834766387939453e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_06_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (-0.5773559, 0.5773559, -0.57733905), (0.5773559, -0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.57735586, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.57735586, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005500015, 0.010811567, -0.012989666), (0.0055000074, 0.010811567, -0.012989666), (0.0055000074, -0.010811567, -0.012989666), (-0.005500015, -0.010811567, -0.012989666), (0.0055000074, -0.010811567, 0.012989668), (-0.005500015, -0.010811567, 0.012989668), (0.0055000074, 0.010811567, 0.012989668), (-0.005500015, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064725160598755, 0.15946051478385925, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_06_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (-0.5773559, 0.5773559, -0.577339), (0.5773559, -0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773559, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.5773559, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0055039823, 0.010811567, -0.012989666), (0.0055039823, 0.010811567, -0.012989666), (0.0055039823, -0.010811567, -0.012989666), (-0.0055039823, -0.010811567, -0.012989666), (0.0055039823, -0.010811567, 0.012989668), (-0.0055039823, -0.010811567, 0.012989668), (0.0055039823, 0.010811567, 0.012989668), (-0.0055039823, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064723996445537, -0.15945649147033691, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_01" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        bool physics:kinematicEnabled = 0
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (0.00015154743, 0.9979493, 0.00036479018, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_drawernwnartifact>
        rel semanticTag:semanticReports = </SOMA_DFL/_class_drawernwnartifact>
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (3.1413348, 0.12810309, 0.0007145388)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (1.8487005403404815, 3.8178377959889542, 0.8292089886963367, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_01_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734823, 0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (-0.57734823, 0.57734823, -0.5773542), (0.57734823, -0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (-0.57734823, -0.57734823, 0.5773542), (0.57734823, 0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.57734823, 0.57734823, 0.5773542), (0.5773699, 0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (-0.57734823, 0.57734823, -0.5773542), (-0.5773699, -0.5773437, -0.57733727), (-0.57734823, -0.57734823, 0.5773542), (-0.5773699, 0.5773437, 0.57733727), (-0.5773699, -0.5773437, -0.57733727), (-0.5773699, 0.5773437, 0.57733727), (-0.57734823, 0.57734823, -0.5773542), (0.5773699, -0.5773437, 0.57733727), (0.57734823, -0.57734823, -0.5773542), (0.5773699, 0.5773437, -0.57733727), (0.5773699, -0.5773437, 0.57733727), (0.5773699, 0.5773437, -0.57733727), (0.57734823, 0.57734823, 0.5773542)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0049999617, 0.2828017, -0.28303587), (0.004999969, 0.2828017, -0.28303587), (0.004999969, -0.2828017, -0.28303587), (-0.0049999617, -0.2828017, -0.28303587), (0.004999969, -0.2828017, 0.28303587), (-0.0049999617, -0.2828017, 0.28303587), (0.004999969, 0.2828017, 0.28303587), (-0.0049999617, 0.2828017, 0.28303587)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_01_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11408046633005142, 1.4901161193847656e-8, -0.08638661354780197, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773302, -0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, 0.5773603, -0.5773603), (-0.5773302, -0.5773603, 0.5773603), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, -0.5773511, -0.5773549), (-0.57734483, -0.5773511, -0.5773549), (-0.5773302, 0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, 0.5773511, -0.57735497), (0.5773302, -0.5773603, -0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773449, 0.5773511, -0.57735497), (0.5773302, 0.5773603, 0.5773603), (0.5773302, -0.5773603, -0.5773603), (0.5773302, 0.5773603, 0.5773603), (0.5773449, -0.5773511, 0.57735497), (0.5773449, -0.5773511, 0.57735497), (0.5773302, 0.5773603, 0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, 0.5773511, 0.5773549), (-0.5773302, -0.5773603, 0.5773603), (-0.57734483, -0.5773511, -0.5773549), (0.5773302, -0.5773603, -0.5773603), (0.5773449, -0.5773511, 0.57735497), (-0.57734483, -0.5773511, -0.5773549), (0.5773449, -0.5773511, 0.57735497), (-0.5773302, -0.5773603, 0.5773603), (0.5773449, 0.5773511, -0.57735497), (-0.5773302, 0.5773603, -0.5773603), (-0.57734483, 0.5773511, 0.5773549), (0.5773449, 0.5773511, -0.57735497), (-0.57734483, 0.5773511, 0.5773549), (0.5773302, 0.5773603, 0.5773603)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0054723136, -0.09984982, 0.29802996), (-0.0054723136, 0.09984982, 0.29802996), (-0.0054723136, 0.09984982, -0.29802996), (-0.0054723136, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, -0.29802996), (0.0054722913, -0.09984982, -0.29802996), (0.0054722913, 0.09984982, 0.29802996), (0.0054722913, -0.09984982, 0.29802996)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_01_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (-0.17442794144153595, -0.0008446574211120605, -0.03791983425617218, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773379, -0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.5773379, -0.5773564, 0.5773564), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, -0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, 0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.57734567, 0.5773497, -0.5773554), (0.5773379, 0.5773564, 0.5773564), (0.5773379, -0.5773564, -0.5773564), (0.5773379, 0.5773564, 0.5773564), (0.57734567, -0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, 0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (-0.57734567, -0.5773497, -0.5773554), (0.5773379, -0.5773564, -0.5773564), (0.57734567, -0.5773497, 0.5773554), (-0.57734567, -0.5773497, -0.5773554), (0.57734567, -0.5773497, 0.5773554), (-0.5773379, -0.5773564, 0.5773564), (0.57734567, 0.5773497, -0.5773554), (-0.5773379, 0.5773564, -0.5773564), (-0.57734567, 0.5773497, 0.5773554), (0.57734567, 0.5773497, -0.5773554), (-0.57734567, 0.5773497, 0.5773554), (0.5773379, 0.5773564, 0.5773564)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0031750873, -0.061499752, 0.272), (-0.0031750873, 0.061499752, 0.272), (-0.0031750873, 0.061499752, -0.272), (-0.0031750873, -0.061499752, -0.272), (0.0031750724, 0.061499752, -0.272), (0.0031750724, -0.061499752, -0.272), (0.0031750724, 0.061499752, 0.272), (0.0031750724, -0.061499752, 0.272)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_01_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -4.371139006309477e-8, 0.999999999999999, 0), (0, -0.999999999999999, -4.371139006309477e-8, 0), (0.3939414918422699, -0.0008016228675842285, -0.019886843860149384, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_01_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, -0.2778016924858093, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773394, 0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (-0.5773394, 0.57733935, -0.57737213), (0.5773394, -0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (-0.5773394, -0.57733935, 0.57737213), (0.5773394, 0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.5773394, 0.57733935, 0.57737213), (0.57735157, 0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (-0.5773394, 0.57733935, -0.57737213), (-0.57735157, -0.57735187, -0.5773473), (-0.5773394, -0.57733935, 0.57737213), (-0.57735157, 0.57735187, 0.5773473), (-0.57735157, -0.57735187, -0.5773473), (-0.57735157, 0.57735187, 0.5773473), (-0.5773394, 0.57733935, -0.57737213), (0.57735157, -0.57735187, 0.5773473), (0.5773394, -0.57733935, -0.57737213), (0.57735157, 0.57735187, -0.5773473), (0.57735157, -0.57735187, 0.5773473), (0.57735157, 0.57735187, -0.5773473), (0.5773394, 0.57733935, 0.57737213)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.004999779, 0.004999995, -0.279861), (0.004999779, 0.004999995, -0.279861), (0.004999779, -0.004999995, -0.279861), (-0.004999779, -0.004999995, -0.279861), (0.004999779, -0.004999995, 0.279861), (-0.004999779, -0.004999995, 0.279861), (0.004999779, 0.004999995, 0.279861), (-0.004999779, 0.004999995, 0.279861)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_01_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.11090544611215591, 0.2761983275413513, 0.03661312907934189, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.6204346, -0.53078127, -0.5773493), (-0.53078264, 0.62043554, -0.5773469), (0.5759696, 0.5705666, -0.58541673), (-0.6204346, -0.53078127, -0.5773493), (0.5759696, 0.5705666, -0.58541673), (0.5782127, -0.583695, -0.57006174), (0.5782127, -0.583695, -0.57006174), (0.5759696, 0.5705666, -0.58541673), (0.5759755, 0.5705681, 0.5854094), (0.5782127, -0.583695, -0.57006174), (0.5759755, 0.5705681, 0.5854094), (0.5782246, -0.58370304, 0.5700412), (0.5782246, -0.58370304, 0.5700412), (0.5759755, 0.5705681, 0.5854094), (-0.5307868, 0.6204455, 0.57733256), (0.5782246, -0.58370304, 0.5700412), (-0.5307868, 0.6204455, 0.57733256), (-0.62043524, -0.53078425, 0.5773458), (-0.62043524, -0.53078425, 0.5773458), (-0.5307868, 0.6204455, 0.57733256), (-0.53078264, 0.62043554, -0.5773469), (-0.62043524, -0.53078425, 0.5773458), (-0.53078264, 0.62043554, -0.5773469), (-0.6204346, -0.53078127, -0.5773493), (0.5782127, -0.583695, -0.57006174), (0.5782246, -0.58370304, 0.5700412), (-0.62043524, -0.53078425, 0.5773458), (0.5782127, -0.583695, -0.57006174), (-0.62043524, -0.53078425, 0.5773458), (-0.6204346, -0.53078127, -0.5773493), (0.5759755, 0.5705681, 0.5854094), (0.5759696, 0.5705666, -0.58541673), (-0.53078264, 0.62043554, -0.5773469), (0.5759755, 0.5705681, 0.5854094), (-0.53078264, 0.62043554, -0.5773469), (-0.5307868, 0.6204455, 0.57733256)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.010100868, -0.029527072, -0.27986103), (-0.004821146, 0.038267687, -0.27986103), (0.0051486567, 0.03749126, -0.27986103), (0.009838887, -0.03107994, -0.27986103), (0.0051486567, 0.03749126, 0.27986097), (0.009838887, -0.03107994, 0.27986097), (-0.004821146, 0.038267687, 0.27986097), (-0.010100868, -0.029527072, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_01_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.357943561572597e-8, 0.9969812315710851, 0.07764292559532149, 0), (4.710527007345533e-8, -0.07764292559531949, 0.9969812315710851, 0), (0.999999999999998, 4.7105270295499935e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, -0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 1, 4, 5, 1, 5, 2, 4, 6, 7, 4, 7, 5, 6, 0, 3, 6, 3, 7, 1, 0, 6, 1, 6, 4, 5, 7, 3, 5, 3, 2]
            normal3f[] normals = [(0.62043464, -0.5307812, -0.57734925), (-0.5782127, -0.583695, -0.57006174), (-0.5759696, 0.5705666, -0.58541673), (0.62043464, -0.5307812, -0.57734925), (-0.5759696, 0.5705666, -0.58541673), (0.5307827, 0.62043554, -0.5773469), (-0.5782127, -0.583695, -0.57006174), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (-0.5782127, -0.583695, -0.57006174), (-0.5759755, 0.5705681, 0.5854094), (-0.5759696, 0.5705666, -0.58541673), (-0.5782246, -0.58370304, 0.5700412), (0.62043524, -0.53078425, 0.5773458), (0.5307868, 0.6204455, 0.57733256), (-0.5782246, -0.58370304, 0.5700412), (0.5307868, 0.6204455, 0.57733256), (-0.5759755, 0.5705681, 0.5854094), (0.62043524, -0.53078425, 0.5773458), (0.62043464, -0.5307812, -0.57734925), (0.5307827, 0.62043554, -0.5773469), (0.62043524, -0.53078425, 0.5773458), (0.5307827, 0.62043554, -0.5773469), (0.5307868, 0.6204455, 0.57733256), (-0.5782127, -0.583695, -0.57006174), (0.62043464, -0.5307812, -0.57734925), (0.62043524, -0.53078425, 0.5773458), (-0.5782127, -0.583695, -0.57006174), (0.62043524, -0.53078425, 0.5773458), (-0.5782246, -0.58370304, 0.5700412), (-0.5759755, 0.5705681, 0.5854094), (0.5307868, 0.6204455, 0.57733256), (0.5307827, 0.62043554, -0.5773469), (-0.5759755, 0.5705681, 0.5854094), (0.5307827, 0.62043554, -0.5773469), (-0.5759696, 0.5705666, -0.58541673)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(0.010100865, -0.029527072, -0.27986103), (-0.009838889, -0.03107994, -0.27986103), (-0.0051486595, 0.03749126, -0.27986103), (0.004821143, 0.038267687, -0.27986103), (-0.009838889, -0.03107994, 0.27986097), (-0.0051486595, 0.03749126, 0.27986097), (0.010100865, -0.029527072, 0.27986097), (0.004821143, 0.038267687, 0.27986097)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Drawer_01_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.3579435393681365e-8, 0.9969812315710851, -0.07764292559532149, 0), (4.03175097196673e-8, 0.07764292559532326, 0.9969812315710851, 0), (0.9999999999999982, 4.03175098306896e-8, -4.3579435393681365e-8, 0), (0.11090545356273651, 0.275023877620697, -0.051164474338293076, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_01_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (-0.53304553, -0.464603, 0.5330521, 0.4646094)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_drawernwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (1.5707973, -0.13699229, -1.5708094)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.0000037391993661373135, -0.9999999999930093, 0), (0, 0.9999999999930093, -0.0000037391993661373135, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_01_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773567, -0.57734704, -0.57734704), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773567, -0.57734704, -0.57734704), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, 0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (-0.5773567, 0.57734704, 0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, 0.5773631, 0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704), (0.5773567, 0.57734704, -0.57734704), (0.5773567, -0.57734704, 0.57734704), (0.5773553, -0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (0.5773567, -0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, -0.5773631, 0.57733244), (-0.5773567, -0.57734704, -0.57734704), (-0.5773553, 0.5773631, -0.57733244), (0.5773567, 0.57734704, -0.57734704), (0.5773553, -0.5773631, -0.57733244), (-0.5773553, 0.5773631, -0.57733244), (0.5773553, -0.5773631, -0.57733244), (-0.5773567, -0.57734704, -0.57734704), (0.5773553, 0.5773631, 0.57733244), (-0.5773567, 0.57734704, 0.57734704), (-0.5773553, -0.5773631, 0.57733244), (0.5773553, 0.5773631, 0.57733244), (-0.5773553, -0.5773631, 0.57733244), (0.5773567, -0.57734704, 0.57734704)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005019702, -0.010811567, -0.16495954), (-0.005019702, -0.010811567, 0.16495954), (-0.005019702, 0.010811567, 0.16495954), (-0.005019702, 0.010811567, -0.16495954), (0.005019702, 0.010811567, 0.16495954), (0.005019702, 0.010811567, -0.16495954), (0.005019702, -0.010811567, 0.16495954), (0.005019702, -0.010811567, -0.16495954)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.000002346932888031006, 0.0012064725160598755, 9.834766387939453e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_01_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (-0.5773559, 0.5773559, -0.57733905), (0.5773559, -0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (-0.57735586, -0.5773559, 0.57733905), (0.57735586, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.57735586, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.57733905), (-0.5773772, -0.5773232, -0.5773505), (-0.57735586, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.57733905), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.57735586, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.005500015, 0.010811567, -0.012989666), (0.0055000074, 0.010811567, -0.012989666), (0.0055000074, -0.010811567, -0.012989666), (-0.005500015, -0.010811567, -0.012989666), (0.0055000074, -0.010811567, 0.012989668), (-0.005500015, -0.010811567, 0.012989668), (0.0055000074, 0.010811567, 0.012989668), (-0.005500015, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064725160598755, 0.15946051478385925, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_01_handle_collision_2" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773559, 0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (-0.5773559, 0.5773559, -0.577339), (0.5773559, -0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773772, -0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (-0.5773559, -0.5773559, 0.57733905), (0.5773559, 0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773559, 0.5773559, 0.57733905), (0.5773772, 0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (-0.5773559, 0.5773559, -0.577339), (-0.5773772, -0.5773232, -0.5773505), (-0.5773559, -0.5773559, 0.57733905), (-0.5773772, 0.5773232, 0.5773505), (-0.5773772, -0.5773232, -0.5773505), (-0.5773772, 0.5773232, 0.5773505), (-0.5773559, 0.5773559, -0.577339), (0.5773772, -0.5773232, 0.5773505), (0.5773559, -0.5773559, -0.577339), (0.5773772, 0.5773232, -0.5773505), (0.5773772, -0.5773232, 0.5773505), (0.5773772, 0.5773232, -0.5773505), (0.5773559, 0.5773559, 0.57733905)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0055039823, 0.010811567, -0.012989666), (0.0055039823, 0.010811567, -0.012989666), (0.0055039823, -0.010811567, -0.012989666), (-0.0055039823, -0.010811567, -0.012989666), (0.0055039823, -0.010811567, 0.012989668), (-0.0055039823, -0.010811567, 0.012989668), (0.0055039823, 0.010811567, 0.012989668), (-0.0055039823, 0.010811567, 0.012989668)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.018011700361967087, 0.0012064723996445537, -0.15945649147033691, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "fridge" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0, 0, 0)
        float physics:mass = 0
        quatf physics:principalAxes = (1, 0, 0, 0)
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_refrigeratornwnartifact>
        rel semanticTag:semanticReports = </SOMA_DFL/_class_electric_refrigeratornwnartifact>
        float urdf:link:inertial:inertia:ixx = 0
        float urdf:link:inertial:inertia:iyy = 0
        float urdf:link:inertial:inertia:izz = 0
        float urdf:link:inertial:mass = 0
        float3 urdf:link:inertial:origin:rpy = (0, 0, 0)
        point3f urdf:link:inertial:origin:xyz = (0, 0, 0)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (1.1964999437332153, 3.903700113296509, 0.9268059730529785, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_fridge_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773499, 0.5773499, -0.5773509), (0.5773717, 0.57734007, -0.577339), (0.5773499, -0.5773499, -0.5773509), (-0.5773499, 0.5773499, -0.5773509), (0.5773499, -0.5773499, -0.5773509), (-0.5773717, -0.57734007, -0.577339), (-0.5773717, -0.57734007, -0.577339), (0.5773499, -0.5773499, -0.5773509), (0.5773717, -0.57734007, 0.577339), (-0.5773717, -0.57734007, -0.577339), (0.5773717, -0.57734007, 0.577339), (-0.5773499, -0.5773499, 0.5773509), (-0.5773499, -0.5773499, 0.5773509), (0.5773717, -0.57734007, 0.577339), (0.5773499, 0.5773499, 0.5773509), (-0.5773499, -0.5773499, 0.5773509), (0.5773499, 0.5773499, 0.5773509), (-0.5773717, 0.57734007, 0.577339), (-0.5773717, 0.57734007, 0.577339), (0.5773499, 0.5773499, 0.5773509), (0.5773717, 0.57734007, -0.577339), (-0.5773717, 0.57734007, 0.577339), (0.5773717, 0.57734007, -0.577339), (-0.5773499, 0.5773499, -0.5773509), (-0.5773717, -0.57734007, -0.577339), (-0.5773499, -0.5773499, 0.5773509), (-0.5773717, 0.57734007, 0.577339), (-0.5773717, -0.57734007, -0.577339), (-0.5773717, 0.57734007, 0.577339), (-0.5773499, 0.5773499, -0.5773509), (0.5773717, -0.57734007, 0.577339), (0.5773499, -0.5773499, -0.5773509), (0.5773717, 0.57734007, -0.577339), (0.5773717, -0.57734007, 0.577339), (0.5773717, 0.57734007, -0.577339), (0.5773499, 0.5773499, 0.5773509)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.039467692, 0.29750016, -0.30000013), (0.039467692, 0.29750016, -0.30000013), (0.039467692, -0.29750016, -0.30000013), (-0.039467692, -0.29750016, -0.30000013), (0.039467692, -0.29750016, 0.30000013), (-0.039467692, -0.29750016, 0.30000013), (0.039467692, 0.29750016, 0.30000013), (-0.039467692, 0.29750016, 0.30000013)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.04630071, -0.0010071993, 0.9126619)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0, 0.999999999999999, 0), (8.742278000372465e-8, -0.999999999999996, 3.8213712347318754e-15, 0), (0.9999999999999952, 8.742278000372473e-8, 4.371139006309477e-8, 0), (0.04630070924758911, -0.0010071992874145508, 0.9126619100570679, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_1" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773556, 0.5773396, -0.5773556), (-0.57732904, 0.57734454, 0.57737726), (0.5773556, 0.5773396, 0.5773556), (-0.5773556, 0.5773396, -0.5773556), (0.5773556, 0.5773396, 0.5773556), (0.57732904, 0.57734454, -0.57737726), (0.57732904, 0.57734454, -0.57737726), (0.5773556, 0.5773396, 0.5773556), (0.57732904, -0.57734454, 0.57737726), (0.57732904, 0.57734454, -0.57737726), (0.57732904, -0.57734454, 0.57737726), (0.5773556, -0.5773396, -0.5773556), (0.5773556, -0.5773396, -0.5773556), (0.57732904, -0.57734454, 0.57737726), (-0.5773556, -0.5773396, 0.5773556), (0.5773556, -0.5773396, -0.5773556), (-0.5773556, -0.5773396, 0.5773556), (-0.57732904, -0.57734454, -0.57737726), (-0.57732904, -0.57734454, -0.57737726), (-0.5773556, -0.5773396, 0.5773556), (-0.57732904, 0.57734454, 0.57737726), (-0.57732904, -0.57734454, -0.57737726), (-0.57732904, 0.57734454, 0.57737726), (-0.5773556, 0.5773396, -0.5773556), (0.57732904, 0.57734454, -0.57737726), (0.5773556, -0.5773396, -0.5773556), (-0.57732904, -0.57734454, -0.57737726), (0.57732904, 0.57734454, -0.57737726), (-0.57732904, -0.57734454, -0.57737726), (-0.5773556, 0.5773396, -0.5773556), (0.57732904, -0.57734454, 0.57737726), (0.5773556, 0.5773396, 0.5773556), (-0.57732904, 0.57734454, 0.57737726), (0.57732904, -0.57734454, 0.57737726), (-0.57732904, 0.57734454, 0.57737726), (-0.5773556, -0.5773396, 0.5773556)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.29750016, 0.30000013, -0.57803226), (-0.29750016, 0.30000013, 0.5780323), (0.29750016, 0.30000013, 0.5780323), (0.29750016, 0.30000013, -0.57803226), (0.29750016, -0.30000013, 0.5780323), (0.29750016, -0.30000013, -0.57803226), (-0.29750016, -0.30000013, 0.5780323), (-0.29750016, -0.30000013, -0.57803226)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.04630071, -0.0010071993, -0.3448381)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (0.04630070924758911, -0.0010071992874145508, -0.34483811259269714, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_2" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773617, -0.57734454, -0.57734454), (-0.5773436, -0.57735336, 0.5773538), (-0.5773617, 0.57734454, 0.57734454), (-0.5773617, -0.57734454, -0.57734454), (-0.5773617, 0.57734454, 0.57734454), (-0.5773436, 0.57735336, -0.5773538), (-0.5773436, 0.57735336, -0.5773538), (-0.5773617, 0.57734454, 0.57734454), (0.5773436, 0.57735336, 0.5773538), (-0.5773436, 0.57735336, -0.5773538), (0.5773436, 0.57735336, 0.5773538), (0.5773617, 0.57734454, -0.57734454), (0.5773617, 0.57734454, -0.57734454), (0.5773436, 0.57735336, 0.5773538), (0.5773617, -0.57734454, 0.57734454), (0.5773617, 0.57734454, -0.57734454), (0.5773617, -0.57734454, 0.57734454), (0.5773436, -0.57735336, -0.5773538), (0.5773436, -0.57735336, -0.5773538), (0.5773617, -0.57734454, 0.57734454), (-0.5773436, -0.57735336, 0.5773538), (0.5773436, -0.57735336, -0.5773538), (-0.5773436, -0.57735336, 0.5773538), (-0.5773617, -0.57734454, -0.57734454), (-0.5773436, 0.57735336, -0.5773538), (0.5773617, 0.57734454, -0.57734454), (0.5773436, -0.57735336, -0.5773538), (-0.5773436, 0.57735336, -0.5773538), (0.5773436, -0.57735336, -0.5773538), (-0.5773617, -0.57734454, -0.57734454), (0.5773436, 0.57735336, 0.5773538), (-0.5773617, 0.57734454, 0.57734454), (-0.5773436, -0.57735336, 0.5773538), (0.5773436, 0.57735336, 0.5773538), (-0.5773436, -0.57735336, 0.5773538), (0.5773617, -0.57734454, 0.57734454)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.019376516, -0.29750016, -0.40470016), (-0.019376516, -0.29750016, 0.40470016), (-0.019376516, 0.29750016, 0.40470016), (-0.019376516, 0.29750016, -0.40470016), (0.019376516, 0.29750016, 0.40470016), (0.019376516, 0.29750016, -0.40470016), (0.019376516, -0.29750016, 0.40470016), (0.019376516, -0.29750016, -0.40470016)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.27307606, -0.0010071993, -0.50257075)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.27307605743408203, -0.0010071992874145508, -0.5025707483291626, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_3" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734674, 0.5773573, -0.57734674), (-0.5773552, 0.57736224, 0.5773334), (0.57734674, 0.5773573, 0.57734674), (-0.57734674, 0.5773573, -0.57734674), (0.57734674, 0.5773573, 0.57734674), (0.5773552, 0.57736224, -0.5773334), (0.5773552, 0.57736224, -0.5773334), (0.57734674, 0.5773573, 0.57734674), (0.5773552, -0.57736224, 0.5773334), (0.5773552, 0.57736224, -0.5773334), (0.5773552, -0.57736224, 0.5773334), (0.57734674, -0.5773573, -0.57734674), (0.57734674, -0.5773573, -0.57734674), (0.5773552, -0.57736224, 0.5773334), (-0.57734674, -0.5773573, 0.57734674), (0.57734674, -0.5773573, -0.57734674), (-0.57734674, -0.5773573, 0.57734674), (-0.5773552, -0.57736224, -0.5773334), (-0.5773552, -0.57736224, -0.5773334), (-0.57734674, -0.5773573, 0.57734674), (-0.5773552, 0.57736224, 0.5773334), (-0.5773552, -0.57736224, -0.5773334), (-0.5773552, 0.57736224, 0.5773334), (-0.57734674, 0.5773573, -0.57734674), (0.5773552, 0.57736224, -0.5773334), (0.57734674, -0.5773573, -0.57734674), (-0.5773552, -0.57736224, -0.5773334), (0.5773552, 0.57736224, -0.5773334), (-0.5773552, -0.57736224, -0.5773334), (-0.57734674, 0.5773573, -0.57734674), (0.5773552, -0.57736224, 0.5773334), (0.57734674, 0.5773573, 0.57734674), (-0.5773552, 0.57736224, 0.5773334), (0.5773552, -0.57736224, 0.5773334), (-0.5773552, 0.57736224, 0.5773334), (-0.57734674, -0.5773573, 0.57734674)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0047721397, 0.015617996, -0.09169997), (-0.0047721397, 0.015617996, 0.09169997), (0.0047721434, 0.015617996, 0.09169997), (0.0047721434, 0.015617996, -0.09169997), (0.0047721434, -0.015617996, 0.09169997), (0.0047721434, -0.015617996, -0.09169997), (-0.0047721397, -0.015617996, 0.09169997), (-0.0047721397, -0.015617996, -0.09169997)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.30807057, 0.2917208, -0.19446273)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (-0.308070570230484, 0.29172080755233765, -0.19446273148059845, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_4" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.577347, -0.5773519, -0.5773519), (-0.5773515, -0.5773598, 0.5773395), (-0.577347, 0.5773519, 0.5773519), (-0.577347, -0.5773519, -0.5773519), (-0.577347, 0.5773519, 0.5773519), (-0.5773515, 0.5773598, -0.5773395), (-0.5773515, 0.5773598, -0.5773395), (-0.577347, 0.5773519, 0.5773519), (0.5773515, 0.5773598, 0.5773395), (-0.5773515, 0.5773598, -0.5773395), (0.5773515, 0.5773598, 0.5773395), (0.577347, 0.5773519, -0.5773519), (0.577347, 0.5773519, -0.5773519), (0.5773515, 0.5773598, 0.5773395), (0.577347, -0.5773519, 0.5773519), (0.577347, 0.5773519, -0.5773519), (0.577347, -0.5773519, 0.5773519), (0.5773515, -0.5773598, -0.5773395), (0.5773515, -0.5773598, -0.5773395), (0.577347, -0.5773519, 0.5773519), (-0.5773515, -0.5773598, 0.5773395), (0.5773515, -0.5773598, -0.5773395), (-0.5773515, -0.5773598, 0.5773395), (-0.577347, -0.5773519, -0.5773519), (-0.5773515, 0.5773598, -0.5773395), (0.577347, 0.5773519, -0.5773519), (0.5773515, -0.5773598, -0.5773395), (-0.5773515, 0.5773598, -0.5773395), (0.5773515, -0.5773598, -0.5773395), (-0.577347, -0.5773519, -0.5773519), (0.5773515, 0.5773598, 0.5773395), (-0.577347, 0.5773519, 0.5773519), (-0.5773515, -0.5773598, 0.5773395), (0.5773515, 0.5773598, 0.5773395), (-0.5773515, -0.5773598, 0.5773395), (0.577347, -0.5773519, 0.5773519)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.0028509796, -0.014737576, -0.09169997), (-0.0028509796, -0.014737576, 0.09169997), (-0.0028509796, 0.014737576, 0.09169997), (-0.0028509796, 0.014737576, -0.09169997), (0.0028509796, 0.014737576, 0.09169997), (0.0028509796, 0.014737576, -0.09169997), (0.0028509796, -0.014737576, 0.09169997), (0.0028509796, -0.014737576, -0.09169997)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.3208376, 0.2722111, -0.19446273)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.3208375871181488, 0.27221110463142395, -0.19446273148059845, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_5" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773474, 0.5773561, -0.5773474), (-0.57736874, 0.5773368, 0.57734525), (0.5773474, 0.5773561, 0.5773474), (-0.5773474, 0.5773561, -0.5773474), (0.5773474, 0.5773561, 0.5773474), (0.57736874, 0.5773368, -0.57734525), (0.57736874, 0.5773368, -0.57734525), (0.5773474, 0.5773561, 0.5773474), (0.57736874, -0.5773368, 0.57734525), (0.57736874, 0.5773368, -0.57734525), (0.57736874, -0.5773368, 0.57734525), (0.5773474, -0.5773561, -0.5773474), (0.5773474, -0.5773561, -0.5773474), (0.57736874, -0.5773368, 0.57734525), (-0.5773474, -0.5773561, 0.5773474), (0.5773474, -0.5773561, -0.5773474), (-0.5773474, -0.5773561, 0.5773474), (-0.57736874, -0.5773368, -0.57734525), (-0.57736874, -0.5773368, -0.57734525), (-0.5773474, -0.5773561, 0.5773474), (-0.57736874, 0.5773368, 0.57734525), (-0.57736874, -0.5773368, -0.57734525), (-0.57736874, 0.5773368, 0.57734525), (-0.5773474, 0.5773561, -0.5773474), (0.57736874, 0.5773368, -0.57734525), (0.5773474, -0.5773561, -0.5773474), (-0.57736874, -0.5773368, -0.57734525), (0.57736874, 0.5773368, -0.57734525), (-0.57736874, -0.5773368, -0.57734525), (-0.5773474, 0.5773561, -0.5773474), (0.57736874, -0.5773368, 0.57734525), (0.5773474, 0.5773561, 0.5773474), (-0.57736874, 0.5773368, 0.57734525), (0.57736874, -0.5773368, 0.57734525), (-0.57736874, 0.5773368, 0.57734525), (-0.5773474, -0.5773561, 0.5773474)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.024998691, 0.30000013, -0.32000005), (-0.024998691, 0.30000013, 0.3200001), (0.024998698, 0.30000013, 0.3200001), (0.024998698, 0.30000013, -0.32000005), (0.024998698, -0.30000013, 0.3200001), (0.024998698, -0.30000013, -0.32000005), (-0.024998691, -0.30000013, 0.3200001), (-0.024998691, -0.30000013, -0.32000005)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.04630071, 0.27149427, 0.55319417)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (0.04630070924758911, 0.2714942693710327, 0.5531941652297974, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_6" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773472, 0.5773562, -0.5773472), (-0.57736856, 0.5773366, 0.57734555), (0.5773472, 0.5773562, 0.5773472), (-0.5773472, 0.5773562, -0.5773472), (0.5773472, 0.5773562, 0.5773472), (0.57736856, 0.5773366, -0.57734555), (0.57736856, 0.5773366, -0.57734555), (0.5773472, 0.5773562, 0.5773472), (0.57736856, -0.5773366, 0.57734555), (0.57736856, 0.5773366, -0.57734555), (0.57736856, -0.5773366, 0.57734555), (0.5773472, -0.5773562, -0.5773472), (0.5773472, -0.5773562, -0.5773472), (0.57736856, -0.5773366, 0.57734555), (-0.5773472, -0.5773562, 0.5773472), (0.5773472, -0.5773562, -0.5773472), (-0.5773472, -0.5773562, 0.5773472), (-0.57736856, -0.5773366, -0.57734555), (-0.57736856, -0.5773366, -0.57734555), (-0.5773472, -0.5773562, 0.5773472), (-0.57736856, 0.5773366, 0.57734555), (-0.57736856, -0.5773366, -0.57734555), (-0.57736856, 0.5773366, 0.57734555), (-0.5773472, 0.5773562, -0.5773472), (0.57736856, 0.5773366, -0.57734555), (0.5773472, -0.5773562, -0.5773472), (-0.57736856, -0.5773366, -0.57734555), (0.57736856, 0.5773366, -0.57734555), (-0.57736856, -0.5773366, -0.57734555), (-0.5773472, 0.5773562, -0.5773472), (0.57736856, -0.5773366, 0.57734555), (0.5773472, 0.5773562, 0.5773472), (-0.57736856, 0.5773366, 0.57734555), (0.57736856, -0.5773366, 0.57734555), (-0.57736856, 0.5773366, 0.57734555), (-0.5773472, -0.5773562, 0.5773472)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.02500159, 0.30000013, -0.32000008), (-0.02500159, 0.30000013, 0.32000008), (0.025001597, 0.30000013, 0.32000008), (0.025001597, 0.30000013, -0.32000008), (0.025001597, -0.30000013, 0.32000008), (0.025001597, -0.30000013, -0.32000008), (-0.02500159, -0.30000013, 0.32000008), (-0.02500159, -0.30000013, -0.32000008)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.04630071, -0.27350575, 0.55319417)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (0.04630070924758911, -0.2735057473182678, 0.5531941652297974, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_7" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.5773646, -0.5773431, -0.5773431), (-0.577368, -0.5773376, 0.5773452), (-0.5773646, 0.5773431, 0.5773431), (-0.5773646, -0.5773431, -0.5773431), (-0.5773646, 0.5773431, 0.5773431), (-0.577368, 0.5773376, -0.5773452), (-0.577368, 0.5773376, -0.5773452), (-0.5773646, 0.5773431, 0.5773431), (0.577368, 0.5773376, 0.5773452), (-0.577368, 0.5773376, -0.5773452), (0.577368, 0.5773376, 0.5773452), (0.5773646, 0.5773431, -0.5773431), (0.5773646, 0.5773431, -0.5773431), (0.577368, 0.5773376, 0.5773452), (0.5773646, -0.5773431, 0.5773431), (0.5773646, 0.5773431, -0.5773431), (0.5773646, -0.5773431, 0.5773431), (0.577368, -0.5773376, -0.5773452), (0.577368, -0.5773376, -0.5773452), (0.5773646, -0.5773431, 0.5773431), (-0.577368, -0.5773376, 0.5773452), (0.577368, -0.5773376, -0.5773452), (-0.577368, -0.5773376, 0.5773452), (-0.5773646, -0.5773431, -0.5773431), (-0.577368, 0.5773376, -0.5773452), (0.5773646, 0.5773431, -0.5773431), (0.577368, -0.5773376, -0.5773452), (-0.577368, 0.5773376, -0.5773452), (0.577368, -0.5773376, -0.5773452), (-0.5773646, -0.5773431, -0.5773431), (0.577368, 0.5773376, 0.5773452), (-0.5773646, 0.5773431, 0.5773431), (-0.577368, -0.5773376, 0.5773452), (0.577368, 0.5773376, 0.5773452), (-0.577368, -0.5773376, 0.5773452), (0.5773646, -0.5773431, 0.5773431)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.11500156, -0.24749994, -0.32000005), (-0.11500156, -0.24749994, 0.3200001), (-0.11500156, 0.24749994, 0.3200001), (-0.11500156, 0.24749994, -0.32000005), (0.11500156, 0.24749994, 0.3200001), (0.11500156, 0.24749994, -0.32000005), (0.11500156, -0.24749994, 0.3200001), (0.11500156, -0.24749994, -0.32000005)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.23129928, -0.0010042787, 0.55319417)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_Fridge_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.2312992811203003, -0.0010042786598205566, 0.5531941652297974, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "fridge_door_joint" (
            apiSchemas = ["UrdfJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/fridge>
            rel physics:body1 = </dlr_kitchen/fridge_door>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.255, -0.298, 0.411)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 90.00021
            vector3f urdf:joint:axis = (0, 0, 1)
            rel urdf:joint:child = </dlr_kitchen/fridge_door>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 1.5708001
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.255, -0.298, 0.411)
            rel urdf:joint:parent = </dlr_kitchen/fridge>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "fridge_door" (
        apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (-0.018694345, 0.29774404, -0.00002462171)
        float3 physics:diagonalInertia = (1.8229358, 2.608146, 4.4221373)
        bool physics:kinematicEnabled = 0
        float physics:mass = 22.043718
        quatf physics:principalAxes = (-0.5, -0.49999997, -0.5, 0.5)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = </SOMA_DFL/_class_doornwnartifactmovable_barrier>
        rel semanticTag:semanticReports = [
            </SOMA_DFL/_class_doornwnartifactmovable_barrier>,
            </SOMA_DFL/_class_doorwaynwnartifact>,
            </SOMA_DFL/_class_electric_refrigeratornwnartifact>,
        ]
        float urdf:link:inertial:inertia:ixx = 1.8229358
        float urdf:link:inertial:inertia:iyy = 2.608146
        float urdf:link:inertial:inertia:izz = 4.4221373
        float urdf:link:inertial:mass = 22.043718
        float3 urdf:link:inertial:origin:rpy = (1.5707963, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-0.018694345, 0.29774404, -0.00002462171)
        matrix4d xformOp:transform = ( (-0.0000037391993661373135, 0.9999999999930093, 0, 0), (-0.9999999999930093, -0.0000037391993661373135, 0, 0), (0, 0, 1, 0), (1.4945009050947657, 3.6487012323481034, 1.337805986404419, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_fridge_door_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
            normal3f[] normals = [(-0.57734805, -0.5773514, -0.57735133), (-0.5773441, -0.5773531, 0.5773536), (-0.57734805, 0.5773514, 0.57735133), (-0.57734805, -0.5773514, -0.57735133), (-0.57734805, 0.5773514, 0.57735133), (-0.5773441, 0.5773531, -0.5773536), (-0.5773441, 0.5773531, -0.5773536), (-0.57734805, 0.5773514, 0.57735133), (0.5773441, 0.5773531, 0.5773536), (-0.5773441, 0.5773531, -0.5773536), (0.5773441, 0.5773531, 0.5773536), (0.57734805, 0.5773514, -0.57735133), (0.57734805, 0.5773514, -0.57735133), (0.5773441, 0.5773531, 0.5773536), (0.57734805, -0.5773514, 0.57735133), (0.57734805, 0.5773514, -0.57735133), (0.57734805, -0.5773514, 0.57735133), (0.5773441, -0.5773531, -0.5773536), (0.5773441, -0.5773531, -0.5773536), (0.57734805, -0.5773514, 0.57735133), (-0.5773441, -0.5773531, 0.5773536), (0.5773441, -0.5773531, -0.5773536), (-0.5773441, -0.5773531, 0.5773536), (-0.57734805, -0.5773514, -0.57735133), (-0.5773441, 0.5773531, -0.5773536), (0.57734805, 0.5773514, -0.57735133), (0.5773441, -0.5773531, -0.5773536), (-0.5773441, 0.5773531, -0.5773536), (0.5773441, -0.5773531, -0.5773536), (-0.57734805, -0.5773514, -0.57735133), (0.5773441, 0.5773531, 0.5773536), (-0.57734805, 0.5773514, 0.57735133), (-0.5773441, -0.5773531, 0.5773536), (0.5773441, 0.5773531, 0.5773536), (-0.5773441, -0.5773531, 0.5773536), (0.57734805, -0.5773514, 0.57735133)] (
                interpolation = "faceVarying"
            )
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            point3f[] points = [(-0.018714488, -0.29596913, -0.49747413), (-0.018714488, -0.29596913, 0.49747413), (-0.018714488, 0.29596913, 0.49747413), (-0.018714488, 0.29596913, -0.49747413), (0.018714488, 0.29596913, 0.49747413), (0.018714488, 0.29596913, -0.49747413), (0.018714488, -0.29596913, 0.49747413), (0.018714488, -0.29596913, -0.49747413)]
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.018694345, 0.29774404, -0.000024616718)
            asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_FridgeDoor_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.01869434490799904, 0.2977440357208252, -0.000024616718292236328, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "fridge_door_handle" (
            apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "SemanticTagAPI"]
        )
        {
            point3f physics:centerOfMass = (0.0066252495, 0.0042432663, 0.000022690358)
            float3 physics:diagonalInertia = (0.000019355486, 0.00020893302, 0.00022138169)
            float physics:mass = 0.07344738
            quatf physics:principalAxes = (-0.65429753, -0.2680782, 0.65432507, 0.2681185)
            rel semanticTag:semanticLabels = </SOMA_DFL/_class_handlenwnartifact>
            rel semanticTag:semanticReports = [
                </SOMA_DFL/_class_doornwnartifactmovable_barrier>,
                </SOMA_DFL/_class_doorknobnwnartifact>,
                </SOMA_DFL/_class_doorwaynwnartifact>,
                </SOMA_DFL/_class_electric_refrigeratornwnartifact>,
                </SOMA_DFL/_class_handlenwnartifact>,
            ]
            float urdf:link:inertial:inertia:ixx = 0.000019355486
            float urdf:link:inertial:inertia:iyy = 0.00020893302
            float urdf:link:inertial:inertia:izz = 0.00022138169
            float urdf:link:inertial:mass = 0.07344738
            float3 urdf:link:inertial:origin:rpy = (1.5708169, -0.79304487, -1.5708785)
            point3f urdf:link:inertial:origin:xyz = (0.0066252495, 0.0042432663, 0.000022690358)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.06551499664783478, 0.5762209892272949, -0.39390599727630615, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_fridge_door_handle_collision_0" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773471, 0.5773565, -0.5773471), (-0.5773524, 0.57735926, 0.5773391), (0.5773471, 0.5773565, 0.5773471), (-0.5773471, 0.5773565, -0.5773471), (0.5773471, 0.5773565, 0.5773471), (0.5773524, 0.57735926, -0.5773391), (0.5773524, 0.57735926, -0.5773391), (0.5773471, 0.5773565, 0.5773471), (0.5773524, -0.57735926, 0.5773391), (0.5773524, 0.57735926, -0.5773391), (0.5773524, -0.57735926, 0.5773391), (0.5773471, -0.5773565, -0.5773471), (0.5773471, -0.5773565, -0.5773471), (0.5773524, -0.57735926, 0.5773391), (-0.5773471, -0.5773565, 0.5773471), (0.5773471, -0.5773565, -0.5773471), (-0.5773471, -0.5773565, 0.5773471), (-0.5773524, -0.57735926, -0.5773391), (-0.5773524, -0.57735926, -0.5773391), (-0.5773471, -0.5773565, 0.5773471), (-0.5773524, 0.57735926, 0.5773391), (-0.5773524, -0.57735926, -0.5773391), (-0.5773524, 0.57735926, 0.5773391), (-0.5773471, 0.5773565, -0.5773471), (0.5773524, 0.57735926, -0.5773391), (0.5773471, -0.5773565, -0.5773471), (-0.5773524, -0.57735926, -0.5773391), (0.5773524, 0.57735926, -0.5773391), (-0.5773524, -0.57735926, -0.5773391), (-0.5773471, 0.5773565, -0.5773471), (0.5773524, -0.57735926, 0.5773391), (0.5773471, 0.5773565, 0.5773471), (-0.5773524, 0.57735926, 0.5773391), (0.5773524, -0.57735926, 0.5773391), (-0.5773524, 0.57735926, 0.5773391), (-0.5773471, -0.5773565, 0.5773471)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0036793696, 0.015574321, -0.091612935), (-0.0036793696, 0.015574321, 0.09161294), (0.0036793696, 0.015574321, 0.09161294), (0.0036793696, 0.015574321, -0.091612935), (0.0036793696, -0.015574321, 0.09161294), (0.0036793696, -0.015574321, -0.091612935), (-0.0036793696, -0.015574321, 0.09161294), (-0.0036793696, -0.015574321, -0.091612935)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
                point3f urdf:collision:origin:xyz = (0.012037085, 0.012078096, 0.00002268888)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_FridgeDoorHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-4.371139006309477e-8, 0.999999999999999, 0, 0), (-0.999999999999999, -4.371139006309477e-8, 0, 0), (0, 0, 1, 0), (0.012037085369229317, 0.01207809615880251, 0.000022688880562782288, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_fridge_door_handle_collision_1" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 3, 2, 4, 3, 4, 5, 5, 4, 6, 5, 6, 7, 7, 6, 1, 7, 1, 0, 3, 5, 7, 3, 7, 0, 4, 2, 1, 4, 1, 6]
                normal3f[] normals = [(-0.5773472, -0.5773518, -0.5773518), (-0.57735217, -0.57736, 0.57733864), (-0.57734716, 0.5773518, 0.5773518), (-0.5773472, -0.5773518, -0.5773518), (-0.57734716, 0.5773518, 0.5773518), (-0.5773522, 0.57736, -0.57733864), (-0.5773522, 0.57736, -0.57733864), (-0.57734716, 0.5773518, 0.5773518), (0.57735217, 0.57736, 0.57733864), (-0.5773522, 0.57736, -0.57733864), (0.57735217, 0.57736, 0.57733864), (0.5773472, 0.5773518, -0.5773518), (0.5773472, 0.5773518, -0.5773518), (0.57735217, 0.57736, 0.57733864), (0.57734716, -0.5773518, 0.5773518), (0.5773472, 0.5773518, -0.5773518), (0.57734716, -0.5773518, 0.5773518), (0.5773522, -0.57736, -0.57733864), (0.5773522, -0.57736, -0.57733864), (0.57734716, -0.5773518, 0.5773518), (-0.57735217, -0.57736, 0.57733864), (0.5773522, -0.57736, -0.57733864), (-0.57735217, -0.57736, 0.57733864), (-0.5773472, -0.5773518, -0.5773518), (-0.5773522, 0.57736, -0.57733864), (0.5773472, 0.5773518, -0.5773518), (0.5773522, -0.57736, -0.57733864), (-0.5773522, 0.57736, -0.57733864), (0.5773522, -0.57736, -0.57733864), (-0.5773472, -0.5773518, -0.5773518), (0.57735217, 0.57736, 0.57733864), (-0.57734716, 0.5773518, 0.5773518), (-0.57735217, -0.57736, 0.57733864), (0.57735217, 0.57736, 0.57733864), (-0.57735217, -0.57736, 0.57733864), (0.57734716, -0.5773518, 0.5773518)] (
                    interpolation = "faceVarying"
                )
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                point3f[] points = [(-0.0029354063, -0.014618274, -0.091612935), (-0.0029354063, -0.014618274, 0.09161294), (-0.0029354063, 0.014618274, 0.09161294), (-0.0029354063, 0.014618274, -0.091612935), (0.002935406, 0.014618274, 0.09161294), (0.002935406, 0.014618274, -0.091612935), (0.002935406, -0.014618274, 0.09161294), (0.002935406, -0.014618274, -0.091612935)]
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (-0.0006018296, -0.0062195305, 0.00002268888)
                asset urdf:geometry:mesh:filename = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/output/dlr_kitchen/usda/dlr_kitchen/meshes/stl/UCX_FridgeDoorHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.0006018296116963029, -0.00621953047811985, 0.000022688880562782288, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "milk_box" (
        apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "SemanticTagAPI"]
    )
    {
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0.0001, 0.0001, 0.0001)
        float physics:mass = 0.1
        quatf physics:principalAxes = (1, 0, 0, 0)
        bool physics:rigidBodyEnabled = 1
        rel semanticTag:semanticLabels = [
            </SOMA_DFL/_class_boxnwnartifactcontainer>,
            </SOMA_DFL/_class_milknwnfoodbeverage>,
        ]
        rel semanticTag:semanticReports = [
            </SOMA_DFL/_class_boxnwnartifactcontainer>,
            </SOMA_DFL/_class_boxnwnartifactseat>,
            </SOMA_DFL/_class_milknwnfoodbeverage>,
            </SOMA_DFL/_class_milknwnfoodfoodstuff>,
        ]
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.042181729463922, 3.8289005585775424, 1.0335656518259984, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "milk_box_geom_visual_0_SM_MilkBox" (
            apiSchemas = ["MaterialBindingAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 2, 3, 0, 4, 7, 6, 6, 5, 4, 0, 4, 5, 5, 1, 0, 1, 5, 6, 6, 2, 1, 2, 6, 7, 7, 3, 2, 4, 0, 3, 3, 7, 4]
            rel material:binding = </dlr_kitchen/milk_box/milk_box_geom_visual_0_SM_MilkBox/Materials/M_MilkBox>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.03, 0.0475, -0.1), (0.03, -0.0475, -0.1), (-0.03, -0.0475, -0.1), (-0.03, 0.0475, -0.1), (0.03, 0.0475, 0.1), (0.03, -0.0475, 0.1), (-0.03, -0.0475, 0.1), (-0.03, 0.0475, 0.1)]
            color3f[] primvars:displayColor = [(0, 0, 0)]
            float[] primvars:displayOpacity = [0]
            texCoord2f[] primvars:st = [(0.71131, 0.13337), (0.71131, 0.34454), (0.57794, 0.34454), (0.57794, 0.34454), (0.57794, 0.13337), (0.71131, 0.13337), (0, 0.13337), (0.13337, 0.13337), (0.13337, 0.34454), (0.13337, 0.34454), (0, 0.34454), (0, 0.13337), (1, 0), (1, 0.60777), (0.71131, 0.60777), (0.71131, 0.60777), (0.71131, 0), (1, 0), (0.57794, 0.47791), (0.13337, 0.47791), (0.13337, 0.34454), (0.13337, 0.34454), (0.57794, 0.34454), (0.57794, 0.47791), (0.57794, 0.34454), (0.13337, 0.34454), (0.13337, 0.13337), (0.13337, 0.13337), (0.57794, 0.13337), (0.57794, 0.34454), (0.13337, 0), (0.57794, 0), (0.57794, 0.13337), (0.57794, 0.13337), (0.13337, 0.13337), (0.13337, 0)] (
                interpolation = "faceVarying"
            )
            texCoord2f[] primvars:UVMap = [(0.71131, 0.13337), (0.71131, 0.34454), (0.57794, 0.34454), (0.57794, 0.34454), (0.57794, 0.13337), (0.71131, 0.13337), (0, 0.13337), (0.13337, 0.13337), (0.13337, 0.34454), (0.13337, 0.34454), (0, 0.34454), (0, 0.13337), (1, 0), (1, 0.60777), (0.71131, 0.60777), (0.71131, 0.60777), (0.71131, 0), (1, 0), (0.57794, 0.47791), (0.13337, 0.47791), (0.13337, 0.34454), (0.13337, 0.34454), (0.57794, 0.34454), (0.57794, 0.47791), (0.57794, 0.34454), (0.13337, 0.34454), (0.13337, 0.13337), (0.13337, 0.13337), (0.57794, 0.13337), (0.57794, 0.34454), (0.13337, 0), (0.57794, 0), (0.57794, 0.13337), (0.57794, 0.13337), (0.13337, 0.13337), (0.13337, 0)] (
                interpolation = "faceVarying"
            )
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "M_MilkBox"
                {
                    token outputs:surface.connect = </dlr_kitchen/milk_box/milk_box_geom_visual_0_SM_MilkBox/Materials/M_MilkBox/Principled_BSDF.outputs:surface>

                    def Shader "Principled_BSDF"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        float inputs:clearcoat = 0
                        float inputs:clearcoatRoughness = 0.03
                        color3f inputs:diffuseColor.connect = </dlr_kitchen/milk_box/milk_box_geom_visual_0_SM_MilkBox/Materials/M_MilkBox/Image_Texture.outputs:rgb>
                        float inputs:ior = 1.45
                        float inputs:metallic = 0
                        float inputs:opacity = 1
                        float inputs:roughness = 0.5
                        float inputs:specular = 0
                        token outputs:surface
                    }

                    def Shader "Image_Texture"
                    {
                        uniform token info:id = "UsdUVTexture"
                        asset inputs:file = @/media/giangnguyen/Storage/Multiverse-Docker/images/Multiverse-Tutorials-image/Multiverse-Tutorials/resources/milk_box/meshes/textures/milk_box.png@
                        token inputs:sourceColorSpace = "sRGB"
                        float2 inputs:st.connect = </dlr_kitchen/milk_box/milk_box_geom_visual_0_SM_MilkBox/Materials/M_MilkBox/uvmap.outputs:result>
                        float3 outputs:rgb
                    }

                    def Shader "uvmap"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname = "UVMap"
                        float2 outputs:result
                    }
                }
            }
        }

        def Cube "milk_box_geom_collision_0" (
            apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(1, 1, 1)]
            float[] primvars:displayOpacity = [0]
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.03, 0, 0, 0), (0, 0.0475, 0, 0), (0, 0, 0.1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }
}

def "SOMA_DFL"
{
    class "_class_kitchennwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "kitchen.n.wn.artifact"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_drawernwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "drawer.n.wn.artifact"
        string rdf:definition = "a boxlike container in a piece of furniture; made so as to slide in and out"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_handlenwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "handle.n.wn.artifact"
        string rdf:definition = 'the appendage to an object that is designed to be held in order to use or move it; "he grabbed the hammer by the handle"; "it was an old briefcase but it still had a good grip"'
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_doornwnartifactmovable_barrier" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "door.n.wn.artifact..movable_barrier"
        string rdf:definition = 'a swinging or sliding barrier that will close the entrance to a room or building or vehicle; "he knocked on the door"; "he slammed the door as he left"'
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_doorwaynwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "doorway.n.wn.artifact"
        string rdf:definition = 'the entrance (the space in a wall) through which you enter or leave a room or building; the space that a door can close; "he stuck his head in the doorway"'
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_ovennwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "oven.n.wn.artifact"
        string rdf:definition = "kitchen appliance used for baking or roasting"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_doorknobnwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "doorknob.n.wn.artifact"
        string rdf:definition = "a knob used to release the catch when opening a door (often called `doorhandle' in Great Britain)"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_refrigeratornwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "refrigerator.n.wn.artifact"
        string rdf:definition = "white goods in which food can be stored at low temperatures"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_electric_refrigeratornwnartifact" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "electric_refrigerator.n.wn.artifact"
        string rdf:definition = "a refrigerator in which the coolant is pumped around by an electric motor"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_boxnwnartifactcontainer" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "box.n.wn.artifact..container"
        string rdf:definition = 'a (usually rectangular) container; may have a lid; "he rummaged through a box of spare parts"'
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_boxnwnartifactseat" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "box.n.wn.artifact..seat"
        string rdf:definition = "the driver's seat on a coach; \"an armed guard sat in the box with the driver\""
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_milknwnfoodbeverage" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "milk.n.wn.food..beverage"
        string rdf:definition = "a white nutritious liquid secreted by mammals and used as food by human beings"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }

    class "_class_milknwnfoodfoodstuff" (
        prepend apiSchemas = ["RdfAPI"]
    )
    {
        string rdf:conceptName = "milk.n.wn.food..foodstuff"
        string rdf:definition = "any of several nutritive milklike liquids"
        string rdf:namespace = "http://www.ease-crc.org/ont/SOMA_DFL.owl#"
    }
}

